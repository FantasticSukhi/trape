//********************************************************
//**					JQUERY							**
//********************************************************
/*! jQuery v2.1.3 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.3",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=hb(),z=hb(),A=hb(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=/[+~]/,bb=/'|\\/g,cb=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),db=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},eb=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fb){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function gb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(bb,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+rb(o[l]);w=ab.test(a)&&pb(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function hb(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ib(a){return a[u]=!0,a}function jb(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function kb(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function lb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function nb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function ob(a){return ib(function(b){return b=+b,ib(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pb(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=gb.support={},f=gb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=gb.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",eb,!1):e.attachEvent&&e.attachEvent("onunload",eb)),p=!f(g),c.attributes=jb(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=jb(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=jb(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(jb(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\f]' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),jb(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&jb(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",P)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return lb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?lb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},gb.matches=function(a,b){return gb(a,null,null,b)},gb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return gb(b,n,null,[a]).length>0},gb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},gb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},gb.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},gb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=gb.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=gb.selectors={cacheLength:50,createPseudo:ib,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||"").replace(cb,db),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||gb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&gb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=gb.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||gb.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ib(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ib(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ib(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ib(function(a){return function(b){return gb(a,b).length>0}}),contains:ib(function(a){return a=a.replace(cb,db),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ib(function(a){return W.test(a||"")||gb.error("unsupported lang: "+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:ob(function(){return[0]}),last:ob(function(a,b){return[b-1]}),eq:ob(function(a,b,c){return[0>c?c+b:c]}),even:ob(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:ob(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:ob(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:ob(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=mb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=nb(b);function qb(){}qb.prototype=d.filters=d.pseudos,d.setFilters=new qb,g=gb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?gb.error(a):z(a,i).slice(0)};function rb(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function sb(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function tb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ub(a,b,c){for(var d=0,e=b.length;e>d;d++)gb(a,b[d],c);return c}function vb(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wb(a,b,c,d,e,f){return d&&!d[u]&&(d=wb(d)),e&&!e[u]&&(e=wb(e,f)),ib(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ub(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:vb(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=vb(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=vb(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sb(function(a){return a===b},h,!0),l=sb(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sb(tb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wb(i>1&&tb(m),i>1&&rb(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&xb(a.slice(i,e)),f>e&&xb(a=a.slice(e)),f>e&&rb(a))}m.push(c)}return tb(m)}function yb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=vb(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&gb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ib(f):f}return h=gb.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,yb(e,d)),f.selector=a}return f},i=gb.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&pb(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&rb(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&pb(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=jb(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),jb(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||kb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&jb(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||kb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),jb(function(a){return null==a.getAttribute("disabled")})||kb(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),gb}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler("ready"),n(l).off("ready"))))}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)
},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";k.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bb=/<([\w:]+)/,cb=/<|&#?\w+;/,db=/<(?:script|style|link)/i,eb=/checked\s*(?:[^=]|=\s*.checked.)/i,fb=/^$|\/(?:java|ecma)script/i,gb=/^true\/(.*)/,hb=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ib={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function kb(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,"script"),g.length>0&&mb(g,!i&&ob(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if("object"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement("div")),g=(bb.exec(e)||["",""])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,"<$1></$2>")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),"script"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||"")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(ab,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,"script"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||"")&&!L.access(h,"globalEval")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,"")))}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),"none"!==c&&c||(qb=(qb||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wb=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp("^("+Q+")(.*)$","i"),Bb=new RegExp("^([+-])=("+Q+")","i"),Cb={position:"absolute",visibility:"hidden",display:"block"},Db={letterSpacing:"0",fontWeight:"400"},Eb=["Webkit","O","Moz","ms"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Hb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ib(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?"border":"content"),d,f)+"px"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",tb(d.nodeName)))):(e=S(d),"none"===c&&e||L.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),"normal"===e&&b in Db&&(e=Db[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,"display"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xb,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pb=/queueHooks$/,Qb=[Vb],Rb={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||tb(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?tb(a.nodeName):j)&&(o.display=j);else{q?"hidden"in q&&(p=q.hidden):q=L.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb("show"),slideUp:Tb("hide"),slideToggle:Tb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))
},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ac," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ac," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ac," ").indexOf(b)>=0)return!0;return!1}});var bc=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bc,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cc=n.now(),dc=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&&n.error("Invalid XML: "+a),b};var ec=/#.*$/,fc=/([?&])_=[^&]*/,gc=/^(.*?):[ \t]*([^\r\n]*)$/gm,hc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ic=/^(?:GET|HEAD)$/,jc=/^\/\//,kc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,lc={},mc={},nc="*/".concat("*"),oc=a.location.href,pc=kc.exec(oc.toLowerCase())||[];function qc(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rc(a,b,c,d){var e={},f=a===mc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function sc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function uc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:oc,type:"GET",isLocal:hc.test(pc[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":nc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sc(sc(a,n.ajaxSettings),b):sc(n.ajaxSettings,a)},ajaxPrefilter:qc(lc),ajaxTransport:qc(mc),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gc.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||oc)+"").replace(ec,"").replace(jc,pc[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=kc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pc[1]&&h[2]===pc[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(pc[3]||("http:"===pc[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rc(lc,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!ic.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=fc.test(d)?d.replace(fc,"$1_="+cc++):d+(dc.test(d)?"&":"?")+"_="+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&&v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+nc+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rc(mc,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tc(k,v,f)),u=uc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vc=/%20/g,wc=/\[\]$/,xc=/\r?\n/g,yc=/^(?:submit|button|image|reset|file)$/i,zc=/^(?:input|select|textarea|keygen)/i;function Ac(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wc.test(a)?d(a,e):Ac(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Ac(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ac(c,a[c],b,e);return d.join("&").replace(vc,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&zc.test(this.nodeName)&&!yc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xc,"\r\n")}}):{name:b.name,value:c.replace(xc,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bc=0,Cc={},Dc={0:200,1223:204},Ec=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in Cc)Cc[a]()}),k.cors=!!Ec&&"withCredentials"in Ec,k.ajax=Ec=!!Ec,n.ajaxTransport(function(a){var b;return k.cors||Ec&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cc[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Dc[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Cc[g]=b("abort");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fc=[],Gc=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Fc.pop()||n.expando+"_"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gc.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gc.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gc,"$1"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hc=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Hc)return Hc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ic=a.document.documentElement;function Jc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ic;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Ic})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var Kc=a.jQuery,Lc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lc),b&&a.jQuery===n&&(a.jQuery=Kc),n},typeof b===U&&(a.jQuery=a.$=n),n});
//# sourceMappingURL=jquery.min.map

//********************************************************
//**					socket.io						**
//********************************************************

/*!
 * Socket.IO v4.0.1
 * (c) 2014-2021 Guillermo Rauch
 * Released under the MIT License.
 */
(function webpackUniversalModuleDefinition(root, factory) {
    if(typeof exports === 'object' && typeof module === 'object')
        module.exports = factory();
    else if(typeof define === 'function' && define.amd)
        define([], factory);
    else if(typeof exports === 'object')
        exports["io"] = factory();
    else
        root["io"] = factory();
})(self, function() {
    return /******/ (function(modules) { // webpackBootstrap
        /******/ 	// The module cache
        /******/ 	var installedModules = {};
        /******/
        /******/ 	// The require function
        /******/ 	function __webpack_require__(moduleId) {
            /******/
            /******/ 		// Check if module is in cache
            /******/ 		if(installedModules[moduleId]) {
                /******/ 			return installedModules[moduleId].exports;
                /******/ 		}
            /******/ 		// Create a new module (and put it into the cache)
            /******/ 		var module = installedModules[moduleId] = {
                /******/ 			i: moduleId,
                /******/ 			l: false,
                /******/ 			exports: {}
                /******/ 		};
            /******/
            /******/ 		// Execute the module function
            /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            /******/
            /******/ 		// Flag the module as loaded
            /******/ 		module.l = true;
            /******/
            /******/ 		// Return the exports of the module
            /******/ 		return module.exports;
            /******/ 	}
        /******/
        /******/
        /******/ 	// expose the modules object (__webpack_modules__)
        /******/ 	__webpack_require__.m = modules;
        /******/
        /******/ 	// expose the module cache
        /******/ 	__webpack_require__.c = installedModules;
        /******/
        /******/ 	// define getter function for harmony exports
        /******/ 	__webpack_require__.d = function(exports, name, getter) {
            /******/ 		if(!__webpack_require__.o(exports, name)) {
                /******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
                /******/ 		}
            /******/ 	};
        /******/
        /******/ 	// define __esModule on exports
        /******/ 	__webpack_require__.r = function(exports) {
            /******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
                /******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
                /******/ 		}
            /******/ 		Object.defineProperty(exports, '__esModule', { value: true });
            /******/ 	};
        /******/
        /******/ 	// create a fake namespace object
        /******/ 	// mode & 1: value is a module id, require it
        /******/ 	// mode & 2: merge all properties of value into the ns
        /******/ 	// mode & 4: return value when already ns object
        /******/ 	// mode & 8|1: behave like require
        /******/ 	__webpack_require__.t = function(value, mode) {
            /******/ 		if(mode & 1) value = __webpack_require__(value);
            /******/ 		if(mode & 8) return value;
            /******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
            /******/ 		var ns = Object.create(null);
            /******/ 		__webpack_require__.r(ns);
            /******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
            /******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
            /******/ 		return ns;
            /******/ 	};
        /******/
        /******/ 	// getDefaultExport function for compatibility with non-harmony modules
        /******/ 	__webpack_require__.n = function(module) {
            /******/ 		var getter = module && module.__esModule ?
                /******/ 			function getDefault() { return module['default']; } :
                /******/ 			function getModuleExports() { return module; };
            /******/ 		__webpack_require__.d(getter, 'a', getter);
            /******/ 		return getter;
            /******/ 	};
        /******/
        /******/ 	// Object.prototype.hasOwnProperty.call
        /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
        /******/
        /******/ 	// __webpack_public_path__
        /******/ 	__webpack_require__.p = "";
        /******/
        /******/
        /******/ 	// Load entry module and return exports
        /******/ 	return __webpack_require__(__webpack_require__.s = "./build/index.js");
        /******/ })
        /************************************************************************/
        /******/ ({

            /***/ "./build/index.js":
            /*!************************!*\
  !*** ./build/index.js ***!
  \************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.Socket = exports.io = exports.Manager = exports.protocol = void 0;

                var url_1 = __webpack_require__(/*! ./url */ "./build/url.js");

                var manager_1 = __webpack_require__(/*! ./manager */ "./build/manager.js");

                var socket_1 = __webpack_require__(/*! ./socket */ "./build/socket.js");

                Object.defineProperty(exports, "Socket", {
                    enumerable: true,
                    get: function get() {
                        return socket_1.Socket;
                    }
                });

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("socket.io-client");
                /**
                 * Module exports.
                 */


                module.exports = exports = lookup;
                /**
                 * Managers cache.
                 */

                var cache = exports.managers = {};

                function lookup(uri, opts) {
                    if (_typeof(uri) === "object") {
                        opts = uri;
                        uri = undefined;
                    }

                    opts = opts || {};
                    var parsed = url_1.url(uri, opts.path);
                    var source = parsed.source;
                    var id = parsed.id;
                    var path = parsed.path;
                    var sameNamespace = cache[id] && path in cache[id]["nsps"];
                    var newConnection = opts.forceNew || opts["force new connection"] || false === opts.multiplex || sameNamespace;
                    var io;

                    if (newConnection) {
                        debug("ignoring socket cache for %s", source);
                        io = new manager_1.Manager(source, opts);
                    } else {
                        if (!cache[id]) {
                            debug("new io instance for %s", source);
                            cache[id] = new manager_1.Manager(source, opts);
                        }

                        io = cache[id];
                    }

                    if (parsed.query && !opts.query) {
                        opts.query = parsed.queryKey;
                    }

                    return io.socket(parsed.path, opts);
                }

                exports.io = lookup;
                /**
                 * Protocol version.
                 *
                 * @public
                 */

                var socket_io_parser_1 = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");

                Object.defineProperty(exports, "protocol", {
                    enumerable: true,
                    get: function get() {
                        return socket_io_parser_1.protocol;
                    }
                });
                /**
                 * `connect`.
                 *
                 * @param {String} uri
                 * @public
                 */

                exports.connect = lookup;
                /**
                 * Expose constructors for standalone build.
                 *
                 * @public
                 */

                var manager_2 = __webpack_require__(/*! ./manager */ "./build/manager.js");

                Object.defineProperty(exports, "Manager", {
                    enumerable: true,
                    get: function get() {
                        return manager_2.Manager;
                    }
                });
                exports["default"] = lookup;

                /***/ }),

            /***/ "./build/manager.js":
            /*!**************************!*\
  !*** ./build/manager.js ***!
  \**************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.Manager = void 0;

                var eio = __webpack_require__(/*! engine.io-client */ "./node_modules/engine.io-client/lib/index.js");

                var socket_1 = __webpack_require__(/*! ./socket */ "./build/socket.js");

                var parser = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");

                var on_1 = __webpack_require__(/*! ./on */ "./build/on.js");

                var Backoff = __webpack_require__(/*! backo2 */ "./node_modules/backo2/index.js");

                var typed_events_1 = __webpack_require__(/*! ./typed-events */ "./build/typed-events.js");

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("socket.io-client:manager");

                var Manager = /*#__PURE__*/function (_typed_events_1$Stric) {
                    _inherits(Manager, _typed_events_1$Stric);

                    var _super = _createSuper(Manager);

                    function Manager(uri, opts) {
                        var _this;

                        _classCallCheck(this, Manager);

                        _this = _super.call(this);
                        _this.nsps = {};
                        _this.subs = [];

                        if (uri && "object" === _typeof(uri)) {
                            opts = uri;
                            uri = undefined;
                        }

                        opts = opts || {};
                        opts.path = opts.path || "/socket.io";
                        _this.opts = opts;

                        _this.reconnection(opts.reconnection !== false);

                        _this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);

                        _this.reconnectionDelay(opts.reconnectionDelay || 1000);

                        _this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);

                        _this.randomizationFactor(opts.randomizationFactor || 0.5);

                        _this.backoff = new Backoff({
                            min: _this.reconnectionDelay(),
                            max: _this.reconnectionDelayMax(),
                            jitter: _this.randomizationFactor()
                        });

                        _this.timeout(null == opts.timeout ? 20000 : opts.timeout);

                        _this._readyState = "closed";
                        _this.uri = uri;

                        var _parser = opts.parser || parser;

                        _this.encoder = new _parser.Encoder();
                        _this.decoder = new _parser.Decoder();
                        _this._autoConnect = opts.autoConnect !== false;
                        if (_this._autoConnect) _this.open();
                        return _this;
                    }

                    _createClass(Manager, [{
                        key: "reconnection",
                        value: function reconnection(v) {
                            if (!arguments.length) return this._reconnection;
                            this._reconnection = !!v;
                            return this;
                        }
                    }, {
                        key: "reconnectionAttempts",
                        value: function reconnectionAttempts(v) {
                            if (v === undefined) return this._reconnectionAttempts;
                            this._reconnectionAttempts = v;
                            return this;
                        }
                    }, {
                        key: "reconnectionDelay",
                        value: function reconnectionDelay(v) {
                            var _a;

                            if (v === undefined) return this._reconnectionDelay;
                            this._reconnectionDelay = v;
                            (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);
                            return this;
                        }
                    }, {
                        key: "randomizationFactor",
                        value: function randomizationFactor(v) {
                            var _a;

                            if (v === undefined) return this._randomizationFactor;
                            this._randomizationFactor = v;
                            (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);
                            return this;
                        }
                    }, {
                        key: "reconnectionDelayMax",
                        value: function reconnectionDelayMax(v) {
                            var _a;

                            if (v === undefined) return this._reconnectionDelayMax;
                            this._reconnectionDelayMax = v;
                            (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);
                            return this;
                        }
                    }, {
                        key: "timeout",
                        value: function timeout(v) {
                            if (!arguments.length) return this._timeout;
                            this._timeout = v;
                            return this;
                        }
                        /**
                         * Starts trying to reconnect if reconnection is enabled and we have not
                         * started reconnecting yet
                         *
                         * @private
                         */

                    }, {
                        key: "maybeReconnectOnOpen",
                        value: function maybeReconnectOnOpen() {
                            // Only try to reconnect if it's the first time we're connecting
                            if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {
                                // keeps reconnection from firing twice for the same reconnection loop
                                this.reconnect();
                            }
                        }
                        /**
                         * Sets the current transport `socket`.
                         *
                         * @param {Function} fn - optional, callback
                         * @return self
                         * @public
                         */

                    }, {
                        key: "open",
                        value: function open(fn) {
                            var _this2 = this;

                            debug("readyState %s", this._readyState);
                            if (~this._readyState.indexOf("open")) return this;
                            debug("opening %s", this.uri);
                            this.engine = eio(this.uri, this.opts);
                            var socket = this.engine;
                            var self = this;
                            this._readyState = "opening";
                            this.skipReconnect = false; // emit `open`

                            var openSubDestroy = on_1.on(socket, "open", function () {
                                self.onopen();
                                fn && fn();
                            }); // emit `error`

                            var errorSub = on_1.on(socket, "error", function (err) {
                                debug("error");
                                self.cleanup();
                                self._readyState = "closed";

                                _this2.emitReserved("error", err);

                                if (fn) {
                                    fn(err);
                                } else {
                                    // Only do this if there is no fn to handle the error
                                    self.maybeReconnectOnOpen();
                                }
                            });

                            if (false !== this._timeout) {
                                var timeout = this._timeout;
                                debug("connect attempt will timeout after %d", timeout);

                                if (timeout === 0) {
                                    openSubDestroy(); // prevents a race condition with the 'open' event
                                } // set timer


                                var timer = setTimeout(function () {
                                    debug("connect attempt timed out after %d", timeout);
                                    openSubDestroy();
                                    socket.close();
                                    socket.emit("error", new Error("timeout"));
                                }, timeout);

                                if (this.opts.autoUnref) {
                                    timer.unref();
                                }

                                this.subs.push(function subDestroy() {
                                    clearTimeout(timer);
                                });
                            }

                            this.subs.push(openSubDestroy);
                            this.subs.push(errorSub);
                            return this;
                        }
                        /**
                         * Alias for open()
                         *
                         * @return self
                         * @public
                         */

                    }, {
                        key: "connect",
                        value: function connect(fn) {
                            return this.open(fn);
                        }
                        /**
                         * Called upon transport open.
                         *
                         * @private
                         */

                    }, {
                        key: "onopen",
                        value: function onopen() {
                            debug("open"); // clear old subs

                            this.cleanup(); // mark as open

                            this._readyState = "open";
                            this.emitReserved("open"); // add new subs

                            var socket = this.engine;
                            this.subs.push(on_1.on(socket, "ping", this.onping.bind(this)), on_1.on(socket, "data", this.ondata.bind(this)), on_1.on(socket, "error", this.onerror.bind(this)), on_1.on(socket, "close", this.onclose.bind(this)), on_1.on(this.decoder, "decoded", this.ondecoded.bind(this)));
                        }
                        /**
                         * Called upon a ping.
                         *
                         * @private
                         */

                    }, {
                        key: "onping",
                        value: function onping() {
                            this.emitReserved("ping");
                        }
                        /**
                         * Called with data.
                         *
                         * @private
                         */

                    }, {
                        key: "ondata",
                        value: function ondata(data) {
                            this.decoder.add(data);
                        }
                        /**
                         * Called when parser fully decodes a packet.
                         *
                         * @private
                         */

                    }, {
                        key: "ondecoded",
                        value: function ondecoded(packet) {
                            this.emitReserved("packet", packet);
                        }
                        /**
                         * Called upon socket error.
                         *
                         * @private
                         */

                    }, {
                        key: "onerror",
                        value: function onerror(err) {
                            debug("error", err);
                            this.emitReserved("error", err);
                        }
                        /**
                         * Creates a new socket for the given `nsp`.
                         *
                         * @return {Socket}
                         * @public
                         */

                    }, {
                        key: "socket",
                        value: function socket(nsp, opts) {
                            var socket = this.nsps[nsp];

                            if (!socket) {
                                socket = new socket_1.Socket(this, nsp, opts);
                                this.nsps[nsp] = socket;
                            }

                            return socket;
                        }
                        /**
                         * Called upon a socket close.
                         *
                         * @param socket
                         * @private
                         */

                    }, {
                        key: "_destroy",
                        value: function _destroy(socket) {
                            var nsps = Object.keys(this.nsps);

                            for (var _i = 0, _nsps = nsps; _i < _nsps.length; _i++) {
                                var nsp = _nsps[_i];
                                var _socket = this.nsps[nsp];

                                if (_socket.active) {
                                    debug("socket %s is still active, skipping close", nsp);
                                    return;
                                }
                            }

                            this._close();
                        }
                        /**
                         * Writes a packet.
                         *
                         * @param packet
                         * @private
                         */

                    }, {
                        key: "_packet",
                        value: function _packet(packet) {
                            debug("writing packet %j", packet);
                            var encodedPackets = this.encoder.encode(packet);

                            for (var i = 0; i < encodedPackets.length; i++) {
                                this.engine.write(encodedPackets[i], packet.options);
                            }
                        }
                        /**
                         * Clean up transport subscriptions and packet buffer.
                         *
                         * @private
                         */

                    }, {
                        key: "cleanup",
                        value: function cleanup() {
                            debug("cleanup");
                            this.subs.forEach(function (subDestroy) {
                                return subDestroy();
                            });
                            this.subs.length = 0;
                            this.decoder.destroy();
                        }
                        /**
                         * Close the current socket.
                         *
                         * @private
                         */

                    }, {
                        key: "_close",
                        value: function _close() {
                            debug("disconnect");
                            this.skipReconnect = true;
                            this._reconnecting = false;

                            if ("opening" === this._readyState) {
                                // `onclose` will not fire because
                                // an open event never happened
                                this.cleanup();
                            }

                            this.backoff.reset();
                            this._readyState = "closed";
                            if (this.engine) this.engine.close();
                        }
                        /**
                         * Alias for close()
                         *
                         * @private
                         */

                    }, {
                        key: "disconnect",
                        value: function disconnect() {
                            return this._close();
                        }
                        /**
                         * Called upon engine close.
                         *
                         * @private
                         */

                    }, {
                        key: "onclose",
                        value: function onclose(reason) {
                            debug("onclose");
                            this.cleanup();
                            this.backoff.reset();
                            this._readyState = "closed";
                            this.emitReserved("close", reason);

                            if (this._reconnection && !this.skipReconnect) {
                                this.reconnect();
                            }
                        }
                        /**
                         * Attempt a reconnection.
                         *
                         * @private
                         */

                    }, {
                        key: "reconnect",
                        value: function reconnect() {
                            var _this3 = this;

                            if (this._reconnecting || this.skipReconnect) return this;
                            var self = this;

                            if (this.backoff.attempts >= this._reconnectionAttempts) {
                                debug("reconnect failed");
                                this.backoff.reset();
                                this.emitReserved("reconnect_failed");
                                this._reconnecting = false;
                            } else {
                                var delay = this.backoff.duration();
                                debug("will wait %dms before reconnect attempt", delay);
                                this._reconnecting = true;
                                var timer = setTimeout(function () {
                                    if (self.skipReconnect) return;
                                    debug("attempting reconnect");

                                    _this3.emitReserved("reconnect_attempt", self.backoff.attempts); // check again for the case socket closed in above events


                                    if (self.skipReconnect) return;
                                    self.open(function (err) {
                                        if (err) {
                                            debug("reconnect attempt error");
                                            self._reconnecting = false;
                                            self.reconnect();

                                            _this3.emitReserved("reconnect_error", err);
                                        } else {
                                            debug("reconnect success");
                                            self.onreconnect();
                                        }
                                    });
                                }, delay);

                                if (this.opts.autoUnref) {
                                    timer.unref();
                                }

                                this.subs.push(function subDestroy() {
                                    clearTimeout(timer);
                                });
                            }
                        }
                        /**
                         * Called upon successful reconnect.
                         *
                         * @private
                         */

                    }, {
                        key: "onreconnect",
                        value: function onreconnect() {
                            var attempt = this.backoff.attempts;
                            this._reconnecting = false;
                            this.backoff.reset();
                            this.emitReserved("reconnect", attempt);
                        }
                    }]);

                    return Manager;
                }(typed_events_1.StrictEventEmitter);

                exports.Manager = Manager;

                /***/ }),

            /***/ "./build/on.js":
            /*!*********************!*\
  !*** ./build/on.js ***!
  \*********************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.on = void 0;

                function on(obj, ev, fn) {
                    obj.on(ev, fn);
                    return function subDestroy() {
                        obj.off(ev, fn);
                    };
                }

                exports.on = on;

                /***/ }),

            /***/ "./build/socket.js":
            /*!*************************!*\
  !*** ./build/socket.js ***!
  \*************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

                function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

                function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

                function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.Socket = void 0;

                var socket_io_parser_1 = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");

                var on_1 = __webpack_require__(/*! ./on */ "./build/on.js");

                var typed_events_1 = __webpack_require__(/*! ./typed-events */ "./build/typed-events.js");

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("socket.io-client:socket");
                /**
                 * Internal events.
                 * These events can't be emitted by the user.
                 */


                var RESERVED_EVENTS = Object.freeze({
                    connect: 1,
                    connect_error: 1,
                    disconnect: 1,
                    disconnecting: 1,
                    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener
                    newListener: 1,
                    removeListener: 1
                });

                var Socket = /*#__PURE__*/function (_typed_events_1$Stric) {
                    _inherits(Socket, _typed_events_1$Stric);

                    var _super = _createSuper(Socket);

                    /**
                     * `Socket` constructor.
                     *
                     * @public
                     */
                    function Socket(io, nsp, opts) {
                        var _this;

                        _classCallCheck(this, Socket);

                        _this = _super.call(this);
                        _this.receiveBuffer = [];
                        _this.sendBuffer = [];
                        _this.ids = 0;
                        _this.acks = {};
                        _this.flags = {};
                        _this.io = io;
                        _this.nsp = nsp;
                        _this.ids = 0;
                        _this.acks = {};
                        _this.receiveBuffer = [];
                        _this.sendBuffer = [];
                        _this.connected = false;
                        _this.disconnected = true;
                        _this.flags = {};

                        if (opts && opts.auth) {
                            _this.auth = opts.auth;
                        }

                        if (_this.io._autoConnect) _this.open();
                        return _this;
                    }
                    /**
                     * Subscribe to open, close and packet events
                     *
                     * @private
                     */


                    _createClass(Socket, [{
                        key: "subEvents",
                        value: function subEvents() {
                            if (this.subs) return;
                            var io = this.io;
                            this.subs = [on_1.on(io, "open", this.onopen.bind(this)), on_1.on(io, "packet", this.onpacket.bind(this)), on_1.on(io, "error", this.onerror.bind(this)), on_1.on(io, "close", this.onclose.bind(this))];
                        }
                        /**
                         * Whether the Socket will try to reconnect when its Manager connects or reconnects
                         */

                    }, {
                        key: "connect",

                        /**
                         * "Opens" the socket.
                         *
                         * @public
                         */
                        value: function connect() {
                            if (this.connected) return this;
                            this.subEvents();
                            if (!this.io["_reconnecting"]) this.io.open(); // ensure open

                            if ("open" === this.io._readyState) this.onopen();
                            return this;
                        }
                        /**
                         * Alias for connect()
                         */

                    }, {
                        key: "open",
                        value: function open() {
                            return this.connect();
                        }
                        /**
                         * Sends a `message` event.
                         *
                         * @return self
                         * @public
                         */

                    }, {
                        key: "send",
                        value: function send() {
                            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                                args[_key] = arguments[_key];
                            }

                            args.unshift("message");
                            this.emit.apply(this, args);
                            return this;
                        }
                        /**
                         * Override `emit`.
                         * If the event is in `events`, it's emitted normally.
                         *
                         * @return self
                         * @public
                         */

                    }, {
                        key: "emit",
                        value: function emit(ev) {
                            if (RESERVED_EVENTS.hasOwnProperty(ev)) {
                                throw new Error('"' + ev + '" is a reserved event name');
                            }

                            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                                args[_key2 - 1] = arguments[_key2];
                            }

                            args.unshift(ev);
                            var packet = {
                                type: socket_io_parser_1.PacketType.EVENT,
                                data: args
                            };
                            packet.options = {};
                            packet.options.compress = this.flags.compress !== false; // event ack callback

                            if ("function" === typeof args[args.length - 1]) {
                                debug("emitting packet with ack id %d", this.ids);
                                this.acks[this.ids] = args.pop();
                                packet.id = this.ids++;
                            }

                            var isTransportWritable = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable;
                            var discardPacket = this.flags["volatile"] && (!isTransportWritable || !this.connected);

                            if (discardPacket) {
                                debug("discard packet as the transport is not currently writable");
                            } else if (this.connected) {
                                this.packet(packet);
                            } else {
                                this.sendBuffer.push(packet);
                            }

                            this.flags = {};
                            return this;
                        }
                        /**
                         * Sends a packet.
                         *
                         * @param packet
                         * @private
                         */

                    }, {
                        key: "packet",
                        value: function packet(_packet) {
                            _packet.nsp = this.nsp;

                            this.io._packet(_packet);
                        }
                        /**
                         * Called upon engine `open`.
                         *
                         * @private
                         */

                    }, {
                        key: "onopen",
                        value: function onopen() {
                            var _this2 = this;

                            debug("transport is open - connecting");

                            if (typeof this.auth == "function") {
                                this.auth(function (data) {
                                    _this2.packet({
                                        type: socket_io_parser_1.PacketType.CONNECT,
                                        data: data
                                    });
                                });
                            } else {
                                this.packet({
                                    type: socket_io_parser_1.PacketType.CONNECT,
                                    data: this.auth
                                });
                            }
                        }
                        /**
                         * Called upon engine or manager `error`.
                         *
                         * @param err
                         * @private
                         */

                    }, {
                        key: "onerror",
                        value: function onerror(err) {
                            if (!this.connected) {
                                this.emitReserved("connect_error", err);
                            }
                        }
                        /**
                         * Called upon engine `close`.
                         *
                         * @param reason
                         * @private
                         */

                    }, {
                        key: "onclose",
                        value: function onclose(reason) {
                            debug("close (%s)", reason);
                            this.connected = false;
                            this.disconnected = true;
                            delete this.id;
                            this.emitReserved("disconnect", reason);
                        }
                        /**
                         * Called with socket packet.
                         *
                         * @param packet
                         * @private
                         */

                    }, {
                        key: "onpacket",
                        value: function onpacket(packet) {
                            var sameNamespace = packet.nsp === this.nsp;
                            if (!sameNamespace) return;

                            switch (packet.type) {
                                case socket_io_parser_1.PacketType.CONNECT:
                                    if (packet.data && packet.data.sid) {
                                        var id = packet.data.sid;
                                        this.onconnect(id);
                                    } else {
                                        this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
                                    }

                                    break;

                                case socket_io_parser_1.PacketType.EVENT:
                                    this.onevent(packet);
                                    break;

                                case socket_io_parser_1.PacketType.BINARY_EVENT:
                                    this.onevent(packet);
                                    break;

                                case socket_io_parser_1.PacketType.ACK:
                                    this.onack(packet);
                                    break;

                                case socket_io_parser_1.PacketType.BINARY_ACK:
                                    this.onack(packet);
                                    break;

                                case socket_io_parser_1.PacketType.DISCONNECT:
                                    this.ondisconnect();
                                    break;

                                case socket_io_parser_1.PacketType.CONNECT_ERROR:
                                    var err = new Error(packet.data.message); // @ts-ignore

                                    err.data = packet.data.data;
                                    this.emitReserved("connect_error", err);
                                    break;
                            }
                        }
                        /**
                         * Called upon a server event.
                         *
                         * @param packet
                         * @private
                         */

                    }, {
                        key: "onevent",
                        value: function onevent(packet) {
                            var args = packet.data || [];
                            debug("emitting event %j", args);

                            if (null != packet.id) {
                                debug("attaching ack callback to event");
                                args.push(this.ack(packet.id));
                            }

                            if (this.connected) {
                                this.emitEvent(args);
                            } else {
                                this.receiveBuffer.push(Object.freeze(args));
                            }
                        }
                    }, {
                        key: "emitEvent",
                        value: function emitEvent(args) {
                            if (this._anyListeners && this._anyListeners.length) {
                                var listeners = this._anyListeners.slice();

                                var _iterator = _createForOfIteratorHelper(listeners),
                                    _step;

                                try {
                                    for (_iterator.s(); !(_step = _iterator.n()).done;) {
                                        var listener = _step.value;
                                        listener.apply(this, args);
                                    }
                                } catch (err) {
                                    _iterator.e(err);
                                } finally {
                                    _iterator.f();
                                }
                            }

                            _get(_getPrototypeOf(Socket.prototype), "emit", this).apply(this, args);
                        }
                        /**
                         * Produces an ack callback to emit with an event.
                         *
                         * @private
                         */

                    }, {
                        key: "ack",
                        value: function ack(id) {
                            var self = this;
                            var sent = false;
                            return function () {
                                // prevent double callbacks
                                if (sent) return;
                                sent = true;

                                for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                                    args[_key3] = arguments[_key3];
                                }

                                debug("sending ack %j", args);
                                self.packet({
                                    type: socket_io_parser_1.PacketType.ACK,
                                    id: id,
                                    data: args
                                });
                            };
                        }
                        /**
                         * Called upon a server acknowlegement.
                         *
                         * @param packet
                         * @private
                         */

                    }, {
                        key: "onack",
                        value: function onack(packet) {
                            var ack = this.acks[packet.id];

                            if ("function" === typeof ack) {
                                debug("calling ack %s with %j", packet.id, packet.data);
                                ack.apply(this, packet.data);
                                delete this.acks[packet.id];
                            } else {
                                debug("bad ack %s", packet.id);
                            }
                        }
                        /**
                         * Called upon server connect.
                         *
                         * @private
                         */

                    }, {
                        key: "onconnect",
                        value: function onconnect(id) {
                            debug("socket connected with id %s", id);
                            this.id = id;
                            this.connected = true;
                            this.disconnected = false;
                            this.emitReserved("connect");
                            this.emitBuffered();
                        }
                        /**
                         * Emit buffered events (received and emitted).
                         *
                         * @private
                         */

                    }, {
                        key: "emitBuffered",
                        value: function emitBuffered() {
                            var _this3 = this;

                            this.receiveBuffer.forEach(function (args) {
                                return _this3.emitEvent(args);
                            });
                            this.receiveBuffer = [];
                            this.sendBuffer.forEach(function (packet) {
                                return _this3.packet(packet);
                            });
                            this.sendBuffer = [];
                        }
                        /**
                         * Called upon server disconnect.
                         *
                         * @private
                         */

                    }, {
                        key: "ondisconnect",
                        value: function ondisconnect() {
                            debug("server disconnect (%s)", this.nsp);
                            this.destroy();
                            this.onclose("io server disconnect");
                        }
                        /**
                         * Called upon forced client/server side disconnections,
                         * this method ensures the manager stops tracking us and
                         * that reconnections don't get triggered for this.
                         *
                         * @private
                         */

                    }, {
                        key: "destroy",
                        value: function destroy() {
                            if (this.subs) {
                                // clean subscriptions to avoid reconnections
                                this.subs.forEach(function (subDestroy) {
                                    return subDestroy();
                                });
                                this.subs = undefined;
                            }

                            this.io["_destroy"](this);
                        }
                        /**
                         * Disconnects the socket manually.
                         *
                         * @return self
                         * @public
                         */

                    }, {
                        key: "disconnect",
                        value: function disconnect() {
                            if (this.connected) {
                                debug("performing disconnect (%s)", this.nsp);
                                this.packet({
                                    type: socket_io_parser_1.PacketType.DISCONNECT
                                });
                            } // remove socket from pool


                            this.destroy();

                            if (this.connected) {
                                // fire events
                                this.onclose("io client disconnect");
                            }

                            return this;
                        }
                        /**
                         * Alias for disconnect()
                         *
                         * @return self
                         * @public
                         */

                    }, {
                        key: "close",
                        value: function close() {
                            return this.disconnect();
                        }
                        /**
                         * Sets the compress flag.
                         *
                         * @param compress - if `true`, compresses the sending data
                         * @return self
                         * @public
                         */

                    }, {
                        key: "compress",
                        value: function compress(_compress) {
                            this.flags.compress = _compress;
                            return this;
                        }
                        /**
                         * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not
                         * ready to send messages.
                         *
                         * @returns self
                         * @public
                         */

                    }, {
                        key: "onAny",

                        /**
                         * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
                         * callback.
                         *
                         * @param listener
                         * @public
                         */
                        value: function onAny(listener) {
                            this._anyListeners = this._anyListeners || [];

                            this._anyListeners.push(listener);

                            return this;
                        }
                        /**
                         * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
                         * callback. The listener is added to the beginning of the listeners array.
                         *
                         * @param listener
                         * @public
                         */

                    }, {
                        key: "prependAny",
                        value: function prependAny(listener) {
                            this._anyListeners = this._anyListeners || [];

                            this._anyListeners.unshift(listener);

                            return this;
                        }
                        /**
                         * Removes the listener that will be fired when any event is emitted.
                         *
                         * @param listener
                         * @public
                         */

                    }, {
                        key: "offAny",
                        value: function offAny(listener) {
                            if (!this._anyListeners) {
                                return this;
                            }

                            if (listener) {
                                var listeners = this._anyListeners;

                                for (var i = 0; i < listeners.length; i++) {
                                    if (listener === listeners[i]) {
                                        listeners.splice(i, 1);
                                        return this;
                                    }
                                }
                            } else {
                                this._anyListeners = [];
                            }

                            return this;
                        }
                        /**
                         * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
                         * e.g. to remove listeners.
                         *
                         * @public
                         */

                    }, {
                        key: "listenersAny",
                        value: function listenersAny() {
                            return this._anyListeners || [];
                        }
                    }, {
                        key: "active",
                        get: function get() {
                            return !!this.subs;
                        }
                    }, {
                        key: "volatile",
                        get: function get() {
                            this.flags["volatile"] = true;
                            return this;
                        }
                    }]);

                    return Socket;
                }(typed_events_1.StrictEventEmitter);

                exports.Socket = Socket;

                /***/ }),

            /***/ "./build/typed-events.js":
            /*!*******************************!*\
  !*** ./build/typed-events.js ***!
  \*******************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

                function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.StrictEventEmitter = void 0;

                var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");
                /**
                 * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type
                 * parameters for mappings of event names to event data types, and strictly
                 * types method calls to the `EventEmitter` according to these event maps.
                 *
                 * @typeParam ListenEvents - `EventsMap` of user-defined events that can be
                 * listened to with `on` or `once`
                 * @typeParam EmitEvents - `EventsMap` of user-defined events that can be
                 * emitted with `emit`
                 * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be
                 * emitted by socket.io with `emitReserved`, and can be listened to with
                 * `listen`.
                 */


                var StrictEventEmitter = /*#__PURE__*/function (_Emitter) {
                    _inherits(StrictEventEmitter, _Emitter);

                    var _super = _createSuper(StrictEventEmitter);

                    function StrictEventEmitter() {
                        _classCallCheck(this, StrictEventEmitter);

                        return _super.apply(this, arguments);
                    }

                    _createClass(StrictEventEmitter, [{
                        key: "on",

                        /**
                         * Adds the `listener` function as an event listener for `ev`.
                         *
                         * @param ev Name of the event
                         * @param listener Callback function
                         */
                        value: function on(ev, listener) {
                            _get(_getPrototypeOf(StrictEventEmitter.prototype), "on", this).call(this, ev, listener);

                            return this;
                        }
                        /**
                         * Adds a one-time `listener` function as an event listener for `ev`.
                         *
                         * @param ev Name of the event
                         * @param listener Callback function
                         */

                    }, {
                        key: "once",
                        value: function once(ev, listener) {
                            _get(_getPrototypeOf(StrictEventEmitter.prototype), "once", this).call(this, ev, listener);

                            return this;
                        }
                        /**
                         * Emits an event.
                         *
                         * @param ev Name of the event
                         * @param args Values to send to listeners of this event
                         */

                    }, {
                        key: "emit",
                        value: function emit(ev) {
                            var _get2;

                            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                                args[_key - 1] = arguments[_key];
                            }

                            (_get2 = _get(_getPrototypeOf(StrictEventEmitter.prototype), "emit", this)).call.apply(_get2, [this, ev].concat(args));

                            return this;
                        }
                        /**
                         * Emits a reserved event.
                         *
                         * This method is `protected`, so that only a class extending
                         * `StrictEventEmitter` can emit its own reserved events.
                         *
                         * @param ev Reserved event name
                         * @param args Arguments to emit along with the event
                         */

                    }, {
                        key: "emitReserved",
                        value: function emitReserved(ev) {
                            var _get3;

                            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                                args[_key2 - 1] = arguments[_key2];
                            }

                            (_get3 = _get(_getPrototypeOf(StrictEventEmitter.prototype), "emit", this)).call.apply(_get3, [this, ev].concat(args));

                            return this;
                        }
                        /**
                         * Returns the listeners listening to an event.
                         *
                         * @param event Event name
                         * @returns Array of listeners subscribed to `event`
                         */

                    }, {
                        key: "listeners",
                        value: function listeners(event) {
                            return _get(_getPrototypeOf(StrictEventEmitter.prototype), "listeners", this).call(this, event);
                        }
                    }]);

                    return StrictEventEmitter;
                }(Emitter);

                exports.StrictEventEmitter = StrictEventEmitter;

                /***/ }),

            /***/ "./build/url.js":
            /*!**********************!*\
  !*** ./build/url.js ***!
  \**********************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.url = void 0;

                var parseuri = __webpack_require__(/*! parseuri */ "./node_modules/parseuri/index.js");

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("socket.io-client:url");
                /**
                 * URL parser.
                 *
                 * @param uri - url
                 * @param path - the request path of the connection
                 * @param loc - An object meant to mimic window.location.
                 *        Defaults to window.location.
                 * @public
                 */


                function url(uri) {
                    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
                    var loc = arguments.length > 2 ? arguments[2] : undefined;
                    var obj = uri; // default to window.location

                    loc = loc || typeof location !== "undefined" && location;
                    if (null == uri) uri = loc.protocol + "//" + loc.host; // relative path support

                    if (typeof uri === "string") {
                        if ("/" === uri.charAt(0)) {
                            if ("/" === uri.charAt(1)) {
                                uri = loc.protocol + uri;
                            } else {
                                uri = loc.host + uri;
                            }
                        }

                        if (!/^(https?|wss?):\/\//.test(uri)) {
                            debug("protocol-less url %s", uri);

                            if ("undefined" !== typeof loc) {
                                uri = loc.protocol + "//" + uri;
                            } else {
                                uri = "https://" + uri;
                            }
                        } // parse


                        debug("parse %s", uri);
                        obj = parseuri(uri);
                    } // make sure we treat `localhost:80` and `localhost` equally


                    if (!obj.port) {
                        if (/^(http|ws)$/.test(obj.protocol)) {
                            obj.port = "80";
                        } else if (/^(http|ws)s$/.test(obj.protocol)) {
                            obj.port = "443";
                        }
                    }

                    obj.path = obj.path || "/";
                    var ipv6 = obj.host.indexOf(":") !== -1;
                    var host = ipv6 ? "[" + obj.host + "]" : obj.host; // define unique id

                    obj.id = obj.protocol + "://" + host + ":" + obj.port + path; // define href

                    obj.href = obj.protocol + "://" + host + (loc && loc.port === obj.port ? "" : ":" + obj.port);
                    return obj;
                }

                exports.url = url;

                /***/ }),

            /***/ "./node_modules/backo2/index.js":
            /*!**************************************!*\
  !*** ./node_modules/backo2/index.js ***!
  \**************************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                /**
                 * Expose `Backoff`.
                 */
                module.exports = Backoff;
                /**
                 * Initialize backoff timer with `opts`.
                 *
                 * - `min` initial timeout in milliseconds [100]
                 * - `max` max timeout [10000]
                 * - `jitter` [0]
                 * - `factor` [2]
                 *
                 * @param {Object} opts
                 * @api public
                 */

                function Backoff(opts) {
                    opts = opts || {};
                    this.ms = opts.min || 100;
                    this.max = opts.max || 10000;
                    this.factor = opts.factor || 2;
                    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
                    this.attempts = 0;
                }
                /**
                 * Return the backoff duration.
                 *
                 * @return {Number}
                 * @api public
                 */


                Backoff.prototype.duration = function () {
                    var ms = this.ms * Math.pow(this.factor, this.attempts++);

                    if (this.jitter) {
                        var rand = Math.random();
                        var deviation = Math.floor(rand * this.jitter * ms);
                        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
                    }

                    return Math.min(ms, this.max) | 0;
                };
                /**
                 * Reset the number of attempts.
                 *
                 * @api public
                 */


                Backoff.prototype.reset = function () {
                    this.attempts = 0;
                };
                /**
                 * Set the minimum duration
                 *
                 * @api public
                 */


                Backoff.prototype.setMin = function (min) {
                    this.ms = min;
                };
                /**
                 * Set the maximum duration
                 *
                 * @api public
                 */


                Backoff.prototype.setMax = function (max) {
                    this.max = max;
                };
                /**
                 * Set the jitter
                 *
                 * @api public
                 */


                Backoff.prototype.setJitter = function (jitter) {
                    this.jitter = jitter;
                };

                /***/ }),

            /***/ "./node_modules/component-emitter/index.js":
            /*!*************************************************!*\
  !*** ./node_modules/component-emitter/index.js ***!
  \*************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                /**
                 * Expose `Emitter`.
                 */
                if (true) {
                    module.exports = Emitter;
                }
                /**
                 * Initialize a new `Emitter`.
                 *
                 * @api public
                 */


                function Emitter(obj) {
                    if (obj) return mixin(obj);
                }

                ;
                /**
                 * Mixin the emitter properties.
                 *
                 * @param {Object} obj
                 * @return {Object}
                 * @api private
                 */

                function mixin(obj) {
                    for (var key in Emitter.prototype) {
                        obj[key] = Emitter.prototype[key];
                    }

                    return obj;
                }
                /**
                 * Listen on the given `event` with `fn`.
                 *
                 * @param {String} event
                 * @param {Function} fn
                 * @return {Emitter}
                 * @api public
                 */


                Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
                    this._callbacks = this._callbacks || {};
                    (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
                    return this;
                };
                /**
                 * Adds an `event` listener that will be invoked a single
                 * time then automatically removed.
                 *
                 * @param {String} event
                 * @param {Function} fn
                 * @return {Emitter}
                 * @api public
                 */


                Emitter.prototype.once = function (event, fn) {
                    function on() {
                        this.off(event, on);
                        fn.apply(this, arguments);
                    }

                    on.fn = fn;
                    this.on(event, on);
                    return this;
                };
                /**
                 * Remove the given callback for `event` or all
                 * registered callbacks.
                 *
                 * @param {String} event
                 * @param {Function} fn
                 * @return {Emitter}
                 * @api public
                 */


                Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
                    this._callbacks = this._callbacks || {}; // all

                    if (0 == arguments.length) {
                        this._callbacks = {};
                        return this;
                    } // specific event


                    var callbacks = this._callbacks['$' + event];
                    if (!callbacks) return this; // remove all handlers

                    if (1 == arguments.length) {
                        delete this._callbacks['$' + event];
                        return this;
                    } // remove specific handler


                    var cb;

                    for (var i = 0; i < callbacks.length; i++) {
                        cb = callbacks[i];

                        if (cb === fn || cb.fn === fn) {
                            callbacks.splice(i, 1);
                            break;
                        }
                    } // Remove event specific arrays for event types that no
                    // one is subscribed for to avoid memory leak.


                    if (callbacks.length === 0) {
                        delete this._callbacks['$' + event];
                    }

                    return this;
                };
                /**
                 * Emit `event` with the given args.
                 *
                 * @param {String} event
                 * @param {Mixed} ...
                 * @return {Emitter}
                 */


                Emitter.prototype.emit = function (event) {
                    this._callbacks = this._callbacks || {};
                    var args = new Array(arguments.length - 1),
                        callbacks = this._callbacks['$' + event];

                    for (var i = 1; i < arguments.length; i++) {
                        args[i - 1] = arguments[i];
                    }

                    if (callbacks) {
                        callbacks = callbacks.slice(0);

                        for (var i = 0, len = callbacks.length; i < len; ++i) {
                            callbacks[i].apply(this, args);
                        }
                    }

                    return this;
                };
                /**
                 * Return array of callbacks for `event`.
                 *
                 * @param {String} event
                 * @return {Array}
                 * @api public
                 */


                Emitter.prototype.listeners = function (event) {
                    this._callbacks = this._callbacks || {};
                    return this._callbacks['$' + event] || [];
                };
                /**
                 * Check if this emitter has `event` handlers.
                 *
                 * @param {String} event
                 * @return {Boolean}
                 * @api public
                 */


                Emitter.prototype.hasListeners = function (event) {
                    return !!this.listeners(event).length;
                };

                /***/ }),

            /***/ "./node_modules/debug/src/browser.js":
            /*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                /* eslint-env browser */

                /**
                 * This is the web browser implementation of `debug()`.
                 */
                exports.formatArgs = formatArgs;
                exports.save = save;
                exports.load = load;
                exports.useColors = useColors;
                exports.storage = localstorage();

                exports.destroy = function () {
                    var warned = false;
                    return function () {
                        if (!warned) {
                            warned = true;
                            console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
                        }
                    };
                }();
                /**
                 * Colors.
                 */


                exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
                /**
                 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
                 * and the Firebug extension (any Firefox version) are known
                 * to support "%c" CSS customizations.
                 *
                 * TODO: add a `localStorage` variable to explicitly enable/disable colors
                 */
// eslint-disable-next-line complexity

                function useColors() {
                    // NB: In an Electron preload script, document will be defined but not fully
                    // initialized. Since we know we're in Chrome, we'll just detect this case
                    // explicitly
                    if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
                        return true;
                    } // Internet Explorer and Edge do not support colors.


                    if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
                        return false;
                    } // Is webkit? http://stackoverflow.com/a/16459606/376773
                    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632


                    return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
                        typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
                        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
                        typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
                        typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
                }
                /**
                 * Colorize log arguments if enabled.
                 *
                 * @api public
                 */


                function formatArgs(args) {
                    args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);

                    if (!this.useColors) {
                        return;
                    }

                    var c = 'color: ' + this.color;
                    args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
                    // arguments passed either before or after the %c, so we need to
                    // figure out the correct index to insert the CSS into

                    var index = 0;
                    var lastC = 0;
                    args[0].replace(/%[a-zA-Z%]/g, function (match) {
                        if (match === '%%') {
                            return;
                        }

                        index++;

                        if (match === '%c') {
                            // We only are interested in the *last* %c
                            // (the user may have provided their own)
                            lastC = index;
                        }
                    });
                    args.splice(lastC, 0, c);
                }
                /**
                 * Invokes `console.debug()` when available.
                 * No-op when `console.debug` is not a "function".
                 * If `console.debug` is not available, falls back
                 * to `console.log`.
                 *
                 * @api public
                 */


                exports.log = console.debug || console.log || function () {};
                /**
                 * Save `namespaces`.
                 *
                 * @param {String} namespaces
                 * @api private
                 */


                function save(namespaces) {
                    try {
                        if (namespaces) {
                            exports.storage.setItem('debug', namespaces);
                        } else {
                            exports.storage.removeItem('debug');
                        }
                    } catch (error) {// Swallow
                        // XXX (@Qix-) should we be logging these?
                    }
                }
                /**
                 * Load `namespaces`.
                 *
                 * @return {String} returns the previously persisted debug modes
                 * @api private
                 */


                function load() {
                    var r;

                    try {
                        r = exports.storage.getItem('debug');
                    } catch (error) {// Swallow
                        // XXX (@Qix-) should we be logging these?
                    } // If debug isn't set in LS, and we're in Electron, try to load $DEBUG


                    if (!r && typeof process !== 'undefined' && 'env' in process) {
                        r = process.env.DEBUG;
                    }

                    return r;
                }
                /**
                 * Localstorage attempts to return the localstorage.
                 *
                 * This is necessary because safari throws
                 * when a user disables cookies/localstorage
                 * and you attempt to access it.
                 *
                 * @return {LocalStorage}
                 * @api private
                 */


                function localstorage() {
                    try {
                        // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
                        // The Browser also has localStorage in the global context.
                        return localStorage;
                    } catch (error) {// Swallow
                        // XXX (@Qix-) should we be logging these?
                    }
                }

                module.exports = __webpack_require__(/*! ./common */ "./node_modules/debug/src/common.js")(exports);
                var formatters = module.exports.formatters;
                /**
                 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
                 */

                formatters.j = function (v) {
                    try {
                        return JSON.stringify(v);
                    } catch (error) {
                        return '[UnexpectedJSONParseError]: ' + error.message;
                    }
                };

                /***/ }),

            /***/ "./node_modules/debug/src/common.js":
            /*!******************************************!*\
  !*** ./node_modules/debug/src/common.js ***!
  \******************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

                function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

                function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

                function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

                function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

                function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

                /**
                 * This is the common logic for both the Node.js and web browser
                 * implementations of `debug()`.
                 */
                function setup(env) {
                    createDebug.debug = createDebug;
                    createDebug["default"] = createDebug;
                    createDebug.coerce = coerce;
                    createDebug.disable = disable;
                    createDebug.enable = enable;
                    createDebug.enabled = enabled;
                    createDebug.humanize = __webpack_require__(/*! ms */ "./node_modules/ms/index.js");
                    createDebug.destroy = destroy;
                    Object.keys(env).forEach(function (key) {
                        createDebug[key] = env[key];
                    });
                    /**
                     * The currently active debug mode names, and names to skip.
                     */

                    createDebug.names = [];
                    createDebug.skips = [];
                    /**
                     * Map of special "%n" handling functions, for the debug "format" argument.
                     *
                     * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
                     */

                    createDebug.formatters = {};
                    /**
                     * Selects a color for a debug namespace
                     * @param {String} namespace The namespace string for the for the debug instance to be colored
                     * @return {Number|String} An ANSI color code for the given namespace
                     * @api private
                     */

                    function selectColor(namespace) {
                        var hash = 0;

                        for (var i = 0; i < namespace.length; i++) {
                            hash = (hash << 5) - hash + namespace.charCodeAt(i);
                            hash |= 0; // Convert to 32bit integer
                        }

                        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
                    }

                    createDebug.selectColor = selectColor;
                    /**
                     * Create a debugger with the given `namespace`.
                     *
                     * @param {String} namespace
                     * @return {Function}
                     * @api public
                     */

                    function createDebug(namespace) {
                        var prevTime;
                        var enableOverride = null;

                        function debug() {
                            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                                args[_key] = arguments[_key];
                            }

                            // Disabled?
                            if (!debug.enabled) {
                                return;
                            }

                            var self = debug; // Set `diff` timestamp

                            var curr = Number(new Date());
                            var ms = curr - (prevTime || curr);
                            self.diff = ms;
                            self.prev = prevTime;
                            self.curr = curr;
                            prevTime = curr;
                            args[0] = createDebug.coerce(args[0]);

                            if (typeof args[0] !== 'string') {
                                // Anything else let's inspect with %O
                                args.unshift('%O');
                            } // Apply any `formatters` transformations


                            var index = 0;
                            args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
                                // If we encounter an escaped % then don't increase the array index
                                if (match === '%%') {
                                    return '%';
                                }

                                index++;
                                var formatter = createDebug.formatters[format];

                                if (typeof formatter === 'function') {
                                    var val = args[index];
                                    match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

                                    args.splice(index, 1);
                                    index--;
                                }

                                return match;
                            }); // Apply env-specific formatting (colors, etc.)

                            createDebug.formatArgs.call(self, args);
                            var logFn = self.log || createDebug.log;
                            logFn.apply(self, args);
                        }

                        debug.namespace = namespace;
                        debug.useColors = createDebug.useColors();
                        debug.color = createDebug.selectColor(namespace);
                        debug.extend = extend;
                        debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

                        Object.defineProperty(debug, 'enabled', {
                            enumerable: true,
                            configurable: false,
                            get: function get() {
                                return enableOverride === null ? createDebug.enabled(namespace) : enableOverride;
                            },
                            set: function set(v) {
                                enableOverride = v;
                            }
                        }); // Env-specific initialization logic for debug instances

                        if (typeof createDebug.init === 'function') {
                            createDebug.init(debug);
                        }

                        return debug;
                    }

                    function extend(namespace, delimiter) {
                        var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
                        newDebug.log = this.log;
                        return newDebug;
                    }
                    /**
                     * Enables a debug mode by namespaces. This can include modes
                     * separated by a colon and wildcards.
                     *
                     * @param {String} namespaces
                     * @api public
                     */


                    function enable(namespaces) {
                        createDebug.save(namespaces);
                        createDebug.names = [];
                        createDebug.skips = [];
                        var i;
                        var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
                        var len = split.length;

                        for (i = 0; i < len; i++) {
                            if (!split[i]) {
                                // ignore empty strings
                                continue;
                            }

                            namespaces = split[i].replace(/\*/g, '.*?');

                            if (namespaces[0] === '-') {
                                createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
                            } else {
                                createDebug.names.push(new RegExp('^' + namespaces + '$'));
                            }
                        }
                    }
                    /**
                     * Disable debug output.
                     *
                     * @return {String} namespaces
                     * @api public
                     */


                    function disable() {
                        var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {
                            return '-' + namespace;
                        }))).join(',');
                        createDebug.enable('');
                        return namespaces;
                    }
                    /**
                     * Returns true if the given mode name is enabled, false otherwise.
                     *
                     * @param {String} name
                     * @return {Boolean}
                     * @api public
                     */


                    function enabled(name) {
                        if (name[name.length - 1] === '*') {
                            return true;
                        }

                        var i;
                        var len;

                        for (i = 0, len = createDebug.skips.length; i < len; i++) {
                            if (createDebug.skips[i].test(name)) {
                                return false;
                            }
                        }

                        for (i = 0, len = createDebug.names.length; i < len; i++) {
                            if (createDebug.names[i].test(name)) {
                                return true;
                            }
                        }

                        return false;
                    }
                    /**
                     * Convert regexp to namespace
                     *
                     * @param {RegExp} regxep
                     * @return {String} namespace
                     * @api private
                     */


                    function toNamespace(regexp) {
                        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, '*');
                    }
                    /**
                     * Coerce `val`.
                     *
                     * @param {Mixed} val
                     * @return {Mixed}
                     * @api private
                     */


                    function coerce(val) {
                        if (val instanceof Error) {
                            return val.stack || val.message;
                        }

                        return val;
                    }
                    /**
                     * XXX DO NOT USE. This is a temporary stub function.
                     * XXX It WILL be removed in the next major release.
                     */


                    function destroy() {
                        console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
                    }

                    createDebug.enable(createDebug.load());
                    return createDebug;
                }

                module.exports = setup;

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/globalThis.browser.js":
            /*!*****************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/globalThis.browser.js ***!
  \*****************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                module.exports = function () {
                    if (typeof self !== "undefined") {
                        return self;
                    } else if (typeof window !== "undefined") {
                        return window;
                    } else {
                        return Function("return this")();
                    }
                }();

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/index.js":
            /*!****************************************************!*\
  !*** ./node_modules/engine.io-client/lib/index.js ***!
  \****************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                var Socket = __webpack_require__(/*! ./socket */ "./node_modules/engine.io-client/lib/socket.js");

                module.exports = function (uri, opts) {
                    return new Socket(uri, opts);
                };
                /**
                 * Expose deps for legacy compatibility
                 * and standalone browser access.
                 */


                module.exports.Socket = Socket;
                module.exports.protocol = Socket.protocol; // this is an int

                module.exports.Transport = __webpack_require__(/*! ./transport */ "./node_modules/engine.io-client/lib/transport.js");
                module.exports.transports = __webpack_require__(/*! ./transports/index */ "./node_modules/engine.io-client/lib/transports/index.js");
                module.exports.parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/socket.js":
            /*!*****************************************************!*\
  !*** ./node_modules/engine.io-client/lib/socket.js ***!
  \*****************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                var transports = __webpack_require__(/*! ./transports/index */ "./node_modules/engine.io-client/lib/transports/index.js");

                var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("engine.io-client:socket");

                var parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");

                var parseuri = __webpack_require__(/*! parseuri */ "./node_modules/parseuri/index.js");

                var parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");

                var Socket = /*#__PURE__*/function (_Emitter) {
                    _inherits(Socket, _Emitter);

                    var _super = _createSuper(Socket);

                    /**
                     * Socket constructor.
                     *
                     * @param {String|Object} uri or options
                     * @param {Object} options
                     * @api public
                     */
                    function Socket(uri) {
                        var _this;

                        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                        _classCallCheck(this, Socket);

                        _this = _super.call(this);

                        if (uri && "object" === _typeof(uri)) {
                            opts = uri;
                            uri = null;
                        }

                        if (uri) {
                            uri = parseuri(uri);
                            opts.hostname = uri.host;
                            opts.secure = uri.protocol === "https" || uri.protocol === "wss";
                            opts.port = uri.port;
                            if (uri.query) opts.query = uri.query;
                        } else if (opts.host) {
                            opts.hostname = parseuri(opts.host).host;
                        }

                        _this.secure = null != opts.secure ? opts.secure : typeof location !== "undefined" && "https:" === location.protocol;

                        if (opts.hostname && !opts.port) {
                            // if no port is specified manually, use the protocol default
                            opts.port = _this.secure ? "443" : "80";
                        }

                        _this.hostname = opts.hostname || (typeof location !== "undefined" ? location.hostname : "localhost");
                        _this.port = opts.port || (typeof location !== "undefined" && location.port ? location.port : _this.secure ? 443 : 80);
                        _this.transports = opts.transports || ["polling", "websocket"];
                        _this.readyState = "";
                        _this.writeBuffer = [];
                        _this.prevBufferLen = 0;
                        _this.opts = _extends({
                            path: "/engine.io",
                            agent: false,
                            withCredentials: false,
                            upgrade: true,
                            jsonp: true,
                            timestampParam: "t",
                            rememberUpgrade: false,
                            rejectUnauthorized: true,
                            perMessageDeflate: {
                                threshold: 1024
                            },
                            transportOptions: {}
                        }, opts);
                        _this.opts.path = _this.opts.path.replace(/\/$/, "") + "/";

                        if (typeof _this.opts.query === "string") {
                            _this.opts.query = parseqs.decode(_this.opts.query);
                        } // set on handshake


                        _this.id = null;
                        _this.upgrades = null;
                        _this.pingInterval = null;
                        _this.pingTimeout = null; // set on heartbeat

                        _this.pingTimeoutTimer = null;

                        if (typeof addEventListener === "function") {
                            addEventListener("beforeunload", function () {
                                if (_this.transport) {
                                    // silently close the transport
                                    _this.transport.removeAllListeners();

                                    _this.transport.close();
                                }
                            }, false);

                            if (_this.hostname !== "localhost") {
                                _this.offlineEventListener = function () {
                                    _this.onClose("transport close");
                                };

                                addEventListener("offline", _this.offlineEventListener, false);
                            }
                        }

                        _this.open();

                        return _this;
                    }
                    /**
                     * Creates transport of the given type.
                     *
                     * @param {String} transport name
                     * @return {Transport}
                     * @api private
                     */


                    _createClass(Socket, [{
                        key: "createTransport",
                        value: function createTransport(name) {
                            debug('creating transport "%s"', name);
                            var query = clone(this.opts.query); // append engine.io protocol identifier

                            query.EIO = parser.protocol; // transport name

                            query.transport = name; // session id if we already have one

                            if (this.id) query.sid = this.id;

                            var opts = _extends({}, this.opts.transportOptions[name], this.opts, {
                                query: query,
                                socket: this,
                                hostname: this.hostname,
                                secure: this.secure,
                                port: this.port
                            });

                            debug("options: %j", opts);
                            return new transports[name](opts);
                        }
                        /**
                         * Initializes transport to use and starts probe.
                         *
                         * @api private
                         */

                    }, {
                        key: "open",
                        value: function open() {
                            var transport;

                            if (this.opts.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1) {
                                transport = "websocket";
                            } else if (0 === this.transports.length) {
                                // Emit error on next tick so it can be listened to
                                var self = this;
                                setTimeout(function () {
                                    self.emit("error", "No transports available");
                                }, 0);
                                return;
                            } else {
                                transport = this.transports[0];
                            }

                            this.readyState = "opening"; // Retry with the next transport if the transport is disabled (jsonp: false)

                            try {
                                transport = this.createTransport(transport);
                            } catch (e) {
                                debug("error while creating transport: %s", e);
                                this.transports.shift();
                                this.open();
                                return;
                            }

                            transport.open();
                            this.setTransport(transport);
                        }
                        /**
                         * Sets the current transport. Disables the existing one (if any).
                         *
                         * @api private
                         */

                    }, {
                        key: "setTransport",
                        value: function setTransport(transport) {
                            debug("setting transport %s", transport.name);
                            var self = this;

                            if (this.transport) {
                                debug("clearing existing transport %s", this.transport.name);
                                this.transport.removeAllListeners();
                            } // set up transport


                            this.transport = transport; // set up transport listeners

                            transport.on("drain", function () {
                                self.onDrain();
                            }).on("packet", function (packet) {
                                self.onPacket(packet);
                            }).on("error", function (e) {
                                self.onError(e);
                            }).on("close", function () {
                                self.onClose("transport close");
                            });
                        }
                        /**
                         * Probes a transport.
                         *
                         * @param {String} transport name
                         * @api private
                         */

                    }, {
                        key: "probe",
                        value: function probe(name) {
                            debug('probing transport "%s"', name);
                            var transport = this.createTransport(name, {
                                probe: 1
                            });
                            var failed = false;
                            var self = this;
                            Socket.priorWebsocketSuccess = false;

                            function onTransportOpen() {
                                if (self.onlyBinaryUpgrades) {
                                    var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
                                    failed = failed || upgradeLosesBinary;
                                }

                                if (failed) return;
                                debug('probe transport "%s" opened', name);
                                transport.send([{
                                    type: "ping",
                                    data: "probe"
                                }]);
                                transport.once("packet", function (msg) {
                                    if (failed) return;

                                    if ("pong" === msg.type && "probe" === msg.data) {
                                        debug('probe transport "%s" pong', name);
                                        self.upgrading = true;
                                        self.emit("upgrading", transport);
                                        if (!transport) return;
                                        Socket.priorWebsocketSuccess = "websocket" === transport.name;
                                        debug('pausing current transport "%s"', self.transport.name);
                                        self.transport.pause(function () {
                                            if (failed) return;
                                            if ("closed" === self.readyState) return;
                                            debug("changing transport and sending upgrade packet");
                                            cleanup();
                                            self.setTransport(transport);
                                            transport.send([{
                                                type: "upgrade"
                                            }]);
                                            self.emit("upgrade", transport);
                                            transport = null;
                                            self.upgrading = false;
                                            self.flush();
                                        });
                                    } else {
                                        debug('probe transport "%s" failed', name);
                                        var err = new Error("probe error");
                                        err.transport = transport.name;
                                        self.emit("upgradeError", err);
                                    }
                                });
                            }

                            function freezeTransport() {
                                if (failed) return; // Any callback called by transport should be ignored since now

                                failed = true;
                                cleanup();
                                transport.close();
                                transport = null;
                            } // Handle any error that happens while probing


                            function onerror(err) {
                                var error = new Error("probe error: " + err);
                                error.transport = transport.name;
                                freezeTransport();
                                debug('probe transport "%s" failed because of error: %s', name, err);
                                self.emit("upgradeError", error);
                            }

                            function onTransportClose() {
                                onerror("transport closed");
                            } // When the socket is closed while we're probing


                            function onclose() {
                                onerror("socket closed");
                            } // When the socket is upgraded while we're probing


                            function onupgrade(to) {
                                if (transport && to.name !== transport.name) {
                                    debug('"%s" works - aborting "%s"', to.name, transport.name);
                                    freezeTransport();
                                }
                            } // Remove all listeners on the transport and on self


                            function cleanup() {
                                transport.removeListener("open", onTransportOpen);
                                transport.removeListener("error", onerror);
                                transport.removeListener("close", onTransportClose);
                                self.removeListener("close", onclose);
                                self.removeListener("upgrading", onupgrade);
                            }

                            transport.once("open", onTransportOpen);
                            transport.once("error", onerror);
                            transport.once("close", onTransportClose);
                            this.once("close", onclose);
                            this.once("upgrading", onupgrade);
                            transport.open();
                        }
                        /**
                         * Called when connection is deemed open.
                         *
                         * @api public
                         */

                    }, {
                        key: "onOpen",
                        value: function onOpen() {
                            debug("socket open");
                            this.readyState = "open";
                            Socket.priorWebsocketSuccess = "websocket" === this.transport.name;
                            this.emit("open");
                            this.flush(); // we check for `readyState` in case an `open`
                            // listener already closed the socket

                            if ("open" === this.readyState && this.opts.upgrade && this.transport.pause) {
                                debug("starting upgrade probes");
                                var i = 0;
                                var l = this.upgrades.length;

                                for (; i < l; i++) {
                                    this.probe(this.upgrades[i]);
                                }
                            }
                        }
                        /**
                         * Handles a packet.
                         *
                         * @api private
                         */

                    }, {
                        key: "onPacket",
                        value: function onPacket(packet) {
                            if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
                                debug('socket receive: type "%s", data "%s"', packet.type, packet.data);
                                this.emit("packet", packet); // Socket is live - any packet counts

                                this.emit("heartbeat");

                                switch (packet.type) {
                                    case "open":
                                        this.onHandshake(JSON.parse(packet.data));
                                        break;

                                    case "ping":
                                        this.resetPingTimeout();
                                        this.sendPacket("pong");
                                        this.emit("pong");
                                        break;

                                    case "error":
                                        var err = new Error("server error");
                                        err.code = packet.data;
                                        this.onError(err);
                                        break;

                                    case "message":
                                        this.emit("data", packet.data);
                                        this.emit("message", packet.data);
                                        break;
                                }
                            } else {
                                debug('packet received with socket readyState "%s"', this.readyState);
                            }
                        }
                        /**
                         * Called upon handshake completion.
                         *
                         * @param {Object} handshake obj
                         * @api private
                         */

                    }, {
                        key: "onHandshake",
                        value: function onHandshake(data) {
                            this.emit("handshake", data);
                            this.id = data.sid;
                            this.transport.query.sid = data.sid;
                            this.upgrades = this.filterUpgrades(data.upgrades);
                            this.pingInterval = data.pingInterval;
                            this.pingTimeout = data.pingTimeout;
                            this.onOpen(); // In case open handler closes socket

                            if ("closed" === this.readyState) return;
                            this.resetPingTimeout();
                        }
                        /**
                         * Sets and resets ping timeout timer based on server pings.
                         *
                         * @api private
                         */

                    }, {
                        key: "resetPingTimeout",
                        value: function resetPingTimeout() {
                            var _this2 = this;

                            clearTimeout(this.pingTimeoutTimer);
                            this.pingTimeoutTimer = setTimeout(function () {
                                _this2.onClose("ping timeout");
                            }, this.pingInterval + this.pingTimeout);

                            if (this.opts.autoUnref) {
                                this.pingTimeoutTimer.unref();
                            }
                        }
                        /**
                         * Called on `drain` event
                         *
                         * @api private
                         */

                    }, {
                        key: "onDrain",
                        value: function onDrain() {
                            this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important
                            // for example, when upgrading, upgrade packet is sent over,
                            // and a nonzero prevBufferLen could cause problems on `drain`

                            this.prevBufferLen = 0;

                            if (0 === this.writeBuffer.length) {
                                this.emit("drain");
                            } else {
                                this.flush();
                            }
                        }
                        /**
                         * Flush write buffers.
                         *
                         * @api private
                         */

                    }, {
                        key: "flush",
                        value: function flush() {
                            if ("closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
                                debug("flushing %d packets in socket", this.writeBuffer.length);
                                this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer
                                // splice writeBuffer and callbackBuffer on `drain`

                                this.prevBufferLen = this.writeBuffer.length;
                                this.emit("flush");
                            }
                        }
                        /**
                         * Sends a message.
                         *
                         * @param {String} message.
                         * @param {Function} callback function.
                         * @param {Object} options.
                         * @return {Socket} for chaining.
                         * @api public
                         */

                    }, {
                        key: "write",
                        value: function write(msg, options, fn) {
                            this.sendPacket("message", msg, options, fn);
                            return this;
                        }
                    }, {
                        key: "send",
                        value: function send(msg, options, fn) {
                            this.sendPacket("message", msg, options, fn);
                            return this;
                        }
                        /**
                         * Sends a packet.
                         *
                         * @param {String} packet type.
                         * @param {String} data.
                         * @param {Object} options.
                         * @param {Function} callback function.
                         * @api private
                         */

                    }, {
                        key: "sendPacket",
                        value: function sendPacket(type, data, options, fn) {
                            if ("function" === typeof data) {
                                fn = data;
                                data = undefined;
                            }

                            if ("function" === typeof options) {
                                fn = options;
                                options = null;
                            }

                            if ("closing" === this.readyState || "closed" === this.readyState) {
                                return;
                            }

                            options = options || {};
                            options.compress = false !== options.compress;
                            var packet = {
                                type: type,
                                data: data,
                                options: options
                            };
                            this.emit("packetCreate", packet);
                            this.writeBuffer.push(packet);
                            if (fn) this.once("flush", fn);
                            this.flush();
                        }
                        /**
                         * Closes the connection.
                         *
                         * @api private
                         */

                    }, {
                        key: "close",
                        value: function close() {
                            var self = this;

                            if ("opening" === this.readyState || "open" === this.readyState) {
                                this.readyState = "closing";

                                if (this.writeBuffer.length) {
                                    this.once("drain", function () {
                                        if (this.upgrading) {
                                            waitForUpgrade();
                                        } else {
                                            close();
                                        }
                                    });
                                } else if (this.upgrading) {
                                    waitForUpgrade();
                                } else {
                                    close();
                                }
                            }

                            function close() {
                                self.onClose("forced close");
                                debug("socket closing - telling transport to close");
                                self.transport.close();
                            }

                            function cleanupAndClose() {
                                self.removeListener("upgrade", cleanupAndClose);
                                self.removeListener("upgradeError", cleanupAndClose);
                                close();
                            }

                            function waitForUpgrade() {
                                // wait for upgrade to finish since we can't send packets while pausing a transport
                                self.once("upgrade", cleanupAndClose);
                                self.once("upgradeError", cleanupAndClose);
                            }

                            return this;
                        }
                        /**
                         * Called upon transport error
                         *
                         * @api private
                         */

                    }, {
                        key: "onError",
                        value: function onError(err) {
                            debug("socket error %j", err);
                            Socket.priorWebsocketSuccess = false;
                            this.emit("error", err);
                            this.onClose("transport error", err);
                        }
                        /**
                         * Called upon transport close.
                         *
                         * @api private
                         */

                    }, {
                        key: "onClose",
                        value: function onClose(reason, desc) {
                            if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
                                debug('socket close with reason: "%s"', reason);
                                var self = this; // clear timers

                                clearTimeout(this.pingIntervalTimer);
                                clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport

                                this.transport.removeAllListeners("close"); // ensure transport won't stay open

                                this.transport.close(); // ignore further transport communication

                                this.transport.removeAllListeners();

                                if (typeof removeEventListener === "function") {
                                    removeEventListener("offline", this.offlineEventListener, false);
                                } // set ready state


                                this.readyState = "closed"; // clear session id

                                this.id = null; // emit close event

                                this.emit("close", reason, desc); // clean buffers after, so users can still
                                // grab the buffers on `close` event

                                self.writeBuffer = [];
                                self.prevBufferLen = 0;
                            }
                        }
                        /**
                         * Filters upgrades, returning only those matching client transports.
                         *
                         * @param {Array} server upgrades
                         * @api private
                         *
                         */

                    }, {
                        key: "filterUpgrades",
                        value: function filterUpgrades(upgrades) {
                            var filteredUpgrades = [];
                            var i = 0;
                            var j = upgrades.length;

                            for (; i < j; i++) {
                                if (~this.transports.indexOf(upgrades[i])) filteredUpgrades.push(upgrades[i]);
                            }

                            return filteredUpgrades;
                        }
                    }]);

                    return Socket;
                }(Emitter);

                Socket.priorWebsocketSuccess = false;
                /**
                 * Protocol version.
                 *
                 * @api public
                 */

                Socket.protocol = parser.protocol; // this is an int

                function clone(obj) {
                    var o = {};

                    for (var i in obj) {
                        if (obj.hasOwnProperty(i)) {
                            o[i] = obj[i];
                        }
                    }

                    return o;
                }

                module.exports = Socket;

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/transport.js":
            /*!********************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transport.js ***!
  \********************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                var parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");

                var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("engine.io-client:transport");

                var Transport = /*#__PURE__*/function (_Emitter) {
                    _inherits(Transport, _Emitter);

                    var _super = _createSuper(Transport);

                    /**
                     * Transport abstract constructor.
                     *
                     * @param {Object} options.
                     * @api private
                     */
                    function Transport(opts) {
                        var _this;

                        _classCallCheck(this, Transport);

                        _this = _super.call(this);
                        _this.opts = opts;
                        _this.query = opts.query;
                        _this.readyState = "";
                        _this.socket = opts.socket;
                        return _this;
                    }
                    /**
                     * Emits an error.
                     *
                     * @param {String} str
                     * @return {Transport} for chaining
                     * @api public
                     */


                    _createClass(Transport, [{
                        key: "onError",
                        value: function onError(msg, desc) {
                            var err = new Error(msg);
                            err.type = "TransportError";
                            err.description = desc;
                            this.emit("error", err);
                            return this;
                        }
                        /**
                         * Opens the transport.
                         *
                         * @api public
                         */

                    }, {
                        key: "open",
                        value: function open() {
                            if ("closed" === this.readyState || "" === this.readyState) {
                                this.readyState = "opening";
                                this.doOpen();
                            }

                            return this;
                        }
                        /**
                         * Closes the transport.
                         *
                         * @api private
                         */

                    }, {
                        key: "close",
                        value: function close() {
                            if ("opening" === this.readyState || "open" === this.readyState) {
                                this.doClose();
                                this.onClose();
                            }

                            return this;
                        }
                        /**
                         * Sends multiple packets.
                         *
                         * @param {Array} packets
                         * @api private
                         */

                    }, {
                        key: "send",
                        value: function send(packets) {
                            if ("open" === this.readyState) {
                                this.write(packets);
                            } else {
                                // this might happen if the transport was silently closed in the beforeunload event handler
                                debug("transport is not open, discarding packets");
                            }
                        }
                        /**
                         * Called upon open
                         *
                         * @api private
                         */

                    }, {
                        key: "onOpen",
                        value: function onOpen() {
                            this.readyState = "open";
                            this.writable = true;
                            this.emit("open");
                        }
                        /**
                         * Called with data.
                         *
                         * @param {String} data
                         * @api private
                         */

                    }, {
                        key: "onData",
                        value: function onData(data) {
                            var packet = parser.decodePacket(data, this.socket.binaryType);
                            this.onPacket(packet);
                        }
                        /**
                         * Called with a decoded packet.
                         */

                    }, {
                        key: "onPacket",
                        value: function onPacket(packet) {
                            this.emit("packet", packet);
                        }
                        /**
                         * Called upon close.
                         *
                         * @api private
                         */

                    }, {
                        key: "onClose",
                        value: function onClose() {
                            this.readyState = "closed";
                            this.emit("close");
                        }
                    }]);

                    return Transport;
                }(Emitter);

                module.exports = Transport;

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/transports/index.js":
            /*!***************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/index.js ***!
  \***************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                var XMLHttpRequest = __webpack_require__(/*! ../../contrib/xmlhttprequest-ssl/XMLHttpRequest */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");

                var XHR = __webpack_require__(/*! ./polling-xhr */ "./node_modules/engine.io-client/lib/transports/polling-xhr.js");

                var JSONP = __webpack_require__(/*! ./polling-jsonp */ "./node_modules/engine.io-client/lib/transports/polling-jsonp.js");

                var websocket = __webpack_require__(/*! ./websocket */ "./node_modules/engine.io-client/lib/transports/websocket.js");

                exports.polling = polling;
                exports.websocket = websocket;
                /**
                 * Polling transport polymorphic constructor.
                 * Decides on xhr vs jsonp based on feature detection.
                 *
                 * @api private
                 */

                function polling(opts) {
                    var xhr;
                    var xd = false;
                    var xs = false;
                    var jsonp = false !== opts.jsonp;

                    if (typeof location !== "undefined") {
                        var isSSL = "https:" === location.protocol;
                        var port = location.port; // some user agents have empty `location.port`

                        if (!port) {
                            port = isSSL ? 443 : 80;
                        }

                        xd = opts.hostname !== location.hostname || port !== opts.port;
                        xs = opts.secure !== isSSL;
                    }

                    opts.xdomain = xd;
                    opts.xscheme = xs;
                    xhr = new XMLHttpRequest(opts);

                    if ("open" in xhr && !opts.forceJSONP) {
                        return new XHR(opts);
                    } else {
                        if (!jsonp) throw new Error("JSONP disabled");
                        return new JSONP(opts);
                    }
                }

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/transports/polling-jsonp.js":
            /*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling-jsonp.js ***!
  \***********************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

                function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                var Polling = __webpack_require__(/*! ./polling */ "./node_modules/engine.io-client/lib/transports/polling.js");

                var globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");

                var rNewline = /\n/g;
                var rEscapedNewline = /\\n/g;
                /**
                 * Global JSONP callbacks.
                 */

                var callbacks;

                var JSONPPolling = /*#__PURE__*/function (_Polling) {
                    _inherits(JSONPPolling, _Polling);

                    var _super = _createSuper(JSONPPolling);

                    /**
                     * JSONP Polling constructor.
                     *
                     * @param {Object} opts.
                     * @api public
                     */
                    function JSONPPolling(opts) {
                        var _this;

                        _classCallCheck(this, JSONPPolling);

                        _this = _super.call(this, opts);
                        _this.query = _this.query || {}; // define global callbacks array if not present
                        // we do this here (lazily) to avoid unneeded global pollution

                        if (!callbacks) {
                            // we need to consider multiple engines in the same page
                            callbacks = globalThis.___eio = globalThis.___eio || [];
                        } // callback identifier


                        _this.index = callbacks.length; // add callback to jsonp global

                        var self = _assertThisInitialized(_this);

                        callbacks.push(function (msg) {
                            self.onData(msg);
                        }); // append to query string

                        _this.query.j = _this.index;
                        return _this;
                    }
                    /**
                     * JSONP only supports binary as base64 encoded strings
                     */


                    _createClass(JSONPPolling, [{
                        key: "doClose",

                        /**
                         * Closes the socket.
                         *
                         * @api private
                         */
                        value: function doClose() {
                            if (this.script) {
                                // prevent spurious errors from being emitted when the window is unloaded
                                this.script.onerror = function () {};

                                this.script.parentNode.removeChild(this.script);
                                this.script = null;
                            }

                            if (this.form) {
                                this.form.parentNode.removeChild(this.form);
                                this.form = null;
                                this.iframe = null;
                            }

                            _get(_getPrototypeOf(JSONPPolling.prototype), "doClose", this).call(this);
                        }
                        /**
                         * Starts a poll cycle.
                         *
                         * @api private
                         */

                    }, {
                        key: "doPoll",
                        value: function doPoll() {
                            var self = this;
                            var script = document.createElement("script");

                            if (this.script) {
                                this.script.parentNode.removeChild(this.script);
                                this.script = null;
                            }

                            script.async = true;
                            script.src = this.uri();

                            script.onerror = function (e) {
                                self.onError("jsonp poll error", e);
                            };

                            var insertAt = document.getElementsByTagName("script")[0];

                            if (insertAt) {
                                insertAt.parentNode.insertBefore(script, insertAt);
                            } else {
                                (document.head || document.body).appendChild(script);
                            }

                            this.script = script;
                            var isUAgecko = "undefined" !== typeof navigator && /gecko/i.test(navigator.userAgent);

                            if (isUAgecko) {
                                setTimeout(function () {
                                    var iframe = document.createElement("iframe");
                                    document.body.appendChild(iframe);
                                    document.body.removeChild(iframe);
                                }, 100);
                            }
                        }
                        /**
                         * Writes with a hidden iframe.
                         *
                         * @param {String} data to send
                         * @param {Function} called upon flush.
                         * @api private
                         */

                    }, {
                        key: "doWrite",
                        value: function doWrite(data, fn) {
                            var self = this;
                            var iframe;

                            if (!this.form) {
                                var form = document.createElement("form");
                                var area = document.createElement("textarea");
                                var id = this.iframeId = "eio_iframe_" + this.index;
                                form.className = "socketio";
                                form.style.position = "absolute";
                                form.style.top = "-1000px";
                                form.style.left = "-1000px";
                                form.target = id;
                                form.method = "POST";
                                form.setAttribute("accept-charset", "utf-8");
                                area.name = "d";
                                form.appendChild(area);
                                document.body.appendChild(form);
                                this.form = form;
                                this.area = area;
                            }

                            this.form.action = this.uri();

                            function complete() {
                                initIframe();
                                fn();
                            }

                            function initIframe() {
                                if (self.iframe) {
                                    try {
                                        self.form.removeChild(self.iframe);
                                    } catch (e) {
                                        self.onError("jsonp polling iframe removal error", e);
                                    }
                                }

                                try {
                                    // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
                                    var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
                                    iframe = document.createElement(html);
                                } catch (e) {
                                    iframe = document.createElement("iframe");
                                    iframe.name = self.iframeId;
                                    iframe.src = "javascript:0";
                                }

                                iframe.id = self.iframeId;
                                self.form.appendChild(iframe);
                                self.iframe = iframe;
                            }

                            initIframe(); // escape \n to prevent it from being converted into \r\n by some UAs
                            // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side

                            data = data.replace(rEscapedNewline, "\\\n");
                            this.area.value = data.replace(rNewline, "\\n");

                            try {
                                this.form.submit();
                            } catch (e) {}

                            if (this.iframe.attachEvent) {
                                this.iframe.onreadystatechange = function () {
                                    if (self.iframe.readyState === "complete") {
                                        complete();
                                    }
                                };
                            } else {
                                this.iframe.onload = complete;
                            }
                        }
                    }, {
                        key: "supportsBinary",
                        get: function get() {
                            return false;
                        }
                    }]);

                    return JSONPPolling;
                }(Polling);

                module.exports = JSONPPolling;

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/transports/polling-xhr.js":
            /*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling-xhr.js ***!
  \*********************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                /* global attachEvent */
                var XMLHttpRequest = __webpack_require__(/*! ../../contrib/xmlhttprequest-ssl/XMLHttpRequest */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");

                var Polling = __webpack_require__(/*! ./polling */ "./node_modules/engine.io-client/lib/transports/polling.js");

                var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");

                var _require = __webpack_require__(/*! ../util */ "./node_modules/engine.io-client/lib/util.js"),
                    pick = _require.pick;

                var globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("engine.io-client:polling-xhr");
                /**
                 * Empty function
                 */


                function empty() {}

                var hasXHR2 = function () {
                    var xhr = new XMLHttpRequest({
                        xdomain: false
                    });
                    return null != xhr.responseType;
                }();

                var XHR = /*#__PURE__*/function (_Polling) {
                    _inherits(XHR, _Polling);

                    var _super = _createSuper(XHR);

                    /**
                     * XHR Polling constructor.
                     *
                     * @param {Object} opts
                     * @api public
                     */
                    function XHR(opts) {
                        var _this;

                        _classCallCheck(this, XHR);

                        _this = _super.call(this, opts);

                        if (typeof location !== "undefined") {
                            var isSSL = "https:" === location.protocol;
                            var port = location.port; // some user agents have empty `location.port`

                            if (!port) {
                                port = isSSL ? 443 : 80;
                            }

                            _this.xd = typeof location !== "undefined" && opts.hostname !== location.hostname || port !== opts.port;
                            _this.xs = opts.secure !== isSSL;
                        }
                        /**
                         * XHR supports binary
                         */


                        var forceBase64 = opts && opts.forceBase64;
                        _this.supportsBinary = hasXHR2 && !forceBase64;
                        return _this;
                    }
                    /**
                     * Creates a request.
                     *
                     * @param {String} method
                     * @api private
                     */


                    _createClass(XHR, [{
                        key: "request",
                        value: function request() {
                            var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                            _extends(opts, {
                                xd: this.xd,
                                xs: this.xs
                            }, this.opts);

                            return new Request(this.uri(), opts);
                        }
                        /**
                         * Sends data.
                         *
                         * @param {String} data to send.
                         * @param {Function} called upon flush.
                         * @api private
                         */

                    }, {
                        key: "doWrite",
                        value: function doWrite(data, fn) {
                            var req = this.request({
                                method: "POST",
                                data: data
                            });
                            var self = this;
                            req.on("success", fn);
                            req.on("error", function (err) {
                                self.onError("xhr post error", err);
                            });
                        }
                        /**
                         * Starts a poll cycle.
                         *
                         * @api private
                         */

                    }, {
                        key: "doPoll",
                        value: function doPoll() {
                            debug("xhr poll");
                            var req = this.request();
                            var self = this;
                            req.on("data", function (data) {
                                self.onData(data);
                            });
                            req.on("error", function (err) {
                                self.onError("xhr poll error", err);
                            });
                            this.pollXhr = req;
                        }
                    }]);

                    return XHR;
                }(Polling);

                var Request = /*#__PURE__*/function (_Emitter) {
                    _inherits(Request, _Emitter);

                    var _super2 = _createSuper(Request);

                    /**
                     * Request constructor
                     *
                     * @param {Object} options
                     * @api public
                     */
                    function Request(uri, opts) {
                        var _this2;

                        _classCallCheck(this, Request);

                        _this2 = _super2.call(this);
                        _this2.opts = opts;
                        _this2.method = opts.method || "GET";
                        _this2.uri = uri;
                        _this2.async = false !== opts.async;
                        _this2.data = undefined !== opts.data ? opts.data : null;

                        _this2.create();

                        return _this2;
                    }
                    /**
                     * Creates the XHR object and sends the request.
                     *
                     * @api private
                     */


                    _createClass(Request, [{
                        key: "create",
                        value: function create() {
                            var opts = pick(this.opts, "agent", "enablesXDR", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
                            opts.xdomain = !!this.opts.xd;
                            opts.xscheme = !!this.opts.xs;
                            var xhr = this.xhr = new XMLHttpRequest(opts);
                            var self = this;

                            try {
                                debug("xhr open %s: %s", this.method, this.uri);
                                xhr.open(this.method, this.uri, this.async);

                                try {
                                    if (this.opts.extraHeaders) {
                                        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);

                                        for (var i in this.opts.extraHeaders) {
                                            if (this.opts.extraHeaders.hasOwnProperty(i)) {
                                                xhr.setRequestHeader(i, this.opts.extraHeaders[i]);
                                            }
                                        }
                                    }
                                } catch (e) {}

                                if ("POST" === this.method) {
                                    try {
                                        xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
                                    } catch (e) {}
                                }

                                try {
                                    xhr.setRequestHeader("Accept", "*/*");
                                } catch (e) {} // ie6 check


                                if ("withCredentials" in xhr) {
                                    xhr.withCredentials = this.opts.withCredentials;
                                }

                                if (this.opts.requestTimeout) {
                                    xhr.timeout = this.opts.requestTimeout;
                                }

                                if (this.hasXDR()) {
                                    xhr.onload = function () {
                                        self.onLoad();
                                    };

                                    xhr.onerror = function () {
                                        self.onError(xhr.responseText);
                                    };
                                } else {
                                    xhr.onreadystatechange = function () {
                                        if (4 !== xhr.readyState) return;

                                        if (200 === xhr.status || 1223 === xhr.status) {
                                            self.onLoad();
                                        } else {
                                            // make sure the `error` event handler that's user-set
                                            // does not throw in the same tick and gets caught here
                                            setTimeout(function () {
                                                self.onError(typeof xhr.status === "number" ? xhr.status : 0);
                                            }, 0);
                                        }
                                    };
                                }

                                debug("xhr data %s", this.data);
                                xhr.send(this.data);
                            } catch (e) {
                                // Need to defer since .create() is called directly from the constructor
                                // and thus the 'error' event can only be only bound *after* this exception
                                // occurs.  Therefore, also, we cannot throw here at all.
                                setTimeout(function () {
                                    self.onError(e);
                                }, 0);
                                return;
                            }

                            if (typeof document !== "undefined") {
                                this.index = Request.requestsCount++;
                                Request.requests[this.index] = this;
                            }
                        }
                        /**
                         * Called upon successful response.
                         *
                         * @api private
                         */

                    }, {
                        key: "onSuccess",
                        value: function onSuccess() {
                            this.emit("success");
                            this.cleanup();
                        }
                        /**
                         * Called if we have data.
                         *
                         * @api private
                         */

                    }, {
                        key: "onData",
                        value: function onData(data) {
                            this.emit("data", data);
                            this.onSuccess();
                        }
                        /**
                         * Called upon error.
                         *
                         * @api private
                         */

                    }, {
                        key: "onError",
                        value: function onError(err) {
                            this.emit("error", err);
                            this.cleanup(true);
                        }
                        /**
                         * Cleans up house.
                         *
                         * @api private
                         */

                    }, {
                        key: "cleanup",
                        value: function cleanup(fromError) {
                            if ("undefined" === typeof this.xhr || null === this.xhr) {
                                return;
                            } // xmlhttprequest


                            if (this.hasXDR()) {
                                this.xhr.onload = this.xhr.onerror = empty;
                            } else {
                                this.xhr.onreadystatechange = empty;
                            }

                            if (fromError) {
                                try {
                                    this.xhr.abort();
                                } catch (e) {}
                            }

                            if (typeof document !== "undefined") {
                                delete Request.requests[this.index];
                            }

                            this.xhr = null;
                        }
                        /**
                         * Called upon load.
                         *
                         * @api private
                         */

                    }, {
                        key: "onLoad",
                        value: function onLoad() {
                            var data = this.xhr.responseText;

                            if (data !== null) {
                                this.onData(data);
                            }
                        }
                        /**
                         * Check if it has XDomainRequest.
                         *
                         * @api private
                         */

                    }, {
                        key: "hasXDR",
                        value: function hasXDR() {
                            return typeof XDomainRequest !== "undefined" && !this.xs && this.enablesXDR;
                        }
                        /**
                         * Aborts the request.
                         *
                         * @api public
                         */

                    }, {
                        key: "abort",
                        value: function abort() {
                            this.cleanup();
                        }
                    }]);

                    return Request;
                }(Emitter);
                /**
                 * Aborts pending requests when unloading the window. This is needed to prevent
                 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
                 * emitted.
                 */


                Request.requestsCount = 0;
                Request.requests = {};

                if (typeof document !== "undefined") {
                    if (typeof attachEvent === "function") {
                        attachEvent("onunload", unloadHandler);
                    } else if (typeof addEventListener === "function") {
                        var terminationEvent = "onpagehide" in globalThis ? "pagehide" : "unload";
                        addEventListener(terminationEvent, unloadHandler, false);
                    }
                }

                function unloadHandler() {
                    for (var i in Request.requests) {
                        if (Request.requests.hasOwnProperty(i)) {
                            Request.requests[i].abort();
                        }
                    }
                }

                module.exports = XHR;
                module.exports.Request = Request;

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/transports/polling.js":
            /*!*****************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling.js ***!
  \*****************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                var Transport = __webpack_require__(/*! ../transport */ "./node_modules/engine.io-client/lib/transport.js");

                var parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");

                var parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");

                var yeast = __webpack_require__(/*! yeast */ "./node_modules/yeast/index.js");

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("engine.io-client:polling");

                var Polling = /*#__PURE__*/function (_Transport) {
                    _inherits(Polling, _Transport);

                    var _super = _createSuper(Polling);

                    function Polling() {
                        _classCallCheck(this, Polling);

                        return _super.apply(this, arguments);
                    }

                    _createClass(Polling, [{
                        key: "doOpen",

                        /**
                         * Opens the socket (triggers polling). We write a PING message to determine
                         * when the transport is open.
                         *
                         * @api private
                         */
                        value: function doOpen() {
                            this.poll();
                        }
                        /**
                         * Pauses polling.
                         *
                         * @param {Function} callback upon buffers are flushed and transport is paused
                         * @api private
                         */

                    }, {
                        key: "pause",
                        value: function pause(onPause) {
                            var self = this;
                            this.readyState = "pausing";

                            function pause() {
                                debug("paused");
                                self.readyState = "paused";
                                onPause();
                            }

                            if (this.polling || !this.writable) {
                                var total = 0;

                                if (this.polling) {
                                    debug("we are currently polling - waiting to pause");
                                    total++;
                                    this.once("pollComplete", function () {
                                        debug("pre-pause polling complete");
                                        --total || pause();
                                    });
                                }

                                if (!this.writable) {
                                    debug("we are currently writing - waiting to pause");
                                    total++;
                                    this.once("drain", function () {
                                        debug("pre-pause writing complete");
                                        --total || pause();
                                    });
                                }
                            } else {
                                pause();
                            }
                        }
                        /**
                         * Starts polling cycle.
                         *
                         * @api public
                         */

                    }, {
                        key: "poll",
                        value: function poll() {
                            debug("polling");
                            this.polling = true;
                            this.doPoll();
                            this.emit("poll");
                        }
                        /**
                         * Overloads onData to detect payloads.
                         *
                         * @api private
                         */

                    }, {
                        key: "onData",
                        value: function onData(data) {
                            var self = this;
                            debug("polling got data %s", data);

                            var callback = function callback(packet, index, total) {
                                // if its the first message we consider the transport open
                                if ("opening" === self.readyState && packet.type === "open") {
                                    self.onOpen();
                                } // if its a close packet, we close the ongoing requests


                                if ("close" === packet.type) {
                                    self.onClose();
                                    return false;
                                } // otherwise bypass onData and handle the message


                                self.onPacket(packet);
                            }; // decode payload


                            parser.decodePayload(data, this.socket.binaryType).forEach(callback); // if an event did not trigger closing

                            if ("closed" !== this.readyState) {
                                // if we got data we're not polling
                                this.polling = false;
                                this.emit("pollComplete");

                                if ("open" === this.readyState) {
                                    this.poll();
                                } else {
                                    debug('ignoring poll - transport state "%s"', this.readyState);
                                }
                            }
                        }
                        /**
                         * For polling, send a close packet.
                         *
                         * @api private
                         */

                    }, {
                        key: "doClose",
                        value: function doClose() {
                            var self = this;

                            function close() {
                                debug("writing close packet");
                                self.write([{
                                    type: "close"
                                }]);
                            }

                            if ("open" === this.readyState) {
                                debug("transport open - closing");
                                close();
                            } else {
                                // in case we're trying to close while
                                // handshaking is in progress (GH-164)
                                debug("transport not open - deferring close");
                                this.once("open", close);
                            }
                        }
                        /**
                         * Writes a packets payload.
                         *
                         * @param {Array} data packets
                         * @param {Function} drain callback
                         * @api private
                         */

                    }, {
                        key: "write",
                        value: function write(packets) {
                            var _this = this;

                            this.writable = false;
                            parser.encodePayload(packets, function (data) {
                                _this.doWrite(data, function () {
                                    _this.writable = true;

                                    _this.emit("drain");
                                });
                            });
                        }
                        /**
                         * Generates uri for connection.
                         *
                         * @api private
                         */

                    }, {
                        key: "uri",
                        value: function uri() {
                            var query = this.query || {};
                            var schema = this.opts.secure ? "https" : "http";
                            var port = ""; // cache busting is forced

                            if (false !== this.opts.timestampRequests) {
                                query[this.opts.timestampParam] = yeast();
                            }

                            if (!this.supportsBinary && !query.sid) {
                                query.b64 = 1;
                            }

                            query = parseqs.encode(query); // avoid port if default for schema

                            if (this.opts.port && ("https" === schema && Number(this.opts.port) !== 443 || "http" === schema && Number(this.opts.port) !== 80)) {
                                port = ":" + this.opts.port;
                            } // prepend ? to query


                            if (query.length) {
                                query = "?" + query;
                            }

                            var ipv6 = this.opts.hostname.indexOf(":") !== -1;
                            return schema + "://" + (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) + port + this.opts.path + query;
                        }
                    }, {
                        key: "name",

                        /**
                         * Transport name.
                         */
                        get: function get() {
                            return "polling";
                        }
                    }]);

                    return Polling;
                }(Transport);

                module.exports = Polling;

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js":
            /*!***************************************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js ***!
  \***************************************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                var globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");

                module.exports = {
                    WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,
                    usingBrowserWebSocket: true,
                    defaultBinaryType: "arraybuffer"
                };

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/transports/websocket.js":
            /*!*******************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/websocket.js ***!
  \*******************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                var Transport = __webpack_require__(/*! ../transport */ "./node_modules/engine.io-client/lib/transport.js");

                var parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");

                var parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");

                var yeast = __webpack_require__(/*! yeast */ "./node_modules/yeast/index.js");

                var _require = __webpack_require__(/*! ../util */ "./node_modules/engine.io-client/lib/util.js"),
                    pick = _require.pick;

                var _require2 = __webpack_require__(/*! ./websocket-constructor */ "./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js"),
                    WebSocket = _require2.WebSocket,
                    usingBrowserWebSocket = _require2.usingBrowserWebSocket,
                    defaultBinaryType = _require2.defaultBinaryType;

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("engine.io-client:websocket"); // detect ReactNative environment


                var isReactNative = typeof navigator !== "undefined" && typeof navigator.product === "string" && navigator.product.toLowerCase() === "reactnative";

                var WS = /*#__PURE__*/function (_Transport) {
                    _inherits(WS, _Transport);

                    var _super = _createSuper(WS);

                    /**
                     * WebSocket transport constructor.
                     *
                     * @api {Object} connection options
                     * @api public
                     */
                    function WS(opts) {
                        var _this;

                        _classCallCheck(this, WS);

                        _this = _super.call(this, opts);
                        _this.supportsBinary = !opts.forceBase64;
                        return _this;
                    }
                    /**
                     * Transport name.
                     *
                     * @api public
                     */


                    _createClass(WS, [{
                        key: "doOpen",

                        /**
                         * Opens socket.
                         *
                         * @api private
                         */
                        value: function doOpen() {
                            if (!this.check()) {
                                // let probe timeout
                                return;
                            }

                            var uri = this.uri();
                            var protocols = this.opts.protocols; // React Native only supports the 'headers' option, and will print a warning if anything else is passed

                            var opts = isReactNative ? {} : pick(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity");

                            if (this.opts.extraHeaders) {
                                opts.headers = this.opts.extraHeaders;
                            }

                            try {
                                this.ws = usingBrowserWebSocket && !isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts);
                            } catch (err) {
                                return this.emit("error", err);
                            }

                            this.ws.binaryType = this.socket.binaryType || defaultBinaryType;
                            this.addEventListeners();
                        }
                        /**
                         * Adds event listeners to the socket
                         *
                         * @api private
                         */

                    }, {
                        key: "addEventListeners",
                        value: function addEventListeners() {
                            var _this2 = this;

                            this.ws.onopen = function () {
                                if (_this2.opts.autoUnref) {
                                    _this2.ws._socket.unref();
                                }

                                _this2.onOpen();
                            };

                            this.ws.onclose = this.onClose.bind(this);

                            this.ws.onmessage = function (ev) {
                                return _this2.onData(ev.data);
                            };

                            this.ws.onerror = function (e) {
                                return _this2.onError("websocket error", e);
                            };
                        }
                        /**
                         * Writes data to socket.
                         *
                         * @param {Array} array of packets.
                         * @api private
                         */

                    }, {
                        key: "write",
                        value: function write(packets) {
                            var self = this;
                            this.writable = false; // encodePacket efficient as it uses WS framing
                            // no need for encodePayload

                            var total = packets.length;
                            var i = 0;
                            var l = total;

                            for (; i < l; i++) {
                                (function (packet) {
                                    parser.encodePacket(packet, self.supportsBinary, function (data) {
                                        // always create a new object (GH-437)
                                        var opts = {};

                                        if (!usingBrowserWebSocket) {
                                            if (packet.options) {
                                                opts.compress = packet.options.compress;
                                            }

                                            if (self.opts.perMessageDeflate) {
                                                var len = "string" === typeof data ? Buffer.byteLength(data) : data.length;

                                                if (len < self.opts.perMessageDeflate.threshold) {
                                                    opts.compress = false;
                                                }
                                            }
                                        } // Sometimes the websocket has already been closed but the browser didn't
                                        // have a chance of informing us about it yet, in that case send will
                                        // throw an error


                                        try {
                                            if (usingBrowserWebSocket) {
                                                // TypeError is thrown when passing the second argument on Safari
                                                self.ws.send(data);
                                            } else {
                                                self.ws.send(data, opts);
                                            }
                                        } catch (e) {
                                            debug("websocket closed before onclose event");
                                        }

                                        --total || done();
                                    });
                                })(packets[i]);
                            }

                            function done() {
                                self.emit("flush"); // fake drain
                                // defer to next tick to allow Socket to clear writeBuffer

                                setTimeout(function () {
                                    self.writable = true;
                                    self.emit("drain");
                                }, 0);
                            }
                        }
                        /**
                         * Called upon close
                         *
                         * @api private
                         */

                    }, {
                        key: "onClose",
                        value: function onClose() {
                            Transport.prototype.onClose.call(this);
                        }
                        /**
                         * Closes socket.
                         *
                         * @api private
                         */

                    }, {
                        key: "doClose",
                        value: function doClose() {
                            if (typeof this.ws !== "undefined") {
                                this.ws.close();
                                this.ws = null;
                            }
                        }
                        /**
                         * Generates uri for connection.
                         *
                         * @api private
                         */

                    }, {
                        key: "uri",
                        value: function uri() {
                            var query = this.query || {};
                            var schema = this.opts.secure ? "wss" : "ws";
                            var port = ""; // avoid port if default for schema

                            if (this.opts.port && ("wss" === schema && Number(this.opts.port) !== 443 || "ws" === schema && Number(this.opts.port) !== 80)) {
                                port = ":" + this.opts.port;
                            } // append timestamp to URI


                            if (this.opts.timestampRequests) {
                                query[this.opts.timestampParam] = yeast();
                            } // communicate binary support capabilities


                            if (!this.supportsBinary) {
                                query.b64 = 1;
                            }

                            query = parseqs.encode(query); // prepend ? to query

                            if (query.length) {
                                query = "?" + query;
                            }

                            var ipv6 = this.opts.hostname.indexOf(":") !== -1;
                            return schema + "://" + (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) + port + this.opts.path + query;
                        }
                        /**
                         * Feature detection for WebSocket.
                         *
                         * @return {Boolean} whether this transport is available.
                         * @api public
                         */

                    }, {
                        key: "check",
                        value: function check() {
                            return !!WebSocket && !("__initialize" in WebSocket && this.name === WS.prototype.name);
                        }
                    }, {
                        key: "name",
                        get: function get() {
                            return "websocket";
                        }
                    }]);

                    return WS;
                }(Transport);

                module.exports = WS;

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/util.js":
            /*!***************************************************!*\
  !*** ./node_modules/engine.io-client/lib/util.js ***!
  \***************************************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                module.exports.pick = function (obj) {
                    for (var _len = arguments.length, attr = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                        attr[_key - 1] = arguments[_key];
                    }

                    return attr.reduce(function (acc, k) {
                        if (obj.hasOwnProperty(k)) {
                            acc[k] = obj[k];
                        }

                        return acc;
                    }, {});
                };

                /***/ }),

            /***/ "./node_modules/engine.io-client/lib/xmlhttprequest.js":
            /*!*************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/xmlhttprequest.js ***!
  \*************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

// browser shim for xmlhttprequest module
                var hasCORS = __webpack_require__(/*! has-cors */ "./node_modules/has-cors/index.js");

                var globalThis = __webpack_require__(/*! ./globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");

                module.exports = function (opts) {
                    var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest
                    // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx

                    var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
                    // https://github.com/Automattic/engine.io-client/pull/217

                    var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE

                    try {
                        if ("undefined" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
                            return new XMLHttpRequest();
                        }
                    } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true
                    // because loading bar keeps flashing when using jsonp-polling
                    // https://github.com/yujiosaka/socke.io-ie8-loading-example


                    try {
                        if ("undefined" !== typeof XDomainRequest && !xscheme && enablesXDR) {
                            return new XDomainRequest();
                        }
                    } catch (e) {}

                    if (!xdomain) {
                        try {
                            return new globalThis[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
                        } catch (e) {}
                    }
                };

                /***/ }),

            /***/ "./node_modules/engine.io-parser/lib/commons.js":
            /*!******************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/commons.js ***!
  \******************************************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                var PACKET_TYPES = Object.create(null); // no Map = no polyfill

                PACKET_TYPES["open"] = "0";
                PACKET_TYPES["close"] = "1";
                PACKET_TYPES["ping"] = "2";
                PACKET_TYPES["pong"] = "3";
                PACKET_TYPES["message"] = "4";
                PACKET_TYPES["upgrade"] = "5";
                PACKET_TYPES["noop"] = "6";
                var PACKET_TYPES_REVERSE = Object.create(null);
                Object.keys(PACKET_TYPES).forEach(function (key) {
                    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;
                });
                var ERROR_PACKET = {
                    type: "error",
                    data: "parser error"
                };
                module.exports = {
                    PACKET_TYPES: PACKET_TYPES,
                    PACKET_TYPES_REVERSE: PACKET_TYPES_REVERSE,
                    ERROR_PACKET: ERROR_PACKET
                };

                /***/ }),

            /***/ "./node_modules/engine.io-parser/lib/decodePacket.browser.js":
            /*!*******************************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/decodePacket.browser.js ***!
  \*******************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                var _require = __webpack_require__(/*! ./commons */ "./node_modules/engine.io-parser/lib/commons.js"),
                    PACKET_TYPES_REVERSE = _require.PACKET_TYPES_REVERSE,
                    ERROR_PACKET = _require.ERROR_PACKET;

                var withNativeArrayBuffer = typeof ArrayBuffer === "function";
                var base64decoder;

                if (withNativeArrayBuffer) {
                    base64decoder = __webpack_require__(/*! base64-arraybuffer */ "./node_modules/engine.io-parser/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js");
                }

                var decodePacket = function decodePacket(encodedPacket, binaryType) {
                    if (typeof encodedPacket !== "string") {
                        return {
                            type: "message",
                            data: mapBinary(encodedPacket, binaryType)
                        };
                    }

                    var type = encodedPacket.charAt(0);

                    if (type === "b") {
                        return {
                            type: "message",
                            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)
                        };
                    }

                    var packetType = PACKET_TYPES_REVERSE[type];

                    if (!packetType) {
                        return ERROR_PACKET;
                    }

                    return encodedPacket.length > 1 ? {
                        type: PACKET_TYPES_REVERSE[type],
                        data: encodedPacket.substring(1)
                    } : {
                        type: PACKET_TYPES_REVERSE[type]
                    };
                };

                var decodeBase64Packet = function decodeBase64Packet(data, binaryType) {
                    if (base64decoder) {
                        var decoded = base64decoder.decode(data);
                        return mapBinary(decoded, binaryType);
                    } else {
                        return {
                            base64: true,
                            data: data
                        }; // fallback for old browsers
                    }
                };

                var mapBinary = function mapBinary(data, binaryType) {
                    switch (binaryType) {
                        case "blob":
                            return data instanceof ArrayBuffer ? new Blob([data]) : data;

                        case "arraybuffer":
                        default:
                            return data;
                        // assuming the data is already an ArrayBuffer
                    }
                };

                module.exports = decodePacket;

                /***/ }),

            /***/ "./node_modules/engine.io-parser/lib/encodePacket.browser.js":
            /*!*******************************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/encodePacket.browser.js ***!
  \*******************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                var _require = __webpack_require__(/*! ./commons */ "./node_modules/engine.io-parser/lib/commons.js"),
                    PACKET_TYPES = _require.PACKET_TYPES;

                var withNativeBlob = typeof Blob === "function" || typeof Blob !== "undefined" && Object.prototype.toString.call(Blob) === "[object BlobConstructor]";
                var withNativeArrayBuffer = typeof ArrayBuffer === "function"; // ArrayBuffer.isView method is not defined in IE10

                var isView = function isView(obj) {
                    return typeof ArrayBuffer.isView === "function" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;
                };

                var encodePacket = function encodePacket(_ref, supportsBinary, callback) {
                    var type = _ref.type,
                        data = _ref.data;

                    if (withNativeBlob && data instanceof Blob) {
                        if (supportsBinary) {
                            return callback(data);
                        } else {
                            return encodeBlobAsBase64(data, callback);
                        }
                    } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {
                        if (supportsBinary) {
                            return callback(data instanceof ArrayBuffer ? data : data.buffer);
                        } else {
                            return encodeBlobAsBase64(new Blob([data]), callback);
                        }
                    } // plain string


                    return callback(PACKET_TYPES[type] + (data || ""));
                };

                var encodeBlobAsBase64 = function encodeBlobAsBase64(data, callback) {
                    var fileReader = new FileReader();

                    fileReader.onload = function () {
                        var content = fileReader.result.split(",")[1];
                        callback("b" + content);
                    };

                    return fileReader.readAsDataURL(data);
                };

                module.exports = encodePacket;

                /***/ }),

            /***/ "./node_modules/engine.io-parser/lib/index.js":
            /*!****************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/index.js ***!
  \****************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                var encodePacket = __webpack_require__(/*! ./encodePacket */ "./node_modules/engine.io-parser/lib/encodePacket.browser.js");

                var decodePacket = __webpack_require__(/*! ./decodePacket */ "./node_modules/engine.io-parser/lib/decodePacket.browser.js");

                var SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text

                var encodePayload = function encodePayload(packets, callback) {
                    // some packets may be added to the array while encoding, so the initial length must be saved
                    var length = packets.length;
                    var encodedPackets = new Array(length);
                    var count = 0;
                    packets.forEach(function (packet, i) {
                        // force base64 encoding for binary packets
                        encodePacket(packet, false, function (encodedPacket) {
                            encodedPackets[i] = encodedPacket;

                            if (++count === length) {
                                callback(encodedPackets.join(SEPARATOR));
                            }
                        });
                    });
                };

                var decodePayload = function decodePayload(encodedPayload, binaryType) {
                    var encodedPackets = encodedPayload.split(SEPARATOR);
                    var packets = [];

                    for (var i = 0; i < encodedPackets.length; i++) {
                        var decodedPacket = decodePacket(encodedPackets[i], binaryType);
                        packets.push(decodedPacket);

                        if (decodedPacket.type === "error") {
                            break;
                        }
                    }

                    return packets;
                };

                module.exports = {
                    protocol: 4,
                    encodePacket: encodePacket,
                    encodePayload: encodePayload,
                    decodePacket: decodePacket,
                    decodePayload: decodePayload
                };

                /***/ }),

            /***/ "./node_modules/engine.io-parser/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":
            /*!*************************************************************************************************!*\
  !*** ./node_modules/engine.io-parser/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js ***!
  \*************************************************************************************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                /*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
                (function (chars) {
                    "use strict";

                    exports.encode = function (arraybuffer) {
                        var bytes = new Uint8Array(arraybuffer),
                            i,
                            len = bytes.length,
                            base64 = "";

                        for (i = 0; i < len; i += 3) {
                            base64 += chars[bytes[i] >> 2];
                            base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];
                            base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];
                            base64 += chars[bytes[i + 2] & 63];
                        }

                        if (len % 3 === 2) {
                            base64 = base64.substring(0, base64.length - 1) + "=";
                        } else if (len % 3 === 1) {
                            base64 = base64.substring(0, base64.length - 2) + "==";
                        }

                        return base64;
                    };

                    exports.decode = function (base64) {
                        var bufferLength = base64.length * 0.75,
                            len = base64.length,
                            i,
                            p = 0,
                            encoded1,
                            encoded2,
                            encoded3,
                            encoded4;

                        if (base64[base64.length - 1] === "=") {
                            bufferLength--;

                            if (base64[base64.length - 2] === "=") {
                                bufferLength--;
                            }
                        }

                        var arraybuffer = new ArrayBuffer(bufferLength),
                            bytes = new Uint8Array(arraybuffer);

                        for (i = 0; i < len; i += 4) {
                            encoded1 = chars.indexOf(base64[i]);
                            encoded2 = chars.indexOf(base64[i + 1]);
                            encoded3 = chars.indexOf(base64[i + 2]);
                            encoded4 = chars.indexOf(base64[i + 3]);
                            bytes[p++] = encoded1 << 2 | encoded2 >> 4;
                            bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
                            bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
                        }

                        return arraybuffer;
                    };
                })("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");

                /***/ }),

            /***/ "./node_modules/has-cors/index.js":
            /*!****************************************!*\
  !*** ./node_modules/has-cors/index.js ***!
  \****************************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                /**
                 * Module exports.
                 *
                 * Logic borrowed from Modernizr:
                 *
                 *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
                 */
                try {
                    module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();
                } catch (err) {
                    // if XMLHttp support is disabled in IE then it will throw
                    // when trying to create
                    module.exports = false;
                }

                /***/ }),

            /***/ "./node_modules/ms/index.js":
            /*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                /**
                 * Helpers.
                 */
                var s = 1000;
                var m = s * 60;
                var h = m * 60;
                var d = h * 24;
                var w = d * 7;
                var y = d * 365.25;
                /**
                 * Parse or format the given `val`.
                 *
                 * Options:
                 *
                 *  - `long` verbose formatting [false]
                 *
                 * @param {String|Number} val
                 * @param {Object} [options]
                 * @throws {Error} throw an error if val is not a non-empty string or a number
                 * @return {String|Number}
                 * @api public
                 */

                module.exports = function (val, options) {
                    options = options || {};

                    var type = _typeof(val);

                    if (type === 'string' && val.length > 0) {
                        return parse(val);
                    } else if (type === 'number' && isFinite(val)) {
                        return options["long"] ? fmtLong(val) : fmtShort(val);
                    }

                    throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
                };
                /**
                 * Parse the given `str` and return milliseconds.
                 *
                 * @param {String} str
                 * @return {Number}
                 * @api private
                 */


                function parse(str) {
                    str = String(str);

                    if (str.length > 100) {
                        return;
                    }

                    var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);

                    if (!match) {
                        return;
                    }

                    var n = parseFloat(match[1]);
                    var type = (match[2] || 'ms').toLowerCase();

                    switch (type) {
                        case 'years':
                        case 'year':
                        case 'yrs':
                        case 'yr':
                        case 'y':
                            return n * y;

                        case 'weeks':
                        case 'week':
                        case 'w':
                            return n * w;

                        case 'days':
                        case 'day':
                        case 'd':
                            return n * d;

                        case 'hours':
                        case 'hour':
                        case 'hrs':
                        case 'hr':
                        case 'h':
                            return n * h;

                        case 'minutes':
                        case 'minute':
                        case 'mins':
                        case 'min':
                        case 'm':
                            return n * m;

                        case 'seconds':
                        case 'second':
                        case 'secs':
                        case 'sec':
                        case 's':
                            return n * s;

                        case 'milliseconds':
                        case 'millisecond':
                        case 'msecs':
                        case 'msec':
                        case 'ms':
                            return n;

                        default:
                            return undefined;
                    }
                }
                /**
                 * Short format for `ms`.
                 *
                 * @param {Number} ms
                 * @return {String}
                 * @api private
                 */


                function fmtShort(ms) {
                    var msAbs = Math.abs(ms);

                    if (msAbs >= d) {
                        return Math.round(ms / d) + 'd';
                    }

                    if (msAbs >= h) {
                        return Math.round(ms / h) + 'h';
                    }

                    if (msAbs >= m) {
                        return Math.round(ms / m) + 'm';
                    }

                    if (msAbs >= s) {
                        return Math.round(ms / s) + 's';
                    }

                    return ms + 'ms';
                }
                /**
                 * Long format for `ms`.
                 *
                 * @param {Number} ms
                 * @return {String}
                 * @api private
                 */


                function fmtLong(ms) {
                    var msAbs = Math.abs(ms);

                    if (msAbs >= d) {
                        return plural(ms, msAbs, d, 'day');
                    }

                    if (msAbs >= h) {
                        return plural(ms, msAbs, h, 'hour');
                    }

                    if (msAbs >= m) {
                        return plural(ms, msAbs, m, 'minute');
                    }

                    if (msAbs >= s) {
                        return plural(ms, msAbs, s, 'second');
                    }

                    return ms + ' ms';
                }
                /**
                 * Pluralization helper.
                 */


                function plural(ms, msAbs, n, name) {
                    var isPlural = msAbs >= n * 1.5;
                    return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
                }

                /***/ }),

            /***/ "./node_modules/parseqs/index.js":
            /*!***************************************!*\
  !*** ./node_modules/parseqs/index.js ***!
  \***************************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                /**
                 * Compiles a querystring
                 * Returns string representation of the object
                 *
                 * @param {Object}
                 * @api private
                 */
                exports.encode = function (obj) {
                    var str = '';

                    for (var i in obj) {
                        if (obj.hasOwnProperty(i)) {
                            if (str.length) str += '&';
                            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
                        }
                    }

                    return str;
                };
                /**
                 * Parses a simple querystring into an object
                 *
                 * @param {String} qs
                 * @api private
                 */


                exports.decode = function (qs) {
                    var qry = {};
                    var pairs = qs.split('&');

                    for (var i = 0, l = pairs.length; i < l; i++) {
                        var pair = pairs[i].split('=');
                        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
                    }

                    return qry;
                };

                /***/ }),

            /***/ "./node_modules/parseuri/index.js":
            /*!****************************************!*\
  !*** ./node_modules/parseuri/index.js ***!
  \****************************************/
            /*! no static exports found */
            /***/ (function(module, exports) {

                /**
                 * Parses an URI
                 *
                 * @author Steven Levithan <stevenlevithan.com> (MIT license)
                 * @api private
                 */
                var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
                var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];

                module.exports = function parseuri(str) {
                    var src = str,
                        b = str.indexOf('['),
                        e = str.indexOf(']');

                    if (b != -1 && e != -1) {
                        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
                    }

                    var m = re.exec(str || ''),
                        uri = {},
                        i = 14;

                    while (i--) {
                        uri[parts[i]] = m[i] || '';
                    }

                    if (b != -1 && e != -1) {
                        uri.source = src;
                        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
                        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
                        uri.ipv6uri = true;
                    }

                    uri.pathNames = pathNames(uri, uri['path']);
                    uri.queryKey = queryKey(uri, uri['query']);
                    return uri;
                };

                function pathNames(obj, path) {
                    var regx = /\/{2,9}/g,
                        names = path.replace(regx, "/").split("/");

                    if (path.substr(0, 1) == '/' || path.length === 0) {
                        names.splice(0, 1);
                    }

                    if (path.substr(path.length - 1, 1) == '/') {
                        names.splice(names.length - 1, 1);
                    }

                    return names;
                }

                function queryKey(uri, query) {
                    var data = {};
                    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {
                        if ($1) {
                            data[$1] = $2;
                        }
                    });
                    return data;
                }

                /***/ }),

            /***/ "./node_modules/socket.io-parser/dist/binary.js":
            /*!******************************************************!*\
  !*** ./node_modules/socket.io-parser/dist/binary.js ***!
  \******************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.reconstructPacket = exports.deconstructPacket = void 0;

                var is_binary_1 = __webpack_require__(/*! ./is-binary */ "./node_modules/socket.io-parser/dist/is-binary.js");
                /**
                 * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.
                 *
                 * @param {Object} packet - socket.io event packet
                 * @return {Object} with deconstructed packet and list of buffers
                 * @public
                 */


                function deconstructPacket(packet) {
                    var buffers = [];
                    var packetData = packet.data;
                    var pack = packet;
                    pack.data = _deconstructPacket(packetData, buffers);
                    pack.attachments = buffers.length; // number of binary 'attachments'

                    return {
                        packet: pack,
                        buffers: buffers
                    };
                }

                exports.deconstructPacket = deconstructPacket;

                function _deconstructPacket(data, buffers) {
                    if (!data) return data;

                    if (is_binary_1.isBinary(data)) {
                        var placeholder = {
                            _placeholder: true,
                            num: buffers.length
                        };
                        buffers.push(data);
                        return placeholder;
                    } else if (Array.isArray(data)) {
                        var newData = new Array(data.length);

                        for (var i = 0; i < data.length; i++) {
                            newData[i] = _deconstructPacket(data[i], buffers);
                        }

                        return newData;
                    } else if (_typeof(data) === "object" && !(data instanceof Date)) {
                        var _newData = {};

                        for (var key in data) {
                            if (data.hasOwnProperty(key)) {
                                _newData[key] = _deconstructPacket(data[key], buffers);
                            }
                        }

                        return _newData;
                    }

                    return data;
                }
                /**
                 * Reconstructs a binary packet from its placeholder packet and buffers
                 *
                 * @param {Object} packet - event packet with placeholders
                 * @param {Array} buffers - binary buffers to put in placeholder positions
                 * @return {Object} reconstructed packet
                 * @public
                 */


                function reconstructPacket(packet, buffers) {
                    packet.data = _reconstructPacket(packet.data, buffers);
                    packet.attachments = undefined; // no longer useful

                    return packet;
                }

                exports.reconstructPacket = reconstructPacket;

                function _reconstructPacket(data, buffers) {
                    if (!data) return data;

                    if (data && data._placeholder) {
                        return buffers[data.num]; // appropriate buffer (should be natural order anyway)
                    } else if (Array.isArray(data)) {
                        for (var i = 0; i < data.length; i++) {
                            data[i] = _reconstructPacket(data[i], buffers);
                        }
                    } else if (_typeof(data) === "object") {
                        for (var key in data) {
                            if (data.hasOwnProperty(key)) {
                                data[key] = _reconstructPacket(data[key], buffers);
                            }
                        }
                    }

                    return data;
                }

                /***/ }),

            /***/ "./node_modules/socket.io-parser/dist/index.js":
            /*!*****************************************************!*\
  !*** ./node_modules/socket.io-parser/dist/index.js ***!
  \*****************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

                function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;

                var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");

                var binary_1 = __webpack_require__(/*! ./binary */ "./node_modules/socket.io-parser/dist/binary.js");

                var is_binary_1 = __webpack_require__(/*! ./is-binary */ "./node_modules/socket.io-parser/dist/is-binary.js");

                var debug = __webpack_require__(/*! debug */ "./node_modules/debug/src/browser.js")("socket.io-parser");
                /**
                 * Protocol version.
                 *
                 * @public
                 */


                exports.protocol = 5;
                var PacketType;

                (function (PacketType) {
                    PacketType[PacketType["CONNECT"] = 0] = "CONNECT";
                    PacketType[PacketType["DISCONNECT"] = 1] = "DISCONNECT";
                    PacketType[PacketType["EVENT"] = 2] = "EVENT";
                    PacketType[PacketType["ACK"] = 3] = "ACK";
                    PacketType[PacketType["CONNECT_ERROR"] = 4] = "CONNECT_ERROR";
                    PacketType[PacketType["BINARY_EVENT"] = 5] = "BINARY_EVENT";
                    PacketType[PacketType["BINARY_ACK"] = 6] = "BINARY_ACK";
                })(PacketType = exports.PacketType || (exports.PacketType = {}));
                /**
                 * A socket.io Encoder instance
                 */


                var Encoder = /*#__PURE__*/function () {
                    function Encoder() {
                        _classCallCheck(this, Encoder);
                    }

                    _createClass(Encoder, [{
                        key: "encode",

                        /**
                         * Encode a packet as a single string if non-binary, or as a
                         * buffer sequence, depending on packet type.
                         *
                         * @param {Object} obj - packet object
                         */
                        value: function encode(obj) {
                            debug("encoding packet %j", obj);

                            if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {
                                if (is_binary_1.hasBinary(obj)) {
                                    obj.type = obj.type === PacketType.EVENT ? PacketType.BINARY_EVENT : PacketType.BINARY_ACK;
                                    return this.encodeAsBinary(obj);
                                }
                            }

                            return [this.encodeAsString(obj)];
                        }
                        /**
                         * Encode packet as string.
                         */

                    }, {
                        key: "encodeAsString",
                        value: function encodeAsString(obj) {
                            // first is type
                            var str = "" + obj.type; // attachments if we have them

                            if (obj.type === PacketType.BINARY_EVENT || obj.type === PacketType.BINARY_ACK) {
                                str += obj.attachments + "-";
                            } // if we have a namespace other than `/`
                            // we append it followed by a comma `,`


                            if (obj.nsp && "/" !== obj.nsp) {
                                str += obj.nsp + ",";
                            } // immediately followed by the id


                            if (null != obj.id) {
                                str += obj.id;
                            } // json data


                            if (null != obj.data) {
                                str += JSON.stringify(obj.data);
                            }

                            debug("encoded %j as %s", obj, str);
                            return str;
                        }
                        /**
                         * Encode packet as 'buffer sequence' by removing blobs, and
                         * deconstructing packet into object with placeholders and
                         * a list of buffers.
                         */

                    }, {
                        key: "encodeAsBinary",
                        value: function encodeAsBinary(obj) {
                            var deconstruction = binary_1.deconstructPacket(obj);
                            var pack = this.encodeAsString(deconstruction.packet);
                            var buffers = deconstruction.buffers;
                            buffers.unshift(pack); // add packet info to beginning of data list

                            return buffers; // write all the buffers
                        }
                    }]);

                    return Encoder;
                }();

                exports.Encoder = Encoder;
                /**
                 * A socket.io Decoder instance
                 *
                 * @return {Object} decoder
                 */

                var Decoder = /*#__PURE__*/function (_Emitter) {
                    _inherits(Decoder, _Emitter);

                    var _super = _createSuper(Decoder);

                    function Decoder() {
                        _classCallCheck(this, Decoder);

                        return _super.call(this);
                    }
                    /**
                     * Decodes an encoded packet string into packet JSON.
                     *
                     * @param {String} obj - encoded packet
                     */


                    _createClass(Decoder, [{
                        key: "add",
                        value: function add(obj) {
                            var packet;

                            if (typeof obj === "string") {
                                packet = this.decodeString(obj);

                                if (packet.type === PacketType.BINARY_EVENT || packet.type === PacketType.BINARY_ACK) {
                                    // binary packet's json
                                    this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow

                                    if (packet.attachments === 0) {
                                        _get(_getPrototypeOf(Decoder.prototype), "emit", this).call(this, "decoded", packet);
                                    }
                                } else {
                                    // non-binary full packet
                                    _get(_getPrototypeOf(Decoder.prototype), "emit", this).call(this, "decoded", packet);
                                }
                            } else if (is_binary_1.isBinary(obj) || obj.base64) {
                                // raw binary data
                                if (!this.reconstructor) {
                                    throw new Error("got binary data when not reconstructing a packet");
                                } else {
                                    packet = this.reconstructor.takeBinaryData(obj);

                                    if (packet) {
                                        // received final buffer
                                        this.reconstructor = null;

                                        _get(_getPrototypeOf(Decoder.prototype), "emit", this).call(this, "decoded", packet);
                                    }
                                }
                            } else {
                                throw new Error("Unknown type: " + obj);
                            }
                        }
                        /**
                         * Decode a packet String (JSON data)
                         *
                         * @param {String} str
                         * @return {Object} packet
                         */

                    }, {
                        key: "decodeString",
                        value: function decodeString(str) {
                            var i = 0; // look up type

                            var p = {
                                type: Number(str.charAt(0))
                            };

                            if (PacketType[p.type] === undefined) {
                                throw new Error("unknown packet type " + p.type);
                            } // look up attachments if type binary


                            if (p.type === PacketType.BINARY_EVENT || p.type === PacketType.BINARY_ACK) {
                                var start = i + 1;

                                while (str.charAt(++i) !== "-" && i != str.length) {}

                                var buf = str.substring(start, i);

                                if (buf != Number(buf) || str.charAt(i) !== "-") {
                                    throw new Error("Illegal attachments");
                                }

                                p.attachments = Number(buf);
                            } // look up namespace (if any)


                            if ("/" === str.charAt(i + 1)) {
                                var _start = i + 1;

                                while (++i) {
                                    var c = str.charAt(i);
                                    if ("," === c) break;
                                    if (i === str.length) break;
                                }

                                p.nsp = str.substring(_start, i);
                            } else {
                                p.nsp = "/";
                            } // look up id


                            var next = str.charAt(i + 1);

                            if ("" !== next && Number(next) == next) {
                                var _start2 = i + 1;

                                while (++i) {
                                    var _c = str.charAt(i);

                                    if (null == _c || Number(_c) != _c) {
                                        --i;
                                        break;
                                    }

                                    if (i === str.length) break;
                                }

                                p.id = Number(str.substring(_start2, i + 1));
                            } // look up json data


                            if (str.charAt(++i)) {
                                var payload = tryParse(str.substr(i));

                                if (Decoder.isPayloadValid(p.type, payload)) {
                                    p.data = payload;
                                } else {
                                    throw new Error("invalid payload");
                                }
                            }

                            debug("decoded %s as %j", str, p);
                            return p;
                        }
                    }, {
                        key: "destroy",

                        /**
                         * Deallocates a parser's resources
                         */
                        value: function destroy() {
                            if (this.reconstructor) {
                                this.reconstructor.finishedReconstruction();
                            }
                        }
                    }], [{
                        key: "isPayloadValid",
                        value: function isPayloadValid(type, payload) {
                            switch (type) {
                                case PacketType.CONNECT:
                                    return _typeof(payload) === "object";

                                case PacketType.DISCONNECT:
                                    return payload === undefined;

                                case PacketType.CONNECT_ERROR:
                                    return typeof payload === "string" || _typeof(payload) === "object";

                                case PacketType.EVENT:
                                case PacketType.BINARY_EVENT:
                                    return Array.isArray(payload) && payload.length > 0;

                                case PacketType.ACK:
                                case PacketType.BINARY_ACK:
                                    return Array.isArray(payload);
                            }
                        }
                    }]);

                    return Decoder;
                }(Emitter);

                exports.Decoder = Decoder;

                function tryParse(str) {
                    try {
                        return JSON.parse(str);
                    } catch (e) {
                        return false;
                    }
                }
                /**
                 * A manager of a binary event's 'buffer sequence'. Should
                 * be constructed whenever a packet of type BINARY_EVENT is
                 * decoded.
                 *
                 * @param {Object} packet
                 * @return {BinaryReconstructor} initialized reconstructor
                 */


                var BinaryReconstructor = /*#__PURE__*/function () {
                    function BinaryReconstructor(packet) {
                        _classCallCheck(this, BinaryReconstructor);

                        this.packet = packet;
                        this.buffers = [];
                        this.reconPack = packet;
                    }
                    /**
                     * Method to be called when binary data received from connection
                     * after a BINARY_EVENT packet.
                     *
                     * @param {Buffer | ArrayBuffer} binData - the raw binary data received
                     * @return {null | Object} returns null if more binary data is expected or
                     *   a reconstructed packet object if all buffers have been received.
                     */


                    _createClass(BinaryReconstructor, [{
                        key: "takeBinaryData",
                        value: function takeBinaryData(binData) {
                            this.buffers.push(binData);

                            if (this.buffers.length === this.reconPack.attachments) {
                                // done with buffer list
                                var packet = binary_1.reconstructPacket(this.reconPack, this.buffers);
                                this.finishedReconstruction();
                                return packet;
                            }

                            return null;
                        }
                        /**
                         * Cleans up binary packet reconstruction variables.
                         */

                    }, {
                        key: "finishedReconstruction",
                        value: function finishedReconstruction() {
                            this.reconPack = null;
                            this.buffers = [];
                        }
                    }]);

                    return BinaryReconstructor;
                }();

                /***/ }),

            /***/ "./node_modules/socket.io-parser/dist/is-binary.js":
            /*!*********************************************************!*\
  !*** ./node_modules/socket.io-parser/dist/is-binary.js ***!
  \*********************************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.hasBinary = exports.isBinary = void 0;
                var withNativeArrayBuffer = typeof ArrayBuffer === "function";

                var isView = function isView(obj) {
                    return typeof ArrayBuffer.isView === "function" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;
                };

                var toString = Object.prototype.toString;
                var withNativeBlob = typeof Blob === "function" || typeof Blob !== "undefined" && toString.call(Blob) === "[object BlobConstructor]";
                var withNativeFile = typeof File === "function" || typeof File !== "undefined" && toString.call(File) === "[object FileConstructor]";
                /**
                 * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.
                 *
                 * @private
                 */

                function isBinary(obj) {
                    return withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)) || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File;
                }

                exports.isBinary = isBinary;

                function hasBinary(obj, toJSON) {
                    if (!obj || _typeof(obj) !== "object") {
                        return false;
                    }

                    if (Array.isArray(obj)) {
                        for (var i = 0, l = obj.length; i < l; i++) {
                            if (hasBinary(obj[i])) {
                                return true;
                            }
                        }

                        return false;
                    }

                    if (isBinary(obj)) {
                        return true;
                    }

                    if (obj.toJSON && typeof obj.toJSON === "function" && arguments.length === 1) {
                        return hasBinary(obj.toJSON(), true);
                    }

                    for (var key in obj) {
                        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
                            return true;
                        }
                    }

                    return false;
                }

                exports.hasBinary = hasBinary;

                /***/ }),

            /***/ "./node_modules/yeast/index.js":
            /*!*************************************!*\
  !*** ./node_modules/yeast/index.js ***!
  \*************************************/
            /*! no static exports found */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),
                    length = 64,
                    map = {},
                    seed = 0,
                    i = 0,
                    prev;
                /**
                 * Return a string representing the specified number.
                 *
                 * @param {Number} num The number to convert.
                 * @returns {String} The string representation of the number.
                 * @api public
                 */

                function encode(num) {
                    var encoded = '';

                    do {
                        encoded = alphabet[num % length] + encoded;
                        num = Math.floor(num / length);
                    } while (num > 0);

                    return encoded;
                }
                /**
                 * Return the integer value specified by the given string.
                 *
                 * @param {String} str The string to convert.
                 * @returns {Number} The integer value represented by the string.
                 * @api public
                 */


                function decode(str) {
                    var decoded = 0;

                    for (i = 0; i < str.length; i++) {
                        decoded = decoded * length + map[str.charAt(i)];
                    }

                    return decoded;
                }
                /**
                 * Yeast: A tiny growing id generator.
                 *
                 * @returns {String} A unique id.
                 * @api public
                 */


                function yeast() {
                    var now = encode(+new Date());
                    if (now !== prev) return seed = 0, prev = now;
                    return now + '.' + encode(seed++);
                } //
// Map each character to its index.
//


                for (; i < length; i++) {
                    map[alphabet[i]] = i;
                } //
// Expose the `yeast`, `encode` and `decode` functions.
//


                yeast.encode = encode;
                yeast.decode = decode;
                module.exports = yeast;

                /***/ })

            /******/ });
});
//# sourceMappingURL=socket.io.js.map

//********************************************************
//**					UAParser						**
//********************************************************
/**
 * UAParser.js v0.7.17
 * Lightweight JavaScript-based User-Agent string parser
 * https://github.com/faisalman/ua-parser-js
 *
 * Copyright © 2012-2016 Faisal Salman <fyzlman@gmail.com>
 * Dual licensed under GPLv2 & MIT
 */
(function(window,undefined){"use strict";var LIBVERSION="0.7.17",EMPTY="",UNKNOWN="?",FUNC_TYPE="function",UNDEF_TYPE="undefined",OBJ_TYPE="object",STR_TYPE="string",MAJOR="major",MODEL="model",NAME="name",TYPE="type",VENDOR="vendor",VERSION="version",ARCHITECTURE="architecture",CONSOLE="console",MOBILE="mobile",TABLET="tablet",SMARTTV="smarttv",WEARABLE="wearable",EMBEDDED="embedded";var util={extend:function(regexes,extensions){var margedRegexes={};for(var i in regexes){if(extensions[i]&&extensions[i].length%2===0){margedRegexes[i]=extensions[i].concat(regexes[i])}else{margedRegexes[i]=regexes[i]}}return margedRegexes},has:function(str1,str2){if(typeof str1==="string"){return str2.toLowerCase().indexOf(str1.toLowerCase())!==-1}else{return false}},lowerize:function(str){return str.toLowerCase()},major:function(version){return typeof version===STR_TYPE?version.replace(/[^\d\.]/g,"").split(".")[0]:undefined},trim:function(str){return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}};var mapper={rgx:function(ua,arrays){var i=0,j,k,p,q,matches,match;while(i<arrays.length&&!matches){var regex=arrays[i],props=arrays[i+1];j=k=0;while(j<regex.length&&!matches){matches=regex[j++].exec(ua);if(!!matches){for(p=0;p<props.length;p++){match=matches[++k];q=props[p];if(typeof q===OBJ_TYPE&&q.length>0){if(q.length==2){if(typeof q[1]==FUNC_TYPE){this[q[0]]=q[1].call(this,match)}else{this[q[0]]=q[1]}}else if(q.length==3){if(typeof q[1]===FUNC_TYPE&&!(q[1].exec&&q[1].test)){this[q[0]]=match?q[1].call(this,match,q[2]):undefined}else{this[q[0]]=match?match.replace(q[1],q[2]):undefined}}else if(q.length==4){this[q[0]]=match?q[3].call(this,match.replace(q[1],q[2])):undefined}}else{this[q]=match?match:undefined}}}}i+=2}},str:function(str,map){for(var i in map){if(typeof map[i]===OBJ_TYPE&&map[i].length>0){for(var j=0;j<map[i].length;j++){if(util.has(map[i][j],str)){return i===UNKNOWN?undefined:i}}}else if(util.has(map[i],str)){return i===UNKNOWN?undefined:i}}return str}};var maps={browser:{oldsafari:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"}}},device:{amazon:{model:{"Fire Phone":["SD","KF"]}},sprint:{model:{"Evo Shift 4G":"7373KT"},vendor:{HTC:"APA",Sprint:"Sprint"}}},os:{windows:{version:{ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2000:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"}}}};var regexes={browser:[[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,/(opera).+version\/([\w\.]+)/i,/(opera)[\/\s]+([\w\.]+)/i],[NAME,VERSION],[/(opios)[\/\s]+([\w\.]+)/i],[[NAME,"Opera Mini"],VERSION],[/\s(opr)\/([\w\.]+)/i],[[NAME,"Opera"],VERSION],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i,/(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(rekonq)\/([\w\.]+)*/i,/(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser)\/([\w\.-]+)/i],[NAME,VERSION],[/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],[[NAME,"IE"],VERSION],[/(edge)\/((\d+)?[\w\.]+)/i],[NAME,VERSION],[/(yabrowser)\/([\w\.]+)/i],[[NAME,"Yandex"],VERSION],[/(puffin)\/([\w\.]+)/i],[[NAME,"Puffin"],VERSION],[/((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i],[[NAME,"UCBrowser"],VERSION],[/(comodo_dragon)\/([\w\.]+)/i],[[NAME,/_/g," "],VERSION],[/(micromessenger)\/([\w\.]+)/i],[[NAME,"WeChat"],VERSION],[/(QQ)\/([\d\.]+)/i],[NAME,VERSION],[/m?(qqbrowser)[\/\s]?([\w\.]+)/i],[NAME,VERSION],[/xiaomi\/miuibrowser\/([\w\.]+)/i],[VERSION,[NAME,"MIUI Browser"]],[/;fbav\/([\w\.]+);/i],[VERSION,[NAME,"Facebook"]],[/headlesschrome(?:\/([\w\.]+)|\s)/i],[VERSION,[NAME,"Chrome Headless"]],[/\swv\).+(chrome)\/([\w\.]+)/i],[[NAME,/(.+)/,"$1 WebView"],VERSION],[/((?:oculus|samsung)browser)\/([\w\.]+)/i],[[NAME,/(.+(?:g|us))(.+)/,"$1 $2"],VERSION],[/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i],[VERSION,[NAME,"Android Browser"]],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i],[NAME,VERSION],[/(dolfin)\/([\w\.]+)/i],[[NAME,"Dolphin"],VERSION],[/((?:android.+)crmo|crios)\/([\w\.]+)/i],[[NAME,"Chrome"],VERSION],[/(coast)\/([\w\.]+)/i],[[NAME,"Opera Coast"],VERSION],[/fxios\/([\w\.-]+)/i],[VERSION,[NAME,"Firefox"]],[/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],[VERSION,[NAME,"Mobile Safari"]],[/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],[VERSION,NAME],[/webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[[NAME,"GSA"],VERSION],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[NAME,[VERSION,mapper.str,maps.browser.oldsafari.version]],[/(konqueror)\/([\w\.]+)/i,/(webkit|khtml)\/([\w\.]+)/i],[NAME,VERSION],[/(navigator|netscape)\/([\w\.-]+)/i],[[NAME,"Netscape"],VERSION],[/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i,/(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]+)*/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[NAME,VERSION]],cpu:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[[ARCHITECTURE,"amd64"]],[/(ia32(?=;))/i],[[ARCHITECTURE,util.lowerize]],[/((?:i[346]|x)86)[;\)]/i],[[ARCHITECTURE,"ia32"]],[/windows\s(ce|mobile);\sppc;/i],[[ARCHITECTURE,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[[ARCHITECTURE,/ower/,"",util.lowerize]],[/(sun4\w)[;\)]/i],[[ARCHITECTURE,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i],[[ARCHITECTURE,util.lowerize]]],device:[[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i],[MODEL,VENDOR,[TYPE,TABLET]],[/applecoremedia\/[\w\.]+ \((ipad)/],[MODEL,[VENDOR,"Apple"],[TYPE,TABLET]],[/(apple\s{0,1}tv)/i],[[MODEL,"Apple TV"],[VENDOR,"Apple"]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad)/i,/(hp).+(tablet)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i],[VENDOR,MODEL,[TYPE,TABLET]],[/(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i],[MODEL,[VENDOR,"Amazon"],[TYPE,TABLET]],[/(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i],[[MODEL,mapper.str,maps.device.amazon.model],[VENDOR,"Amazon"],[TYPE,MOBILE]],[/\((ip[honed|\s\w*]+);.+(apple)/i],[MODEL,VENDOR,[TYPE,MOBILE]],[/\((ip[honed|\s\w*]+);/i],[MODEL,[VENDOR,"Apple"],[TYPE,MOBILE]],[/(blackberry)[\s-]?(\w+)/i,/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/\(bb10;\s(\w+)/i],[MODEL,[VENDOR,"BlackBerry"],[TYPE,MOBILE]],[/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)/i],[MODEL,[VENDOR,"Asus"],[TYPE,TABLET]],[/(sony)\s(tablet\s[ps])\sbuild\//i,/(sony)?(?:sgp.+)\sbuild\//i],[[VENDOR,"Sony"],[MODEL,"Xperia Tablet"],[TYPE,TABLET]],[/android.+\s([c-g]\d{4}|so[-l]\w+)\sbuild\//i],[MODEL,[VENDOR,"Sony"],[TYPE,MOBILE]],[/\s(ouya)\s/i,/(nintendo)\s([wids3u]+)/i],[VENDOR,MODEL,[TYPE,CONSOLE]],[/android.+;\s(shield)\sbuild/i],[MODEL,[VENDOR,"Nvidia"],[TYPE,CONSOLE]],[/(playstation\s[34portablevi]+)/i],[MODEL,[VENDOR,"Sony"],[TYPE,CONSOLE]],[/(sprint\s(\w+))/i],[[VENDOR,mapper.str,maps.device.sprint.vendor],[MODEL,mapper.str,maps.device.sprint.model],[TYPE,MOBILE]],[/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i],[VENDOR,MODEL,[TYPE,TABLET]],[/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i,/(zte)-(\w+)*/i,/(alcatel|geeksphone|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i],[VENDOR,[MODEL,/_/g," "],[TYPE,MOBILE]],[/(nexus\s9)/i],[MODEL,[VENDOR,"HTC"],[TYPE,TABLET]],[/d\/huawei([\w\s-]+)[;\)]/i,/(nexus\s6p)/i],[MODEL,[VENDOR,"Huawei"],[TYPE,MOBILE]],[/(microsoft);\s(lumia[\s\w]+)/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/[\s\(;](xbox(?:\sone)?)[\s\);]/i],[MODEL,[VENDOR,"Microsoft"],[TYPE,CONSOLE]],[/(kin\.[onetw]{3})/i],[[MODEL,/\./g," "],[VENDOR,"Microsoft"],[TYPE,MOBILE]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i,/mot[\s-]?(\w+)*/i,/(XT\d{3,4}) build\//i,/(nexus\s6)/i],[MODEL,[VENDOR,"Motorola"],[TYPE,MOBILE]],[/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[MODEL,[VENDOR,"Motorola"],[TYPE,TABLET]],[/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],[[VENDOR,util.trim],[MODEL,util.trim],[TYPE,SMARTTV]],[/hbbtv.+maple;(\d+)/i],[[MODEL,/^/,"SmartTV"],[VENDOR,"Samsung"],[TYPE,SMARTTV]],[/\(dtv[\);].+(aquos)/i],[MODEL,[VENDOR,"Sharp"],[TYPE,SMARTTV]],[/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,/((SM-T\w+))/i],[[VENDOR,"Samsung"],MODEL,[TYPE,TABLET]],[/smart-tv.+(samsung)/i],[VENDOR,[TYPE,SMARTTV],MODEL],[/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,/(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i,/sec-((sgh\w+))/i],[[VENDOR,"Samsung"],MODEL,[TYPE,MOBILE]],[/sie-(\w+)*/i],[MODEL,[VENDOR,"Siemens"],[TYPE,MOBILE]],[/(maemo|nokia).*(n900|lumia\s\d+)/i,/(nokia)[\s_-]?([\w-]+)*/i],[[VENDOR,"Nokia"],MODEL,[TYPE,MOBILE]],[/android\s3\.[\s\w;-]{10}(a\d{3})/i],[MODEL,[VENDOR,"Acer"],[TYPE,TABLET]],[/android.+([vl]k\-?\d{3})\s+build/i],[MODEL,[VENDOR,"LG"],[TYPE,TABLET]],[/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],[[VENDOR,"LG"],MODEL,[TYPE,TABLET]],[/(lg) netcast\.tv/i],[VENDOR,MODEL,[TYPE,SMARTTV]],[/(nexus\s[45])/i,/lg[e;\s\/-]+(\w+)*/i,/android.+lg(\-?[\d\w]+)\s+build/i],[MODEL,[VENDOR,"LG"],[TYPE,MOBILE]],[/android.+(ideatab[a-z0-9\-\s]+)/i],[MODEL,[VENDOR,"Lenovo"],[TYPE,TABLET]],[/linux;.+((jolla));/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/((pebble))app\/[\d\.]+\s/i],[VENDOR,MODEL,[TYPE,WEARABLE]],[/android.+;\s(oppo)\s?([\w\s]+)\sbuild/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/crkey/i],[[MODEL,"Chromecast"],[VENDOR,"Google"]],[/android.+;\s(glass)\s\d/i],[MODEL,[VENDOR,"Google"],[TYPE,WEARABLE]],[/android.+;\s(pixel c)\s/i],[MODEL,[VENDOR,"Google"],[TYPE,TABLET]],[/android.+;\s(pixel xl|pixel)\s/i],[MODEL,[VENDOR,"Google"],[TYPE,MOBILE]],[/android.+(\w+)\s+build\/hm\1/i,/android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,/android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build/i,/android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+)?)\s+build/i],[[MODEL,/_/g," "],[VENDOR,"Xiaomi"],[TYPE,MOBILE]],[/android.+(mi[\s\-_]*(?:pad)?(?:[\s_]*[\w\s]+)?)\s+build/i],[[MODEL,/_/g," "],[VENDOR,"Xiaomi"],[TYPE,TABLET]],[/android.+;\s(m[1-5]\snote)\sbuild/i],[MODEL,[VENDOR,"Meizu"],[TYPE,TABLET]],[/android.+a000(1)\s+build/i],[MODEL,[VENDOR,"OnePlus"],[TYPE,MOBILE]],[/android.+[;\/]\s*(RCT[\d\w]+)\s+build/i],[MODEL,[VENDOR,"RCA"],[TYPE,TABLET]],[/android.+[;\/]\s*(Venue[\d\s]*)\s+build/i],[MODEL,[VENDOR,"Dell"],[TYPE,TABLET]],[/android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i],[MODEL,[VENDOR,"Verizon"],[TYPE,TABLET]],[/android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i],[[VENDOR,"Barnes & Noble"],MODEL,[TYPE,TABLET]],[/android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i],[MODEL,[VENDOR,"NuVision"],[TYPE,TABLET]],[/android.+[;\/]\s*(zte)?.+(k\d{2})\s+build/i],[[VENDOR,"ZTE"],MODEL,[TYPE,TABLET]],[/android.+[;\/]\s*(gen\d{3})\s+build.*49h/i],[MODEL,[VENDOR,"Swiss"],[TYPE,MOBILE]],[/android.+[;\/]\s*(zur\d{3})\s+build/i],[MODEL,[VENDOR,"Swiss"],[TYPE,TABLET]],[/android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i],[MODEL,[VENDOR,"Zeki"],[TYPE,TABLET]],[/(android).+[;\/]\s+([YR]\d{2}x?.*)\s+build/i,/android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(.+)\s+build/i],[[VENDOR,"Dragon Touch"],MODEL,[TYPE,TABLET]],[/android.+[;\/]\s*(NS-?.+)\s+build/i],[MODEL,[VENDOR,"Insignia"],[TYPE,TABLET]],[/android.+[;\/]\s*((NX|Next)-?.+)\s+build/i],[MODEL,[VENDOR,"NextBook"],[TYPE,TABLET]],[/android.+[;\/]\s*(Xtreme\_?)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i],[[VENDOR,"Voice"],MODEL,[TYPE,MOBILE]],[/android.+[;\/]\s*(LVTEL\-?)?(V1[12])\s+build/i],[[VENDOR,"LvTel"],MODEL,[TYPE,MOBILE]],[/android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i],[MODEL,[VENDOR,"Envizen"],[TYPE,TABLET]],[/android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(.*\b)\s+build/i],[VENDOR,MODEL,[TYPE,TABLET]],[/android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i],[MODEL,[VENDOR,"MachSpeed"],[TYPE,TABLET]],[/android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i],[VENDOR,MODEL,[TYPE,TABLET]],[/android.+[;\/]\s*TU_(1491)\s+build/i],[MODEL,[VENDOR,"Rotor"],[TYPE,TABLET]],[/android.+(KS(.+))\s+build/i],[MODEL,[VENDOR,"Amazon"],[TYPE,TABLET]],[/android.+(Gigaset)[\s\-]+(Q.+)\s+build/i],[VENDOR,MODEL,[TYPE,TABLET]],[/\s(tablet|tab)[;\/]/i,/\s(mobile)(?:[;\/]|\ssafari)/i],[[TYPE,util.lowerize],VENDOR,MODEL],[/(android.+)[;\/].+build/i],[MODEL,[VENDOR,"Generic"]]],engine:[[/windows.+\sedge\/([\w\.]+)/i],[VERSION,[NAME,"EdgeHTML"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[NAME,VERSION],[/rv\:([\w\.]+).*(gecko)/i],[VERSION,NAME]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[NAME,VERSION],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*/i,/(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i],[NAME,[VERSION,mapper.str,maps.os.windows.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[NAME,"Windows"],[VERSION,mapper.str,maps.os.windows.version]],[/\((bb)(10);/i],[[NAME,"BlackBerry"],VERSION],[/(blackberry)\w*\/?([\w\.]+)*/i,/(tizen)[\/\s]([\w\.]+)/i,/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i,/linux;.+(sailfish);/i],[NAME,VERSION],[/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i],[[NAME,"Symbian"],VERSION],[/\((series40);/i],[NAME],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[NAME,"Firefox OS"],VERSION],[/(nintendo|playstation)\s([wids34portablevu]+)/i,/(mint)[\/\s\(]?(\w+)*/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*/i,/(hurd|linux)\s?([\w\.]+)*/i,/(gnu)\s?([\w\.]+)*/i],[NAME,VERSION],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[NAME,"Chromium OS"],VERSION],[/(sunos)\s?([\w\.]+\d)*/i],[[NAME,"Solaris"],VERSION],[/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i],[NAME,VERSION],[/(haiku)\s(\w+)/i],[NAME,VERSION],[/cfnetwork\/.+darwin/i,/ip[honead]+(?:.*os\s([\w]+)\slike\smac|;\sopera)/i],[[VERSION,/_/g,"."],[NAME,"iOS"]],[/(mac\sos\sx)\s?([\w\s\.]+\w)*/i,/(macintosh|mac(?=_powerpc)\s)/i],[[NAME,"Mac OS"],[VERSION,/_/g,"."]],[/((?:open)?solaris)[\/\s-]?([\w\.]+)*/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i,/(unix)\s?([\w\.]+)*/i],[NAME,VERSION]]};var UAParser=function(uastring,extensions){if(typeof uastring==="object"){extensions=uastring;uastring=undefined}if(!(this instanceof UAParser)){return new UAParser(uastring,extensions).getResult()}var ua=uastring||(window&&window.navigator&&window.navigator.userAgent?window.navigator.userAgent:EMPTY);var rgxmap=extensions?util.extend(regexes,extensions):regexes;this.getBrowser=function(){var browser={name:undefined,version:undefined};mapper.rgx.call(browser,ua,rgxmap.browser);browser.major=util.major(browser.version);return browser};this.getCPU=function(){var cpu={architecture:undefined};mapper.rgx.call(cpu,ua,rgxmap.cpu);return cpu};this.getDevice=function(){var device={vendor:undefined,model:undefined,type:undefined};mapper.rgx.call(device,ua,rgxmap.device);return device};this.getEngine=function(){var engine={name:undefined,version:undefined};mapper.rgx.call(engine,ua,rgxmap.engine);return engine};this.getOS=function(){var os={name:undefined,version:undefined};mapper.rgx.call(os,ua,rgxmap.os);return os};this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}};this.getUA=function(){return ua};this.setUA=function(uastring){ua=uastring;return this};return this};UAParser.VERSION=LIBVERSION;UAParser.BROWSER={NAME:NAME,MAJOR:MAJOR,VERSION:VERSION};UAParser.CPU={ARCHITECTURE:ARCHITECTURE};UAParser.DEVICE={MODEL:MODEL,VENDOR:VENDOR,TYPE:TYPE,CONSOLE:CONSOLE,MOBILE:MOBILE,SMARTTV:SMARTTV,TABLET:TABLET,WEARABLE:WEARABLE,EMBEDDED:EMBEDDED};UAParser.ENGINE={NAME:NAME,VERSION:VERSION};UAParser.OS={NAME:NAME,VERSION:VERSION};if(typeof exports!==UNDEF_TYPE){if(typeof module!==UNDEF_TYPE&&module.exports){exports=module.exports=UAParser}exports.UAParser=UAParser}else{if(typeof define===FUNC_TYPE&&define.amd){define(function(){return UAParser})}else if(window){window.UAParser=UAParser}}var $=window&&(window.jQuery||window.Zepto);if(typeof $!==UNDEF_TYPE){var parser=new UAParser;$.ua=parser.getResult();$.ua.get=function(){return parser.getUA()};$.ua.set=function(uastring){parser.setUA(uastring);var result=parser.getResult();for(var prop in result){$.ua[prop]=result[prop]}}}})(typeof window==="object"?window:this);

//********************************************************
//**					Voice							**
//********************************************************
if(void 0!==responsiveVoice);else var ResponsiveVoice=function(){var a=this;a.version="1.5.7",a.responsivevoices=[{name:"UK English Female",flag:"gb",gender:"f",voiceIDs:[3,5,1,6,7,171,278,201,257,286,342,258,287,343,8]},{name:"UK English Male",flag:"gb",gender:"m",voiceIDs:[0,4,2,75,277,202,256,285,341,159,6,7]},{name:"US English Female",flag:"us",gender:"f",voiceIDs:[39,40,41,42,43,173,205,204,235,283,339,44]},{name:"Latin Female",flag:"va",gender:"f",voiceIDs:[114]},{name:"Spanish Female",flag:"es",gender:"f",voiceIDs:[19,238,16,17,18,20,76,174,207,263,292,348,264,293,349,15]},{name:"Spanish Latin American Female",flag:"es",gender:"f",voiceIDs:[239,137,136,138,175,208,265,294,350,139]},{name:"Latin Male",flag:"va",gender:"m",voiceIDs:[165],deprecated:!0},{name:"US English Male",flag:"us",gender:"m",voiceIDs:[234,282,338,236,284,340,237,2,4,0,6,7,75,159]}],a.voicecollection=[{name:"Google UK English Male"},{name:"Agnes"},{name:"Daniel Compact"},{name:"Google UK English Female"},{name:"en-GB",rate:.25,pitch:1},{name:"en-AU",rate:.25,pitch:1},{name:"inglés Reino Unido"},{name:"English United Kingdom"},{name:"Fallback en-GB Female",lang:"en-GB",fallbackvoice:!0},{name:"Eszter Compact"},{name:"hu-HU",rate:.4},{name:"Fallback Hungarian",lang:"hu",fallbackvoice:!0,service:"g2"},{name:"Fallback Serbian",lang:"sr",fallbackvoice:!0},{name:"Fallback Croatian",lang:"hr",fallbackvoice:!0},{name:"Fallback Bosnian",lang:"bs",fallbackvoice:!0},{name:"Fallback Spanish",lang:"es",fallbackvoice:!0},{name:"Spanish Spain"},{name:"español España"},{name:"Diego Compact",rate:.3},{name:"Google Español"},{name:"es-ES",rate:.2},{name:"Google Français"},{name:"French France"},{name:"francés Francia"},{name:"Virginie Compact",rate:.5},{name:"fr-FR",rate:.25},{name:"Fallback French",lang:"fr",fallbackvoice:!0},{name:"Google Deutsch"},{name:"German Germany"},{name:"alemán Alemania"},{name:"Yannick Compact",rate:.5},{name:"de-DE",rate:.25},{name:"Fallback Deutsch",lang:"de",fallbackvoice:!0},{name:"Google Italiano"},{name:"Italian Italy"},{name:"italiano Italia"},{name:"Paolo Compact",rate:.5},{name:"it-IT",rate:.25},{name:"Fallback Italian",lang:"it",fallbackvoice:!0},{name:"Google US English",timerSpeed:1},{name:"English United States"},{name:"inglés Estados Unidos"},{name:"Vicki"},{name:"en-US",rate:.2,pitch:1,timerSpeed:1.3},{name:"Fallback English",lang:"en-US",fallbackvoice:!0,timerSpeed:0},{name:"Fallback Romanian",lang:"ro",fallbackvoice:!0},{name:"Milena Compact"},{name:"ru-RU",rate:.25},{name:"Fallback Russian",lang:"ru",fallbackvoice:!0},{name:"Google 日本人",timerSpeed:1},{name:"Kyoko Compact"},{name:"ja-JP",rate:.25},{name:"Fallback Japanese",lang:"ja",fallbackvoice:!0},{name:"Google 한국의",timerSpeed:1},{name:"Narae Compact"},{name:"ko-KR",rate:.25},{name:"Fallback Korean",lang:"ko",fallbackvoice:!0},{name:"Google 中国的",timerSpeed:1},{name:"Ting-Ting Compact"},{name:"zh-CN",rate:.25},{name:"Fallback Chinese",lang:"zh-CN",fallbackvoice:!0},{name:"Alexandros Compact"},{name:"el-GR",rate:.25},{name:"Fallback Greek",lang:"el",fallbackvoice:!0,service:"g2"},{name:"Fallback Swedish",lang:"sv",fallbackvoice:!0,service:"g2"},{name:"hi-IN",rate:.25},{name:"Fallback Hindi",lang:"hi",fallbackvoice:!0},{name:"Fallback Catalan",lang:"ca",fallbackvoice:!0},{name:"Aylin Compact"},{name:"tr-TR",rate:.25},{name:"Fallback Turkish",lang:"tr",fallbackvoice:!0},{name:"Stine Compact"},{name:"no-NO",rate:.25},{name:"Fallback Norwegian",lang:"no",fallbackvoice:!0,service:"g2"},{name:"Daniel"},{name:"Monica"},{name:"Amelie"},{name:"Anna"},{name:"Alice"},{name:"Melina"},{name:"Mariska"},{name:"Yelda"},{name:"Milena"},{name:"Xander"},{name:"Alva"},{name:"Lee Compact"},{name:"Karen"},{name:"Fallback Australian",lang:"en-AU",fallbackvoice:!0},{name:"Mikko Compact"},{name:"Satu"},{name:"fi-FI",rate:.25},{name:"Fallback Finnish",lang:"fi",fallbackvoice:!0,service:"g2"},{name:"Fallback Afrikans",lang:"af",fallbackvoice:!0},{name:"Fallback Albanian",lang:"sq",fallbackvoice:!0},{name:"Maged Compact"},{name:"Tarik"},{name:"ar-SA",rate:.25},{name:"Fallback Arabic",lang:"ar",fallbackvoice:!0,service:"g2"},{name:"Fallback Armenian",lang:"hy",fallbackvoice:!0,service:"g2"},{name:"Zuzana Compact"},{name:"Zuzana"},{name:"cs-CZ",rate:.25},{name:"Fallback Czech",lang:"cs",fallbackvoice:!0,service:"g2"},{name:"Ida Compact"},{name:"Sara"},{name:"da-DK",rate:.25},{name:"Fallback Danish",lang:"da",fallbackvoice:!0,service:"g2"},{name:"Fallback Esperanto",lang:"eo",fallbackvoice:!0},{name:"Fallback Haitian Creole",lang:"ht",fallbackvoice:!0},{name:"Fallback Icelandic",lang:"is",fallbackvoice:!0},{name:"Damayanti"},{name:"id-ID",rate:.25},{name:"Fallback Indonesian",lang:"id",fallbackvoice:!0},{name:"Fallback Latin",lang:"la",fallbackvoice:!0,service:"g2"},{name:"Fallback Latvian",lang:"lv",fallbackvoice:!0},{name:"Fallback Macedonian",lang:"mk",fallbackvoice:!0},{name:"Fallback Moldavian",lang:"mo",fallbackvoice:!0,service:"g2"},{name:"Fallback Montenegrin",lang:"sr-ME",fallbackvoice:!0},{name:"Agata Compact"},{name:"Zosia"},{name:"pl-PL",rate:.25},{name:"Fallback Polish",lang:"pl",fallbackvoice:!0},{name:"Raquel Compact"},{name:"Luciana"},{name:"pt-BR",rate:.25},{name:"Fallback Brazilian Portugese",lang:"pt-BR",fallbackvoice:!0,service:"g2"},{name:"Joana Compact"},{name:"Joana"},{name:"pt-PT",rate:.25},{name:"Fallback Portuguese",lang:"pt-PT",fallbackvoice:!0},{name:"Fallback Serbo-Croation",lang:"sh",fallbackvoice:!0,service:"g2"},{name:"Laura Compact"},{name:"Laura"},{name:"sk-SK",rate:.25},{name:"Fallback Slovak",lang:"sk",fallbackvoice:!0,service:"g2"},{name:"Javier Compact"},{name:"Paulina"},{name:"es-MX",rate:.25},{name:"Fallback Spanish (Latin American)",lang:"es-419",fallbackvoice:!0,service:"g2"},{name:"Fallback Swahili",lang:"sw",fallbackvoice:!0},{name:"Fallback Tamil",lang:"ta",fallbackvoice:!0},{name:"Narisa Compact"},{name:"Kanya"},{name:"th-TH",rate:.25},{name:"Fallback Thai",lang:"th",fallbackvoice:!0},{name:"Fallback Vietnamese",lang:"vi",fallbackvoice:!0},{name:"Fallback Welsh",lang:"cy",fallbackvoice:!0},{name:"Oskar Compact"},{name:"sv-SE",rate:.25},{name:"Simona Compact"},{name:"Ioana"},{name:"ro-RO",rate:.25},{name:"Kyoko"},{name:"Lekha"},{name:"Ting-Ting"},{name:"Yuna"},{name:"Xander Compact"},{name:"nl-NL",rate:.25},{name:"Fallback UK English Male",lang:"en-GB",fallbackvoice:!0,service:"g1",voicename:"rjs"},{name:"Finnish Male",lang:"fi",fallbackvoice:!0,service:"g1",voicename:""},{name:"Czech Male",lang:"cs",fallbackvoice:!0,service:"g1",voicename:""},{name:"Danish Male",lang:"da",fallbackvoice:!0,service:"g1",voicename:""},{name:"Greek Male",lang:"el",fallbackvoice:!0,service:"g1",voicename:"",rate:.25},{name:"Hungarian Male",lang:"hu",fallbackvoice:!0,service:"g1",voicename:""},{name:"Latin Male",lang:"la",fallbackvoice:!0,service:"g1",voicename:""},{name:"Norwegian Male",lang:"no",fallbackvoice:!0,service:"g1",voicename:""},{name:"Slovak Male",lang:"sk",fallbackvoice:!0,service:"g1",voicename:""},{name:"Swedish Male",lang:"sv",fallbackvoice:!0,service:"g1",voicename:""},{name:"Fallback US English Male",lang:"en",fallbackvoice:!0,service:"tts-api",voicename:""},{name:"German Germany",lang:"de_DE"},{name:"English United Kingdom",lang:"en_GB"},{name:"English India",lang:"en_IN"},{name:"English United States",lang:"en_US"},{name:"Spanish Spain",lang:"es_ES"},{name:"Spanish Mexico",lang:"es_MX"},{name:"Spanish United States",lang:"es_US"},{name:"French Belgium",lang:"fr_BE"},{name:"French France",lang:"fr_FR"},{name:"Hindi India",lang:"hi_IN"},{name:"Indonesian Indonesia",lang:"in_ID"},{name:"Italian Italy",lang:"it_IT"},{name:"Japanese Japan",lang:"ja_JP"},{name:"Korean South Korea",lang:"ko_KR"},{name:"Dutch Netherlands",lang:"nl_NL"},{name:"Polish Poland",lang:"pl_PL"},{name:"Portuguese Brazil",lang:"pt_BR"},{name:"Portuguese Portugal",lang:"pt_PT"},{name:"Russian Russia",lang:"ru_RU"},{name:"Thai Thailand",lang:"th_TH"},{name:"Turkish Turkey",lang:"tr_TR"},{name:"Chinese China",lang:"zh_CN_#Hans"},{name:"Chinese Hong Kong",lang:"zh_HK_#Hans"},{name:"Chinese Hong Kong",lang:"zh_HK_#Hant"},{name:"Chinese Taiwan",lang:"zh_TW_#Hant"},{name:"Alex"},{name:"Maged",lang:"ar-SA"},{name:"Zuzana",lang:"cs-CZ"},{name:"Sara",lang:"da-DK"},{name:"Anna",lang:"de-DE"},{name:"Melina",lang:"el-GR"},{name:"Karen",lang:"en-AU"},{name:"Daniel",lang:"en-GB"},{name:"Moira",lang:"en-IE"},{name:"Samantha (Enhanced)",lang:"en-US"},{name:"Samantha",lang:"en-US"},{name:"Tessa",lang:"en-ZA"},{name:"Monica",lang:"es-ES"},{name:"Paulina",lang:"es-MX"},{name:"Satu",lang:"fi-FI"},{name:"Amelie",lang:"fr-CA"},{name:"Thomas",lang:"fr-FR"},{name:"Carmit",lang:"he-IL"},{name:"Lekha",lang:"hi-IN"},{name:"Mariska",lang:"hu-HU"},{name:"Damayanti",lang:"id-ID"},{name:"Alice",lang:"it-IT"},{name:"Kyoko",lang:"ja-JP"},{name:"Yuna",lang:"ko-KR"},{name:"Ellen",lang:"nl-BE"},{name:"Xander",lang:"nl-NL"},{name:"Nora",lang:"no-NO"},{name:"Zosia",lang:"pl-PL"},{name:"Luciana",lang:"pt-BR"},{name:"Joana",lang:"pt-PT"},{name:"Ioana",lang:"ro-RO"},{name:"Milena",lang:"ru-RU"},{name:"Laura",lang:"sk-SK"},{name:"Alva",lang:"sv-SE"},{name:"Kanya",lang:"th-TH"},{name:"Yelda",lang:"tr-TR"},{name:"Ting-Ting",lang:"zh-CN"},{name:"Sin-Ji",lang:"zh-HK"},{name:"Mei-Jia",lang:"zh-TW"},{name:"Microsoft David Mobile - English (United States)",lang:"en-US"},{name:"Microsoft Zira Mobile - English (United States)",lang:"en-US"},{name:"Microsoft Mark Mobile - English (United States)",lang:"en-US"},{name:"native",lang:""},{name:"Google español"},{name:"Google español de Estados Unidos"},{name:"Google français"},{name:"Google Bahasa Indonesia"},{name:"Google italiano"},{name:"Google Nederlands"},{name:"Google polski"},{name:"Google português do Brasil"},{name:"Google русский"},{name:"Google हिन्दी"},{name:"Google 日本語"},{name:"Google 普通话（中国大陆）"},{name:"Google 粤語（香港）"},{name:"zh-HK",rate:.25},{name:"Fallback Chinese (Hong Kong) Female",lang:"zh-HK",fallbackvoice:!0,service:"g1"},{name:"Google 粤語（香港）"},{name:"zh-TW",rate:.25},{name:"Fallback Chinese (Taiwan) Female",lang:"zh-TW",fallbackvoice:!0,service:"g1"},{name:"Microsoft George Mobile - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Susan Mobile - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Hazel Mobile - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Heera Mobile - English (India)",lang:"en-In"},{name:"Microsoft Irina Mobile - Russian (Russia)",lang:"ru-RU"},{name:"Microsoft Hedda Mobile - German (Germany)",lang:"de-DE"},{name:"Microsoft Katja Mobile - German (Germany)",lang:"de-DE"},{name:"Microsoft Helena Mobile - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Laura Mobile - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Sabina Mobile - Spanish (Mexico)",lang:"es-MX"},{name:"Microsoft Julie Mobile - French (France)",lang:"fr-FR"},{name:"Microsoft Paulina Mobile - Polish (Poland)",lang:"pl-PL"},{name:"Microsoft Huihui Mobile - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Yaoyao Mobile - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Tracy Mobile - Chinese (Traditional, Hong Kong S.A.R.)",lang:"zh-CN"},{name:"Microsoft Elsa Mobile - Italian (Italy)",lang:"it-IT"},{name:"Microsoft Maria Mobile - Portuguese (Brazil)",lang:"pt-BR"},{name:"Microsoft Ayumi Mobile - Japanese (Japan)",lang:"ja-JP"},{name:"Microsoft Haruka Mobile - Japanese (Japan)",lang:"ja-JP"},{name:"Helena",lang:"de-DE"},{name:"Catherine",lang:"en-AU"},{name:"Arthur",lang:"en-GB"},{name:"Martha",lang:"en-GB"},{name:"Marie",lang:"fr-FR"},{name:"O-ren",lang:"ja-JP"},{name:"Yu-shu",lang:"zh-CN"},{name:"Microsoft David - English (United States)",lang:"en-US"},{name:"Microsoft Zira - English (United States)",lang:"en-US"},{name:"Microsoft Mark - English (United States)",lang:"en-US"},{name:"Microsoft George - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Susan - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Hazel - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Heera - English (India)",lang:"en-In"},{name:"Microsoft Irina - Russian (Russia)",lang:"ru-RU"},{name:"Microsoft Hedda - German (Germany)",lang:"de-DE"},{name:"Microsoft Katja - German (Germany)",lang:"de-DE"},{name:"Microsoft Helena - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Laura - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Sabina - Spanish (Mexico)",lang:"es-MX"},{name:"Microsoft Julie - French (France)",lang:"fr-FR"},{name:"Microsoft Paulina - Polish (Poland)",lang:"pl-PL"},{name:"Microsoft Huihui - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Yaoyao - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Tracy - Chinese (Traditional, Hong Kong S.A.R.)",lang:"zh-CN"},{name:"Microsoft Elsa - Italian (Italy)",lang:"it-IT"},{name:"Microsoft Maria - Portuguese (Brazil)",lang:"pt-BR"},{name:"Microsoft Ayumi - Japanese (Japan)",lang:"ja-JP"},{name:"Microsoft Haruka - Japanese (Japan)",lang:"ja-JP"},{name:"Microsoft Hortense - French (France)",lang:"fr-FR"},{name:"Microsoft Hanhan - Chinese (Traditional, Taiwan)",lang:"zh-TW"},{name:"Microsoft Heami - Korean (Korean)",lang:"ko-KR"},{name:"Microsoft Stefan - German (Germany)",lang:"de-DE"},{name:"Microsoft Ravi - English (India)",lang:"en-IN"},{name:"Microsoft Pablo - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Raul - Spanish (Mexico)",lang:"es-MX"},{name:"Microsoft Paul - French (France)",lang:"fr-FR"},{name:"Microsoft Cosimo - Italian (Italy)",lang:"it-IT"},{name:"Microsoft Ichiro - Japanese (Japan)",lang:"ja-JP"},{name:"Microsoft Adam - Polish (Poland)",lang:"pl-PL"},{name:"Microsoft Daniel - Portuguese (Brazil)",lang:"pt-BR"},{name:"Microsoft Pavel - Russian (Russia)",lang:"ru-RU"},{name:"Microsoft Kangkang - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Danny - Chinese (Traditional, Hong Kong S.A.R.)",lang:"zh-HK"},{name:"Microsoft Yating - Chinese (Traditional, Taiwan)",lang:"zh-TW"},{name:"Microsoft Zhiwei - Chinese (Traditional, Taiwan)",lang:"zh-TW"},{name:"Microsoft Hortense Mobile - French (France)",lang:"fr-FR"},{name:"Microsoft Hanhan Mobile - Chinese (Traditional, Taiwan)",lang:"zh-TW"},{name:"Microsoft Heami Mobile - Korean (Korean)",lang:"ko-KR"},{name:"Microsoft Stefan Mobile - German (Germany)",lang:"de-DE"},{name:"Microsoft Ravi Mobile - English (India)",lang:"en-IN"},{name:"Microsoft Pablo Mobile - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Raul Mobile - Spanish (Mexico)",lang:"es-MX"},{name:"Microsoft Paul Mobile - French (France)",lang:"fr-FR"},{name:"Microsoft Cosimo Mobile - Italian (Italy)",lang:"it-IT"},{name:"Microsoft Ichiro Mobile - Japanese (Japan)",lang:"ja-JP"},{name:"Microsoft Adam Mobile - Polish (Poland)",lang:"pl-PL"},{name:"Microsoft Daniel Mobile - Portuguese (Brazil)",lang:"pt-BR"},{name:"Microsoft Pavel Mobile - Russian (Russia)",lang:"ru-RU"},{name:"Microsoft Kangkang Mobile - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Danny Mobile - Chinese (Traditional, Hong Kong S.A.R.)",lang:"zh-HK"},{name:"Microsoft Yating Mobile - Chinese (Traditional, Taiwan)",lang:"zh-TW"},{name:"Microsoft Zhiwei Mobile - Chinese (Traditional, Taiwan)",lang:"zh-TW"},{name:"Microsoft David Desktop - English (United States)",lang:"en-US"},{name:"Microsoft Zira Desktop - English (United States)",lang:"en-US"},{name:"Microsoft Mark Desktop - English (United States)",lang:"en-US"},{name:"Microsoft George Desktop - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Susan Desktop - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Hazel Desktop - English (United Kingdom)",lang:"en-GB"},{name:"Microsoft Heera Desktop - English (India)",lang:"en-In"},{name:"Microsoft Irina Desktop - Russian (Russia)",lang:"ru-RU"},{name:"Microsoft Hedda Desktop - German (Germany)",lang:"de-DE"},{name:"Microsoft Katja Desktop - German (Germany)",lang:"de-DE"},{name:"Microsoft Helena Desktop - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Laura Desktop - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Sabina Desktop - Spanish (Mexico)",lang:"es-MX"},{name:"Microsoft Julie Desktop - French (France)",lang:"fr-FR"},{name:"Microsoft Paulina Desktop - Polish (Poland)",lang:"pl-PL"},{name:"Microsoft Huihui Desktop - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Yaoyao Desktop - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Tracy Desktop - Chinese (Traditional, Hong Kong S.A.R.)",lang:"zh-CN"},{name:"Microsoft Elsa Desktop - Italian (Italy)",lang:"it-IT"},{name:"Microsoft Maria Desktop - Portuguese (Brazil)",lang:"pt-BR"},{name:"Microsoft Ayumi Desktop - Japanese (Japan)",lang:"ja-JP"},{name:"Microsoft Haruka Desktop - Japanese (Japan)",lang:"ja-JP"},{name:"Microsoft Hortense Desktop - French (France)",lang:"fr-FR"},{name:"Microsoft Hanhan Desktop - Chinese (Traditional, Taiwan)",lang:"zh-TW"},{name:"Microsoft Heami Desktop - Korean (Korean)",lang:"ko-KR"},{name:"Microsoft Stefan Desktop - German (Germany)",lang:"de-DE"},{name:"Microsoft Ravi Desktop - English (India)",lang:"en-IN"},{name:"Microsoft Pablo Desktop - Spanish (Spain)",lang:"es-ES"},{name:"Microsoft Raul Desktop - Spanish (Mexico)",lang:"es-MX"},{name:"Microsoft Paul Desktop - French (France)",lang:"fr-FR"},{name:"Microsoft Cosimo Desktop - Italian (Italy)",lang:"it-IT"},{name:"Microsoft Ichiro Desktop - Japanese (Japan)",lang:"ja-JP"},{name:"Microsoft Adam Desktop - Polish (Poland)",lang:"pl-PL"},{name:"Microsoft Daniel Desktop - Portuguese (Brazil)",lang:"pt-BR"},{name:"Microsoft Pavel Desktop - Russian (Russia)",lang:"ru-RU"},{name:"Microsoft Kangkang Desktop - Chinese (Simplified, PRC)",lang:"zh-CN"},{name:"Microsoft Danny Desktop - Chinese (Traditional, Hong Kong S.A.R.)",lang:"zh-HK"},{name:"Microsoft Yating Desktop - Chinese (Traditional, Taiwan)",lang:"zh-TW"},{name:"Microsoft Zhiwei Desktop - Chinese (Traditional, Taiwan)",lang:"zh-TW"}],a.iOS=/(iPad|iPhone|iPod)/g.test(navigator.userAgent),a.iOS9=/(iphone|ipod|ipad).* os 9_/.test(navigator.userAgent.toLowerCase()),a.iOS10=/(iphone|ipod|ipad).* os 10_/.test(navigator.userAgent.toLowerCase()),a.iOS9plus=/(iphone|ipod|ipad).* os 10_/.test(navigator.userAgent.toLowerCase())||/(iphone|ipod|ipad).* os 10_/.test(navigator.userAgent.toLowerCase()),a.is_chrome=-1<navigator.userAgent.indexOf("Chrome"),a.is_safari=-1<navigator.userAgent.indexOf("Safari"),a.is_chrome&&a.is_safari&&(a.is_safari=!1),a.is_opera=!!window.opera||0<=navigator.userAgent.indexOf(" OPR/"),a.is_android=-1<navigator.userAgent.toLowerCase().indexOf("android"),a.iOS_initialized=!1,a.iOS9_initialized=!1,a.iOS10_initialized=!1,a.cache_ios_voices=[{name:"he-IL",voiceURI:"he-IL",lang:"he-IL"},{name:"th-TH",voiceURI:"th-TH",lang:"th-TH"},{name:"pt-BR",voiceURI:"pt-BR",lang:"pt-BR"},{name:"sk-SK",voiceURI:"sk-SK",lang:"sk-SK"},{name:"fr-CA",voiceURI:"fr-CA",lang:"fr-CA"},{name:"ro-RO",voiceURI:"ro-RO",lang:"ro-RO"},{name:"no-NO",voiceURI:"no-NO",lang:"no-NO"},{name:"fi-FI",voiceURI:"fi-FI",lang:"fi-FI"},{name:"pl-PL",voiceURI:"pl-PL",lang:"pl-PL"},{name:"de-DE",voiceURI:"de-DE",lang:"de-DE"},{name:"nl-NL",voiceURI:"nl-NL",lang:"nl-NL"},{name:"id-ID",voiceURI:"id-ID",lang:"id-ID"},{name:"tr-TR",voiceURI:"tr-TR",lang:"tr-TR"},{name:"it-IT",voiceURI:"it-IT",lang:"it-IT"},{name:"pt-PT",voiceURI:"pt-PT",lang:"pt-PT"},{name:"fr-FR",voiceURI:"fr-FR",lang:"fr-FR"},{name:"ru-RU",voiceURI:"ru-RU",lang:"ru-RU"},{name:"es-MX",voiceURI:"es-MX",lang:"es-MX"},{name:"zh-HK",voiceURI:"zh-HK",lang:"zh-HK"},{name:"sv-SE",voiceURI:"sv-SE",lang:"sv-SE"},{name:"hu-HU",voiceURI:"hu-HU",lang:"hu-HU"},{name:"zh-TW",voiceURI:"zh-TW",lang:"zh-TW"},{name:"es-ES",voiceURI:"es-ES",lang:"es-ES"},{name:"zh-CN",voiceURI:"zh-CN",lang:"zh-CN"},{name:"nl-BE",voiceURI:"nl-BE",lang:"nl-BE"},{name:"en-GB",voiceURI:"en-GB",lang:"en-GB"},{name:"ar-SA",voiceURI:"ar-SA",lang:"ar-SA"},{name:"ko-KR",voiceURI:"ko-KR",lang:"ko-KR"},{name:"cs-CZ",voiceURI:"cs-CZ",lang:"cs-CZ"},{name:"en-ZA",voiceURI:"en-ZA",lang:"en-ZA"},{name:"en-AU",voiceURI:"en-AU",lang:"en-AU"},{name:"da-DK",voiceURI:"da-DK",lang:"da-DK"},{name:"en-US",voiceURI:"en-US",lang:"en-US"},{name:"en-IE",voiceURI:"en-IE",lang:"en-IE"},{name:"hi-IN",voiceURI:"hi-IN",lang:"hi-IN"},{name:"el-GR",voiceURI:"el-GR",lang:"el-GR"},{name:"ja-JP",voiceURI:"ja-JP",lang:"ja-JP"}],a.cache_ios9_voices=[{name:"Maged",voiceURI:"com.apple.ttsbundle.Maged-compact",lang:"ar-SA",localService:!0,default:!0},{name:"Zuzana",voiceURI:"com.apple.ttsbundle.Zuzana-compact",lang:"cs-CZ",localService:!0,default:!0},{name:"Sara",voiceURI:"com.apple.ttsbundle.Sara-compact",lang:"da-DK",localService:!0,default:!0},{name:"Anna",voiceURI:"com.apple.ttsbundle.Anna-compact",lang:"de-DE",localService:!0,default:!0},{name:"Melina",voiceURI:"com.apple.ttsbundle.Melina-compact",lang:"el-GR",localService:!0,default:!0},{name:"Karen",voiceURI:"com.apple.ttsbundle.Karen-compact",lang:"en-AU",localService:!0,default:!0},{name:"Daniel",voiceURI:"com.apple.ttsbundle.Daniel-compact",lang:"en-GB",localService:!0,default:!0},{name:"Moira",voiceURI:"com.apple.ttsbundle.Moira-compact",lang:"en-IE",localService:!0,default:!0},{name:"Samantha (Enhanced)",voiceURI:"com.apple.ttsbundle.Samantha-premium",lang:"en-US",localService:!0,default:!0},{name:"Samantha",voiceURI:"com.apple.ttsbundle.Samantha-compact",lang:"en-US",localService:!0,default:!0},{name:"Tessa",voiceURI:"com.apple.ttsbundle.Tessa-compact",lang:"en-ZA",localService:!0,default:!0},{name:"Monica",voiceURI:"com.apple.ttsbundle.Monica-compact",lang:"es-ES",localService:!0,default:!0},{name:"Paulina",voiceURI:"com.apple.ttsbundle.Paulina-compact",lang:"es-MX",localService:!0,default:!0},{name:"Satu",voiceURI:"com.apple.ttsbundle.Satu-compact",lang:"fi-FI",localService:!0,default:!0},{name:"Amelie",voiceURI:"com.apple.ttsbundle.Amelie-compact",lang:"fr-CA",localService:!0,default:!0},{name:"Thomas",voiceURI:"com.apple.ttsbundle.Thomas-compact",lang:"fr-FR",localService:!0,default:!0},{name:"Carmit",voiceURI:"com.apple.ttsbundle.Carmit-compact",lang:"he-IL",localService:!0,default:!0},{name:"Lekha",voiceURI:"com.apple.ttsbundle.Lekha-compact",lang:"hi-IN",localService:!0,default:!0},{name:"Mariska",voiceURI:"com.apple.ttsbundle.Mariska-compact",lang:"hu-HU",localService:!0,default:!0},{name:"Damayanti",voiceURI:"com.apple.ttsbundle.Damayanti-compact",lang:"id-ID",localService:!0,default:!0},{name:"Alice",voiceURI:"com.apple.ttsbundle.Alice-compact",lang:"it-IT",localService:!0,default:!0},{name:"Kyoko",voiceURI:"com.apple.ttsbundle.Kyoko-compact",lang:"ja-JP",localService:!0,default:!0},{name:"Yuna",voiceURI:"com.apple.ttsbundle.Yuna-compact",lang:"ko-KR",localService:!0,default:!0},{name:"Ellen",voiceURI:"com.apple.ttsbundle.Ellen-compact",lang:"nl-BE",localService:!0,default:!0},{name:"Xander",voiceURI:"com.apple.ttsbundle.Xander-compact",lang:"nl-NL",localService:!0,default:!0},{name:"Nora",voiceURI:"com.apple.ttsbundle.Nora-compact",lang:"no-NO",localService:!0,default:!0},{name:"Zosia",voiceURI:"com.apple.ttsbundle.Zosia-compact",lang:"pl-PL",localService:!0,default:!0},{name:"Luciana",voiceURI:"com.apple.ttsbundle.Luciana-compact",lang:"pt-BR",localService:!0,default:!0},{name:"Joana",voiceURI:"com.apple.ttsbundle.Joana-compact",lang:"pt-PT",localService:!0,default:!0},{name:"Ioana",voiceURI:"com.apple.ttsbundle.Ioana-compact",lang:"ro-RO",localService:!0,default:!0},{name:"Milena",voiceURI:"com.apple.ttsbundle.Milena-compact",lang:"ru-RU",localService:!0,default:!0},{name:"Laura",voiceURI:"com.apple.ttsbundle.Laura-compact",lang:"sk-SK",localService:!0,default:!0},{name:"Alva",voiceURI:"com.apple.ttsbundle.Alva-compact",lang:"sv-SE",localService:!0,default:!0},{name:"Kanya",voiceURI:"com.apple.ttsbundle.Kanya-compact",lang:"th-TH",localService:!0,default:!0},{name:"Yelda",voiceURI:"com.apple.ttsbundle.Yelda-compact",lang:"tr-TR",localService:!0,default:!0},{name:"Ting-Ting",voiceURI:"com.apple.ttsbundle.Ting-Ting-compact",lang:"zh-CN",localService:!0,default:!0},{name:"Sin-Ji",voiceURI:"com.apple.ttsbundle.Sin-Ji-compact",lang:"zh-HK",localService:!0,default:!0},{name:"Mei-Jia",voiceURI:"com.apple.ttsbundle.Mei-Jia-compact",lang:"zh-TW",localService:!0,default:!0}],a.cache_ios10_voices=[{name:"Maged",voiceURI:"com.apple.ttsbundle.Maged-compact",lang:"ar-SA"},{name:"Zuzana",voiceURI:"com.apple.ttsbundle.Zuzana-compact",lang:"cs-CZ"},{name:"Sara",voiceURI:"com.apple.ttsbundle.Sara-compact",lang:"da-DK"},{name:"Anna",voiceURI:"com.apple.ttsbundle.Anna-compact",lang:"de-DE"},{name:"Helena",voiceURI:"com.apple.ttsbundle.siri_female_de-DE_compact",lang:"de-DE"},{name:"Martin",voiceURI:"com.apple.ttsbundle.siri_male_de-DE_compact",lang:"de-DE"},{name:"Nikos (Enhanced)",voiceURI:"com.apple.ttsbundle.Nikos-premium",lang:"el-GR"},{name:"Melina",voiceURI:"com.apple.ttsbundle.Melina-compact",lang:"el-GR"},{name:"Nikos",voiceURI:"com.apple.ttsbundle.Nikos-compact",lang:"el-GR"},{name:"Catherine",voiceURI:"com.apple.ttsbundle.siri_female_en-AU_compact",lang:"en-AU"},{name:"Gordon",voiceURI:"com.apple.ttsbundle.siri_male_en-AU_compact",lang:"en-AU"},{name:"Karen",voiceURI:"com.apple.ttsbundle.Karen-compact",lang:"en-AU"},{name:"Daniel (Enhanced)",voiceURI:"com.apple.ttsbundle.Daniel-premium",lang:"en-GB"},{name:"Arthur",voiceURI:"com.apple.ttsbundle.siri_male_en-GB_compact",lang:"en-GB"},{name:"Daniel",voiceURI:"com.apple.ttsbundle.Daniel-compact",lang:"en-GB"},{name:"Martha",voiceURI:"com.apple.ttsbundle.siri_female_en-GB_compact",lang:"en-GB"},{name:"Moira",voiceURI:"com.apple.ttsbundle.Moira-compact",lang:"en-IE"},{name:"Nicky (Enhanced)",voiceURI:"com.apple.ttsbundle.siri_female_en-US_premium",lang:"en-US"},{name:"Samantha (Enhanced)",voiceURI:"com.apple.ttsbundle.Samantha-premium",lang:"en-US"},{name:"Aaron",voiceURI:"com.apple.ttsbundle.siri_male_en-US_compact",lang:"en-US"},{name:"Fred",voiceURI:"com.apple.speech.synthesis.voice.Fred",lang:"en-US"},{name:"Nicky",voiceURI:"com.apple.ttsbundle.siri_female_en-US_compact",lang:"en-US"},{name:"Samantha",voiceURI:"com.apple.ttsbundle.Samantha-compact",lang:"en-US"},{name:"Tessa",voiceURI:"com.apple.ttsbundle.Tessa-compact",lang:"en-ZA"},{name:"Monica",voiceURI:"com.apple.ttsbundle.Monica-compact",lang:"es-ES"},{name:"Paulina",voiceURI:"com.apple.ttsbundle.Paulina-compact",lang:"es-MX"},{name:"Satu",voiceURI:"com.apple.ttsbundle.Satu-compact",lang:"fi-FI"},{name:"Amelie",voiceURI:"com.apple.ttsbundle.Amelie-compact",lang:"fr-CA"},{name:"Daniel",voiceURI:"com.apple.ttsbundle.siri_male_fr-FR_compact",lang:"fr-FR"},{name:"Marie",voiceURI:"com.apple.ttsbundle.siri_female_fr-FR_compact",lang:"fr-FR"},{name:"Thomas",voiceURI:"com.apple.ttsbundle.Thomas-compact",lang:"fr-FR"},{name:"Carmit",voiceURI:"com.apple.ttsbundle.Carmit-compact",lang:"he-IL"},{name:"Lekha",voiceURI:"com.apple.ttsbundle.Lekha-compact",lang:"hi-IN"},{name:"Mariska",voiceURI:"com.apple.ttsbundle.Mariska-compact",lang:"hu-HU"},{name:"Damayanti",voiceURI:"com.apple.ttsbundle.Damayanti-compact",lang:"id-ID"},{name:"Alice",voiceURI:"com.apple.ttsbundle.Alice-compact",lang:"it-IT"},{name:"Hattori",voiceURI:"com.apple.ttsbundle.siri_male_ja-JP_compact",lang:"ja-JP"},{name:"Kyoko",voiceURI:"com.apple.ttsbundle.Kyoko-compact",lang:"ja-JP"},{name:"O-ren",voiceURI:"com.apple.ttsbundle.siri_female_ja-JP_compact",lang:"ja-JP"},{name:"Yuna",voiceURI:"com.apple.ttsbundle.Yuna-compact",lang:"ko-KR"},{name:"Ellen",voiceURI:"com.apple.ttsbundle.Ellen-compact",lang:"nl-BE"},{name:"Xander",voiceURI:"com.apple.ttsbundle.Xander-compact",lang:"nl-NL"},{name:"Nora",voiceURI:"com.apple.ttsbundle.Nora-compact",lang:"no-NO"},{name:"Zosia",voiceURI:"com.apple.ttsbundle.Zosia-compact",lang:"pl-PL"},{name:"Luciana",voiceURI:"com.apple.ttsbundle.Luciana-compact",lang:"pt-BR"},{name:"Joana",voiceURI:"com.apple.ttsbundle.Joana-compact",lang:"pt-PT"},{name:"Ioana",voiceURI:"com.apple.ttsbundle.Ioana-compact",lang:"ro-RO"},{name:"Milena",voiceURI:"com.apple.ttsbundle.Milena-compact",lang:"ru-RU"},{name:"Laura",voiceURI:"com.apple.ttsbundle.Laura-compact",lang:"sk-SK"},{name:"Alva",voiceURI:"com.apple.ttsbundle.Alva-compact",lang:"sv-SE"},{name:"Kanya",voiceURI:"com.apple.ttsbundle.Kanya-compact",lang:"th-TH"},{name:"Yelda",voiceURI:"com.apple.ttsbundle.Yelda-compact",lang:"tr-TR"},{name:"Li-mu",voiceURI:"com.apple.ttsbundle.siri_male_zh-CN_compact",lang:"zh-CN"},{name:"Ting-Ting",voiceURI:"com.apple.ttsbundle.Ting-Ting-compact",lang:"zh-CN"},{name:"Yu-shu",voiceURI:"com.apple.ttsbundle.siri_female_zh-CN_compact",lang:"zh-CN"},{name:"Sin-Ji",voiceURI:"com.apple.ttsbundle.Sin-Ji-compact",lang:"zh-HK"},{name:"Mei-Jia",voiceURI:"com.apple.ttsbundle.Mei-Jia-compact",lang:"zh-TW"}],a.systemvoices=null,a.CHARACTER_LIMIT=100,a.VOICESUPPORT_ATTEMPTLIMIT=5,a.voicesupport_attempts=0,a.fallbackMode=!1,a.WORDS_PER_MINUTE=130,a.fallback_audio=null,a.fallback_playbackrate=1,a.def_fallback_playbackrate=a.fallback_playbackrate,a.fallback_audiopool=[],a.msgparameters=null,a.timeoutId=null,a.OnLoad_callbacks=[],a.useTimer=!1,a.utterances=[],a.userInteractionEvents=["mousedown","mouseup","mousewheel","keydown"],a.fallbackBufferLength=5,a.tstCompiled=function(a){return eval("typeof xy === 'undefined'")},a.fallbackServicePath="https://code.responsivevoice.org/"+(a.tstCompiled()?"":"develop/")+"getvoice.php",a.default_rv=a.responsivevoices[0],a.debug=!1,a.rvsMapped=!1,a.forcedFallbackMode=!1,a.speechAllowedByUser=!0,a.log=function(e){a.debug&&console.log(e)},a.init=function(){a.is_android&&(a.useTimer=!0),a.is_opera||"undefined"==typeof speechSynthesis?(console.log("RV: Voice synthesis not supported"),a.enableFallbackMode()):setTimeout(function(){var e=setInterval(function(){var n=window.speechSynthesis.getVoices();0!=n.length||null!=a.systemvoices&&0!=a.systemvoices.length?(console.log("RV: Voice support ready"),a.systemVoicesReady(n),clearInterval(e)):(console.log("Voice support NOT ready"),a.voicesupport_attempts++,a.voicesupport_attempts>a.VOICESUPPORT_ATTEMPTLIMIT&&(clearInterval(e),null!=window.speechSynthesis?a.iOS?(a.iOS10?a.systemVoicesReady(a.cache_ios10_voices):a.iOS9?a.systemVoicesReady(a.cache_ios9_voices):a.systemVoicesReady(a.cache_ios_voices),console.log("RV: Voice support ready (cached)")):(console.log("RV: speechSynthesis present but no system voices found"),a.enableFallbackMode()):a.enableFallbackMode()))},100)},100),(a.iOS||a.is_android||a.is_safari)&&a.enableWindowClickHook(),a.Dispatch("OnLoad")},a.systemVoicesReady=function(e){a.systemvoices=e,a.mapRVs(),null!=a.OnVoiceReady&&a.OnVoiceReady.call(),a.Dispatch("OnReady"),window.hasOwnProperty("dispatchEvent")&&window.dispatchEvent(new Event("ResponsiveVoice_OnReady"))},a.enableFallbackMode=function(){a.fallbackMode=!0,a.forcedFallbackMode=!0,console.log("RV: Enabling fallback mode"),a.mapRVs(),null!=a.OnVoiceReady&&a.OnVoiceReady.call(),a.Dispatch("OnReady"),window.hasOwnProperty("dispatchEvent")&&window.dispatchEvent(new Event("ResponsiveVoice_OnReady")),a.Dispatch("OnServiceSwitched")},a.getVoices=function(){for(var e=[],n=0;n<a.responsivevoices.length;n++)e.push({name:a.responsivevoices[n].name});return e},a.speak=function(e,n,l){if(a.rvsMapped){var o=null;if(a.isPlaying())a.log("Cancelling previous speech"),a.cancel(),setTimeout(function(){a.speak(e,n,l)},50);else{e=e.replace(/["`]/gm,"'"),a.msgparameters=l||{},a.msgtext=e,a.msgvoicename=n,a.onstartFired=!1;var i=[];if(e.length>a.CHARACTER_LIMIT){for(var c=e;c.length>a.CHARACTER_LIMIT;){var t=c.search(/([:!\u00a1?\u00bf;\(\)\[\]\u2014\u00ab\u00bb\n]+|\.[^0-9]+)/),s="";if((-1==t||t>=a.CHARACTER_LIMIT)&&(t=c.search(/,[^0-9]+/)),-1==t&&-1==c.search(" ")&&(t=99),-1==t||t>=a.CHARACTER_LIMIT){var r=c.split(" ");for(t=0;t<r.length&&!(s.length+r[t].length+1>a.CHARACTER_LIMIT);t++)s+=(0!=t?" ":"")+r[t]}else s=c.substr(0,t+1);c=c.substr(s.length,c.length-s.length),i.push(s)}0<c.length&&i.push(c)}else i.push(e);if(console.log(i),a.multipartText=i,null==n?(t=a.default_rv,a.setDefaultVoice(t.name)):t=a.getResponsiveVoice(n),!0===t.deprecated&&console.warn("ResponsiveVoice: Voice "+t.name+" is deprecated and will be removed in future releases"),c={},null!=t.mappedProfile)c=t.mappedProfile;else if(c.systemvoice=a.getMatchedVoice(t),c.collectionvoice={},null==c.systemvoice)return void console.log("RV: ERROR: No voice found for: "+n);if(a.checkSpeechAllowed()){for(a.fallbackMode&&0<a.fallback_audiopool.length&&a.clearFallbackPool(),a.msgprofile=c,a.log("Voice picked: "+a.msgprofile.systemvoice.name),a.utterances=[],a.fallbackChunks=[],t=0;t<i.length;t++)if(!a.fallbackMode&&a.getServiceEnabled(a.services.NATIVE_TTS))a.log("Using SpeechSynthesis"),o=a.services.NATIVE_TTS,s=new SpeechSynthesisUtterance,s.voiceURI=c.systemvoice.voiceURI,s.volume=a.selectBest([c.collectionvoice.volume,c.systemvoice.volume,1]),s.rate=a.selectBest([a.iOS9plus?1:null,c.collectionvoice.rate,c.systemvoice.rate,1]),s.pitch=a.selectBest([c.collectionvoice.pitch,c.systemvoice.pitch,1]),s.text=i[t],s.lang=a.selectBest([c.collectionvoice.lang,c.systemvoice.lang]),s.rvIndex=t,s.rvTotal=i.length,0==t&&(s.onstart=a.speech_onstart),a.msgparameters.onendcalled=!1,null!=l?(s.voice=void 0!==l.voice?l.voice:c.systemvoice,t<i.length-1&&1<i.length?(s.onend=a.onPartEnd,s.hasOwnProperty("addEventListener")&&s.addEventListener("end",a.onPartEnd)):(s.onend=a.speech_onend,s.hasOwnProperty("addEventListener")&&s.addEventListener("end",a.speech_onend)),s.onerror=l.onerror||function(e){a.log("RV: Unknow Error"),a.log(e)},s.onpause=l.onpause,s.onresume=l.onresume,s.onmark=l.onmark,s.onboundary=l.onboundary||a.onboundary,s.pitch=null!=l.pitch?l.pitch:s.pitch,s.rate=a.iOS?(null!=l.rate?l.rate*l.rate:1)*s.rate:(null!=l.rate?l.rate:1)*s.rate,s.volume=null!=l.volume?l.volume:s.volume):(a.log("No Params received for current Utterance"),s.voice=c.systemvoice,s.onend=a.speech_onend,s.onboundary=a.onboundary,s.onerror=function(e){a.log("RV: Unknow Error"),a.log(e)}),a.utterances.push(s),0==t&&(a.currentMsg=s),console.log(s),a.tts_speak(s);else if(a.fallbackMode&&a.getServiceEnabled(a.services.FALLBACK_AUDIO)){o=a.services.FALLBACK_AUDIO,a.fallback_playbackrate=a.def_fallback_playbackrate,s=a.selectBest([c.collectionvoice.pitch,c.systemvoice.pitch,1]),r=a.selectBest([a.iOS9plus?1:null,c.collectionvoice.rate,c.systemvoice.rate,1]);var m=a.selectBest([c.collectionvoice.volume,c.systemvoice.volume,1]);if(null!=l){s*=null!=l.pitch?l.pitch:1,r*=null!=l.rate?l.rate:1,m*=null!=l.volume?l.volume:1;var p=l.extraParams||null}s/=2,r/=2,m*=2,s=Math.min(Math.max(s,0),1),r=Math.min(Math.max(r,0),1),m=Math.min(Math.max(m,0),1),s=a.fallbackServicePath+"?t="+encodeURIComponent(i[t])+"&tl="+(c.collectionvoice.lang||c.systemvoice.lang||"en-US")+"&sv="+(c.collectionvoice.service||c.systemvoice.service||"")+"&vn="+(c.collectionvoice.voicename||c.systemvoice.voicename||"")+"&pitch="+s.toString()+"&rate="+r.toString()+"&vol="+m.toString(),p&&(s+="&extraParams="+JSON.stringify(p)),a.fallbackChunks.push({text:i[t],url:s,audio:null})}a.fallbackMode&&a.getServiceEnabled(a.services.FALLBACK_AUDIO)&&(a.fallbackChunkIndex=0,a.fallback_startPart()),a.log("Service used: "+o)}else a.scheduledSpeak={text:e,voicename:n,parameters:l}}}else setTimeout(function(){a.speak(e,n,l)},15)},a.startTimeout=function(e,n){var l=a.msgprofile.collectionvoice.timerSpeed;null==a.msgprofile.collectionvoice.timerSpeed&&(l=1),0>=l||(a.timeoutId=setTimeout(n,a.getEstimatedTimeLength(e,l)),a.log("Timeout ID: "+a.timeoutId))},a.checkAndCancelTimeout=function(){null!=a.timeoutId&&(clearTimeout(a.timeoutId),a.timeoutId=null)},a.speech_timedout=function(){a.cancel(),a.cancelled=!1,a.speech_onend()},a.speech_onend=function(){a.checkAndCancelTimeout(),!0===a.cancelled?a.cancelled=!1:(a.log("on end fired"),null!=a.msgparameters&&null!=a.msgparameters.onend&&1!=a.msgparameters.onendcalled&&(a.log("Speech on end called  -"+a.msgtext),a.msgparameters.onendcalled=!0,a.msgparameters.onend()))},a.speech_onstart=function(){a.onstartFired||(a.onstartFired=!0,a.log("Speech start"),(a.iOS||a.is_safari||a.useTimer)&&(a.fallbackMode||a.startTimeout(a.msgtext,a.speech_timedout)),a.msgparameters.onendcalled=!1,null!=a.msgparameters&&null!=a.msgparameters.onstart&&a.msgparameters.onstart())},a.fallback_startPart=function(){0==a.fallbackChunkIndex&&a.speech_onstart(),a.fallback_updateChunksBuffer(),a.fallback_audio=a.fallbackChunks[a.fallbackChunkIndex].audio,null==a.fallback_audio?a.log("RV: Fallback Audio is not available"):(function(){var e=a.fallback_audio;if(setTimeout(function(){e.playbackRate=a.fallback_playbackrate},50),e.onloadedmetadata=function(){e.playbackRate=a.fallback_playbackrate},2<=e.readyState)e.play();else{var n=function(){e.play(),e.removeEventListener("canplaythrough",n)};e.addEventListener("canplaythrough",n,!1)}}(),a.fallback_errors&&(a.log("RV: Speech cancelled due to errors"),a.speech_onend()),a.fallback_audio.addEventListener("ended",a.fallback_finishPart),a.useTimer&&a.startTimeout(a.multipartText[a.fallbackChunkIndex],a.fallback_finishPart))},a.isFallbackAudioPlaying=function(){var e;for(e=0;e<a.fallback_audiopool.length;e++){var n=a.fallback_audiopool[e];if(!n.paused&&!n.ended&&n.currentTime!=n.duration)return!0}return!1},a.fallback_finishPart=function(e){a.isFallbackAudioPlaying()?(a.checkAndCancelTimeout(),a.timeoutId=setTimeout(a.fallback_finishPart,1e3*(a.fallback_audio.duration-a.fallback_audio.currentTime))):(a.checkAndCancelTimeout(),a.fallbackChunkIndex<a.fallbackChunks.length-1?(a.fallbackChunkIndex++,a.fallback_startPart()):a.speech_onend())},a.cancel=function(){a.checkAndCancelTimeout(),a.fallbackMode?(null!=a.fallback_audio&&a.fallback_audio.pause(),a.clearFallbackPool()):(a.cancelled=!0,speechSynthesis.cancel())},a.voiceSupport=function(){return"speechSynthesis"in window},a.OnFinishedPlaying=function(e){null!=a.msgparameters&&null!=a.msgparameters.onend&&a.msgparameters.onend()},a.setDefaultVoice=function(e){if(a.rvsMapped){var n=a.getResponsiveVoice(e);null!=n&&(a.default_rv=n)}else setTimeout(function(){a.setDefaultVoice(e)},15)},a.mapRVs=function(){for(var e=0;e<a.responsivevoices.length;e++)for(var n=a.responsivevoices[e],l=0;l<n.voiceIDs.length;l++){var o=a.voicecollection[n.voiceIDs[l]];if(1==o.fallbackvoice){n.mappedProfile={systemvoice:{},collectionvoice:o};break}var i=a.getSystemVoice(o.name);if(a.forcedFallbackMode&&(i=null),null!=i){n.mappedProfile={systemvoice:i,collectionvoice:o};break}}a.rvsMapped=!0},a.getMatchedVoice=function(e){for(var n=0;n<e.voiceIDs.length;n++){var l=a.getSystemVoice(a.voicecollection[e.voiceIDs[n]].name);if(null!=l)return l}return null},a.getSystemVoice=function(e){var n=String.fromCharCode(160),l=e.replace(new RegExp("\\s+|"+n,"g"),"");if(void 0===a.systemvoices||null===a.systemvoices)return null;for(var o=0;o<a.systemvoices.length;o++)if(0===a.systemvoices[o].name.localeCompare(e)||0===a.systemvoices[o].name.replace(new RegExp("\\s+|"+n,"g"),"").replace(/ *\([^)]*\) */g,"").localeCompare(l))return a.systemvoices[o];return null},a.getResponsiveVoice=function(e){for(var n=0;n<a.responsivevoices.length;n++)if(a.responsivevoices[n].name==e)return e=a.fallbackMode,a.fallbackMode=!0===a.responsivevoices[n].mappedProfile.collectionvoice.fallbackvoice||!0===a.forcedFallbackMode,e!=a.fallbackMode&&(a.mapRVs(),a.Dispatch("OnServiceSwitched")),a.responsivevoices[n];return null},a.Dispatch=function(e){if(a.hasOwnProperty(e+"_callbacks")&&null!=a[e+"_callbacks"]&&0<a[e+"_callbacks"].length){for(var n=a[e+"_callbacks"],l=0;l<n.length;l++)n[l]();return!0}var o=e+"_callbacks_timeout",i=e+"_callbacks_timeoutCount";return a.hasOwnProperty(o)||(a[i]=10,a[o]=setInterval(function(){--a[i],(a.Dispatch(e)||0>a[i])&&clearTimeout(a[o])},50)),!1},a.AddEventListener=function(e,n){a.hasOwnProperty(e+"_callbacks")||(a[e+"_callbacks"]=[]),a[e+"_callbacks"].push(n)},a.addEventListener=a.AddEventListener,a.RemoveEventListener=function(e,n){a[e+"_callbacks"]&&-1!=a[e+"_callbacks"].indexOf(n)&&a[e+"_callbacks"].splice(a[e+"_callbacks"].indexOf(n),1)},a.clickEvent=function(){a.log("Click event"),a.click_event_detected=!0,a.initializePermissions(),a.userInteractionEvents.forEach(function(e){window.removeEventListener(e,a.clickEvent,!1)}),a.Dispatch("OnClickEvent")},a.initializePermissions=function(){if(a.iOS&&!a.iOS_initialized){a.log("Initializing iOS click event");var e=new SpeechSynthesisUtterance(" ");speechSynthesis.speak(e),a.iOS_initialized=!0}a.is_android&&!a.android_initialized&&(a.log("Initializing Android click event"),e=new SpeechSynthesisUtterance(" "),speechSynthesis.speak(e)),a.initFallbackPool()},a.isPlaying=function(){return a.fallbackMode?null!=a.fallback_audio&&!a.fallback_audio.ended&&!a.fallback_audio.paused:speechSynthesis.speaking},a.clearFallbackPool=function(){for(var e=0;e<a.fallback_audiopool.length;e++)null!=a.fallback_audiopool[e]&&(a.fallback_audiopool[e].pause(),a.fallback_audiopool[e].src="");a.fallback_audiopool_index=0,a.fallbackChunks=[]},a.initFallbackPool=function(){if(!a.fallback_audiopool||0==a.fallback_audiopool.length){for(var e=0;10>e;e++){var n=e,l=document.createElement("AUDIO");l.preload="auto",a.is_android&&(l.src="",l.load(),9==n&&(a.log("Android HTML audio initialized"),a.android_initialized=!0)),a.iOS&&(l.src="",l.load(),9==n&&(a.log("iOS HTML audio initialized"),a.iOS_initialized=!0)),a.fallback_audiopool.push(l)}a.fallback_audiopool_index=0}},a.allowSpeechClicked=function(e){a.allowSpeechDiv.parentNode.removeChild(a.allowSpeechDiv),a.allowSpeechDiv=null,(a.speechAllowedByUser=e)&&(a.clickEvent(),a.scheduledSpeak&&(a.speak(a.scheduledSpeak.text,a.scheduledSpeak.voicename,a.scheduledSpeak.parameters),a.scheduledSpeak=null)),a.Dispatch("OnAllowSpeechClicked")},a.checkSpeechAllowed=function(){if(0==a.speechAllowedByUser)return!1;if((a.is_android||a.iOS||a.is_safari&&(a.fallbackMode||a.forcedFallbackMode))&&!a.click_event_detected){if(a.allowSpeechDiv)return;if(a.allowSpeechDiv_appearances=null==a.allowSpeechDiv_appearances?1:++a.allowSpeechDiv_appearances,2<a.allowSpeechDiv_appearances)return console.log("ResponsiveVoice: Speech not allowed by user"),!1;var e=document.createElement("style");return e.innerHTML='.rvNotification{position:fixed;background-color:#fff;text-align:center;font-family:-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;font-weight:400;line-height:1.5;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19);z-index:10000;width:100vw;left:0;bottom:0;font-size:1rem;padding-bottom:.5em;padding-right:.5em}.rvButtonRow{padding-right:2em;padding-bottom:1em;text-align:right;font-size:medium}.rvButton{cursor:pointer;display:inline-block;margin-left:1em;padding:.8em 2em;border-radius:3px;font-size:small}.rvButtonAllow{border:none;background-color:#2b8cff;color:#fff}.rvButtonDeny{border:1px solid #2b8cff;color:#2b8cff;background-color:#fff}.rvTextRow{padding-top:1em;padding-bottom:2em}@media (min-width:576px){.rvNotification{width:60vw;left:20vw}}@media (min-width:768px){.rvNotification{width:50vw;left:25vw}}@media (min-width:992px){.rvNotification{width:40vw;left:30vw}}@media (min-width:1200px){.rvNotification{width:30vw;left:35vw}}',document.body.appendChild(e),a.allowSpeechDiv=document.createElement("div"),a.allowSpeechDiv.classList.add("rvNotification"),a.allowSpeechDiv.innerHTML='<div class="rvTextRow"><strong>'+window.location.hostname+'</strong> wants to use speech</div><div class="rvButtonRow"><div onclick="responsiveVoice.allowSpeechClicked(false);" class="rvButton rvButtonDeny">DENY</div><div onclick="responsiveVoice.allowSpeechClicked(true);" class="rvButton rvButtonAllow">ALLOW</div></div>',document.body.appendChild(a.allowSpeechDiv),!1}return!0},a.fallback_audioPool_getAudio=function(){return a.initFallbackPool(),a.fallback_audiopool_index>=a.fallback_audiopool.length&&(a.fallback_audiopool_index=0),a.fallback_audiopool[a.fallback_audiopool_index++]},a.fallback_updateChunksBuffer=function(){for(var e=a.fallbackChunkIndex;e<Math.min(a.fallbackChunks.length,a.fallbackChunkIndex+a.fallbackBufferLength);e++){var n=a.fallbackChunks[e];null==n.audio&&(n.audio=a.fallback_audioPool_getAudio(),n.audio.src=n.url,n.audio.playbackRate=a.fallback_playbackrate,n.audio.preload="auto",n.audio.load())}},a.selectBest=function(a){for(var e=0;e<a.length;e++)if(null!=a[e])return a[e];return null},a.pause=function(){a.fallbackMode?null!=a.fallback_audio&&a.fallback_audio.pause():speechSynthesis.pause()},a.resume=function(){a.fallbackMode?null!=a.fallback_audio&&a.fallback_audio.play():speechSynthesis.resume()},a.tts_speak=function(e){setTimeout(function(){a.cancelled=!1,speechSynthesis.speak(e)},.01)},a.setVolume=function(e){if(a.isPlaying())if(a.fallbackMode){for(var n=0;n<a.fallback_audiopool.length;n++)a.fallback_audiopool[n].volume=e;a.fallback_audio.volume=e}else for(n=0;n<a.utterances.length;n++)a.utterances[n].volume=e},a.onPartEnd=function(e){null!=a.msgparameters&&null!=a.msgparameters.onchuckend&&a.msgparameters.onchuckend(),a.Dispatch("OnPartEnd"),e=a.utterances.indexOf(e.utterance),a.currentMsg=a.utterances[e+1]},a.onboundary=function(e){a.log("On Boundary"),a.iOS&&!a.onstartFired&&a.speech_onstart()},a.numToWords=function(e){var n=function(a,e){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a)){var n=[],l=!0,o=!1,i=void 0;try{for(var c,t=a[Symbol.iterator]();!(l=(c=t.next()).done)&&(n.push(c.value),!e||n.length!==e);l=!0);}catch(a){o=!0,i=a}finally{try{!l&&t.return&&t.return()}finally{if(o)throw i}}return n}throw new TypeError("Invalid attempt to destructure non-iterable instance")},l=function(a){return 0===a.length},o=function(a){return function(e){return function(n){return a(e(n))}}},i=" one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "),c="  twenty thirty forty fifty sixty seventy eighty ninety".split(" "),t=" thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion".split(" ");return"number"==typeof e?a.numToWords(String(e)):"0"===e?"zero":o(function a(e){return function(n){return l(n)?[]:[(i=e,function(a){return a.slice(0,i)})(n)].concat(function(a){if(Array.isArray(a)){for(var e=0,n=Array(a.length);e<a.length;e++)n[e]=a[e];return n}return Array.from(a)}(a(e)((o=e,function(a){return a.slice(o)})(n))));var o,i}}(3))(function(a){return a.slice(0).reverse()})(Array.from(e)).map(function(a){var e=n(a,3);a=e[0];var l=e[1];return e=e[2],[0===(Number(e)||0)?"":i[e]+" hundred ",0===(Number(a)||0)?c[l]:c[l]&&c[l]+" "||"",i[l+a]||i[a]].join("")}).map(function(a,e){return""===a?a:a+" "+t[e]}).filter(o(function(a){return!a})(l)).reverse().join(" ").trim()},a.getWords=function(e){var n=(e=e.replace(/$|\u00a5|\u20a1|\u20ac|\u00a3|\u20aa|\u20b9|\uffe5|\u17db|\u20a9|\u20a6|\u0e3f|\u20b4|\u20ab/gi," dummy currency ")).split(/(\s*[\s,]\s*|\?|;|:|\.|\(|\)|!)/);n=n.filter(function(a){return/[^\s]/.test(a)});for(var l=0;l<n.length;l++)null!=(e=n[l].toString().match(/\d+/))&&(n.splice(l,1),a.numToWords(+e[0]).split(/\s+/).map(function(a){n.push(a)}));return n},a.getEstimatedTimeLength=function(e,n){var l=a.getWords(e),o=0,i=a.fallbackMode?1300:700;n=n||1,l.map(function(a,e){o+=(a.toString().match(/[^ ]/gim)||a).length});var c=l.length,t=60/a.WORDS_PER_MINUTE*n*1e3*c;return 5>c&&(t=n*(i+50*o)),a.log("Estimated time length: "+t+" ms, words: ["+l+"], charsCount: "+o),t},a.services={NATIVE_TTS:0,FALLBACK_AUDIO:1},a.servicesPriority=[0,1],a.servicesEnabled=[],a.setServiceEnabled=function(e,n){a.servicesEnabled[e]=n},a.getServiceEnabled=function(e){return a.servicesEnabled[e]||!1},a.setServiceEnabled(a.services.NATIVE_TTS,!0),a.setServiceEnabled(a.services.FALLBACK_AUDIO,!0),a.forceFallbackMode=function(e){a.forcedFallbackMode=e,a.fallbackMode=e,a.mapRVs(),a.Dispatch("OnServiceSwitched")},a.enableWindowClickHook=function(){a.userInteractionEvents.forEach(function(e){window.addEventListener(e,a.clickEvent,!1)})},"interactive"===document.readyState?a.init():document.addEventListener("DOMContentLoaded",function(){a.init()})},responsiveVoice=new ResponsiveVoice;